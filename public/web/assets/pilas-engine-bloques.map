{"version":3,"sources":["vendor/ember-cli/app-prefix.js","pilas-engine-bloques/actividades.js","pilas-engine-bloques/actividades/actividadAlien.js","pilas-engine-bloques/actividades/actividadElObreroCopado.js","pilas-engine-bloques/actividades/bloques.js","pilas-engine-bloques/adapters/application.js","pilas-engine-bloques/app.js","pilas-engine-bloques/components/em-button.js","pilas-engine-bloques/components/em-checkbox.js","pilas-engine-bloques/components/em-form-control-help.js","pilas-engine-bloques/components/em-form-group.js","pilas-engine-bloques/components/em-form-label.js","pilas-engine-bloques/components/em-form-submit.js","pilas-engine-bloques/components/em-form.js","pilas-engine-bloques/components/em-input.js","pilas-engine-bloques/components/em-modal-body.js","pilas-engine-bloques/components/em-modal-confirm-with-reason.js","pilas-engine-bloques/components/em-modal-confirm.js","pilas-engine-bloques/components/em-modal-emform.js","pilas-engine-bloques/components/em-modal-footer.js","pilas-engine-bloques/components/em-modal-form.js","pilas-engine-bloques/components/em-modal-title.js","pilas-engine-bloques/components/em-modal-toggler.js","pilas-engine-bloques/components/em-modal.js","pilas-engine-bloques/components/em-select.js","pilas-engine-bloques/components/em-text.js","pilas-engine-bloques/components/lf-outlet.js","pilas-engine-bloques/components/lf-overlay.js","pilas-engine-bloques/components/liquid-child.js","pilas-engine-bloques/components/liquid-container.js","pilas-engine-bloques/components/liquid-if.js","pilas-engine-bloques/components/liquid-measured.js","pilas-engine-bloques/components/liquid-modal.js","pilas-engine-bloques/components/liquid-outlet.js","pilas-engine-bloques/components/liquid-spacer.js","pilas-engine-bloques/components/liquid-versions.js","pilas-engine-bloques/components/liquid-with.js","pilas-engine-bloques/components/lm-container.js","pilas-engine-bloques/components/nw-zoom.js","pilas-engine-bloques/components/pilas-blockly.js","pilas-engine-bloques/components/pilas-canvas.js","pilas-engine-bloques/components/pilas-desafio.js","pilas-engine-bloques/controllers/application.js","pilas-engine-bloques/controllers/desafios/index.js","pilas-engine-bloques/controllers/editor.js","pilas-engine-bloques/controllers/galeria.js","pilas-engine-bloques/controllers/iframe.js","pilas-engine-bloques/controllers/preferencia.js","pilas-engine-bloques/helpers/fa-icon.js","pilas-engine-bloques/helpers/lf-yield-inverse.js","pilas-engine-bloques/helpers/liquid-bind.js","pilas-engine-bloques/helpers/liquid-if.js","pilas-engine-bloques/helpers/liquid-outlet.js","pilas-engine-bloques/helpers/liquid-unless.js","pilas-engine-bloques/helpers/liquid-with.js","pilas-engine-bloques/initialize.js","pilas-engine-bloques/initializers/app-version.js","pilas-engine-bloques/initializers/ember-idx-modal.js","pilas-engine-bloques/initializers/export-application-global.js","pilas-engine-bloques/initializers/liquid-fire.js","pilas-engine-bloques/models/galeria.js","pilas-engine-bloques/models/preferencium.js","pilas-engine-bloques/router.js","pilas-engine-bloques/routes/desafios.js","pilas-engine-bloques/routes/desafios/nombre.js","pilas-engine-bloques/routes/editor.js","pilas-engine-bloques/routes/galeria.js","pilas-engine-bloques/routes/iframe.js","pilas-engine-bloques/routes/index.js","pilas-engine-bloques/routes/preferencia.js","pilas-engine-bloques/routes/test.js","pilas-engine-bloques/routes/tips.js","pilas-engine-bloques/serializers/application.js","pilas-engine-bloques/services/actividades.js","pilas-engine-bloques/services/browser.js","pilas-engine-bloques/services/environment.js","pilas-engine-bloques/services/liquid-fire-modals.js","pilas-engine-bloques/services/liquid-fire-transitions.js","pilas-engine-bloques/services/twitter.js","pilas-engine-bloques/services/validations.js","pilas-engine-bloques/services/zoom.js","pilas-engine-bloques/templates/-compartir.js","pilas-engine-bloques/templates/-modal.js","pilas-engine-bloques/templates/-navbar.js","pilas-engine-bloques/templates/application.js","pilas-engine-bloques/templates/components/em-button.js","pilas-engine-bloques/templates/components/em-form-control-help.js","pilas-engine-bloques/templates/components/em-form-group.js","pilas-engine-bloques/templates/components/em-form-label.js","pilas-engine-bloques/templates/components/em-form-submit.js","pilas-engine-bloques/templates/components/em-form.js","pilas-engine-bloques/templates/components/em-modal-confirm.js","pilas-engine-bloques/templates/components/em-modal.js","pilas-engine-bloques/templates/components/formgroup/control-within-label.js","pilas-engine-bloques/templates/components/formgroup/form-group-control.js","pilas-engine-bloques/templates/components/formgroup/form-group.js","pilas-engine-bloques/templates/components/liquid-bind.js","pilas-engine-bloques/templates/components/liquid-container.js","pilas-engine-bloques/templates/components/liquid-if.js","pilas-engine-bloques/templates/components/liquid-measured.js","pilas-engine-bloques/templates/components/liquid-modal.js","pilas-engine-bloques/templates/components/liquid-outlet.js","pilas-engine-bloques/templates/components/liquid-spacer.js","pilas-engine-bloques/templates/components/liquid-versions.js","pilas-engine-bloques/templates/components/liquid-with.js","pilas-engine-bloques/templates/components/nw-zoom.js","pilas-engine-bloques/templates/components/pilas-blockly.js","pilas-engine-bloques/templates/components/pilas-canvas.js","pilas-engine-bloques/templates/components/pilas-desafio.js","pilas-engine-bloques/templates/desafios/error.js","pilas-engine-bloques/templates/desafios/index.js","pilas-engine-bloques/templates/desafios/nombre.js","pilas-engine-bloques/templates/editor.js","pilas-engine-bloques/templates/galeria.js","pilas-engine-bloques/templates/iframe.js","pilas-engine-bloques/templates/index.js","pilas-engine-bloques/templates/loading.js","pilas-engine-bloques/templates/preferencia.js","pilas-engine-bloques/templates/test.js","pilas-engine-bloques/templates/tips.js","pilas-engine-bloques/tests/actividades.jshint.js","pilas-engine-bloques/tests/actividades/actividadAlien.jshint.js","pilas-engine-bloques/tests/actividades/actividadElObreroCopado.jshint.js","pilas-engine-bloques/tests/actividades/bloques.jshint.js","pilas-engine-bloques/tests/adapters/application.jshint.js","pilas-engine-bloques/tests/app.jshint.js","pilas-engine-bloques/tests/components/nw-zoom.jshint.js","pilas-engine-bloques/tests/components/pilas-blockly.jshint.js","pilas-engine-bloques/tests/components/pilas-canvas.jshint.js","pilas-engine-bloques/tests/components/pilas-desafio.jshint.js","pilas-engine-bloques/tests/controllers/application.jshint.js","pilas-engine-bloques/tests/controllers/desafios/index.jshint.js","pilas-engine-bloques/tests/controllers/editor.jshint.js","pilas-engine-bloques/tests/controllers/galeria.jshint.js","pilas-engine-bloques/tests/controllers/iframe.jshint.js","pilas-engine-bloques/tests/controllers/preferencia.jshint.js","pilas-engine-bloques/tests/helpers/resolver.js","pilas-engine-bloques/tests/helpers/resolver.jshint.js","pilas-engine-bloques/tests/helpers/start-app.js","pilas-engine-bloques/tests/helpers/start-app.jshint.js","pilas-engine-bloques/tests/helpers/validate-properties.js","pilas-engine-bloques/tests/models/galeria.jshint.js","pilas-engine-bloques/tests/models/preferencium.jshint.js","pilas-engine-bloques/tests/router.jshint.js","pilas-engine-bloques/tests/routes/desafios.jshint.js","pilas-engine-bloques/tests/routes/desafios/nombre.jshint.js","pilas-engine-bloques/tests/routes/editor.jshint.js","pilas-engine-bloques/tests/routes/galeria.jshint.js","pilas-engine-bloques/tests/routes/iframe.jshint.js","pilas-engine-bloques/tests/routes/index.jshint.js","pilas-engine-bloques/tests/routes/preferencia.jshint.js","pilas-engine-bloques/tests/routes/test.jshint.js","pilas-engine-bloques/tests/routes/tips.jshint.js","pilas-engine-bloques/tests/serializers/application.jshint.js","pilas-engine-bloques/tests/services/actividades.jshint.js","pilas-engine-bloques/tests/services/browser.jshint.js","pilas-engine-bloques/tests/services/environment.jshint.js","pilas-engine-bloques/tests/services/twitter.jshint.js","pilas-engine-bloques/tests/services/zoom.jshint.js","pilas-engine-bloques/tests/test-helper.js","pilas-engine-bloques/tests/test-helper.jshint.js","pilas-engine-bloques/tests/transitions.jshint.js","pilas-engine-bloques/tests/unit/components/pilas-desafio-test.js","pilas-engine-bloques/tests/unit/components/pilas-desafio-test.jshint.js","pilas-engine-bloques/tests/unit/controllers/desafios-test.js","pilas-engine-bloques/tests/unit/controllers/desafios-test.jshint.js","pilas-engine-bloques/tests/unit/routes/desafios-test.js","pilas-engine-bloques/tests/unit/routes/desafios-test.jshint.js","pilas-engine-bloques/tests/unit/routes/desafios.index-test.js","pilas-engine-bloques/tests/unit/routes/desafios.index-test.jshint.js","pilas-engine-bloques/tests/unit/routes/index-test.js","pilas-engine-bloques/tests/unit/routes/index-test.jshint.js","pilas-engine-bloques/tests/unit/routes/test-test.js","pilas-engine-bloques/tests/unit/routes/test-test.jshint.js","pilas-engine-bloques/tests/unit/routes/tips-test.js","pilas-engine-bloques/tests/unit/routes/tips-test.jshint.js","pilas-engine-bloques/tests/unit/services/actividades-test.js","pilas-engine-bloques/tests/unit/services/actividades-test.jshint.js","pilas-engine-bloques/tests/unit/services/browser-test.js","pilas-engine-bloques/tests/unit/services/browser-test.jshint.js","pilas-engine-bloques/tests/unit/services/environment-test.js","pilas-engine-bloques/tests/unit/services/environment-test.jshint.js","pilas-engine-bloques/tests/unit/services/twitter-test.js","pilas-engine-bloques/tests/unit/services/twitter-test.jshint.js","pilas-engine-bloques/tests/unit/services/zoom-test.js","pilas-engine-bloques/tests/unit/services/zoom-test.jshint.js","pilas-engine-bloques/transitions.js","pilas-engine-bloques/transitions/cross-fade.js","pilas-engine-bloques/transitions/default.js","pilas-engine-bloques/transitions/explode.js","pilas-engine-bloques/transitions/fade.js","pilas-engine-bloques/transitions/flex-grow.js","pilas-engine-bloques/transitions/fly-to.js","pilas-engine-bloques/transitions/move-over.js","pilas-engine-bloques/transitions/scale.js","pilas-engine-bloques/transitions/scroll-then.js","pilas-engine-bloques/transitions/to-down.js","pilas-engine-bloques/transitions/to-left.js","pilas-engine-bloques/transitions/to-right.js","pilas-engine-bloques/transitions/to-up.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["/* jshint ignore:start */\n\n/* jshint ignore:end */\n","define('pilas-engine-bloques/actividades', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  Blockly.Blocks.primitivas = { COLOUR: \"#4a6cd4\" };\n  Blockly.Blocks.sensores = { COLOUR: \"#4a6cd4\" };\n  Blockly.Blocks.eventos = { COLOUR: \"#4a6cd4\" };\n\n  /* ============================================== */\n\n  /*\n   * Representa un bloque\n   * para el lenguaje de la actividad\n   */\n  var Bloque = Ember['default'].Object.extend({\n    init: function init() {},\n\n    block_init: function block_init() {},\n\n    /*jshint unused: vars*/\n    block_javascript: function block_javascript(block) {},\n\n    registrar_en_blockly: function registrar_en_blockly() {\n      var myThis = this;\n      Blockly.Blocks[this.get(\"id\")] = {\n        init: function init() {\n          myThis.block_init(this);\n        }\n      };\n\n      Blockly.JavaScript[this.get(\"id\")] = function (block) {\n        return myThis.block_javascript(block);\n      };\n    },\n\n    instanciar_para_workspace: function instanciar_para_workspace() {\n      this.registrar_en_blockly();\n\n      var block_dom = Blockly.Xml.textToDom(\"<xml>\" + this.build() + \"</xml>\");\n\n      Blockly.Xml.domToWorkspace(Blockly.getMainWorkspace(), block_dom);\n    },\n\n    // reimplementar si se desean parametros ya aplicados\n    get_parametros: function get_parametros() {\n      return [];\n    },\n\n    obtener_icono: function obtener_icono(nombre) {\n      return new Blockly.FieldImage(\"iconos/\" + nombre, 16, 16, \"<\");\n    },\n\n    // Escupe el código que va en el toolbox para el bloque\n    build: function build() {\n      var str_block = \"\";\n      str_block += \"<block type=\\\"TIPO\\\">\".replace(\"TIPO\", this.get(\"id\"));\n\n      this.get_parametros().forEach(function (item) {\n        str_block += item.build();\n      });\n\n      str_block += \"</block>\";\n      return str_block;\n    }\n  });\n\n  /* ============================================== */\n\n  // Pide implementar sólo block_javascript\n  // Sirve para pisar el JS que produce blockly\n  var CambioDeJSDeBlocky = Bloque.extend({\n\n    registrar_en_blockly: function registrar_en_blockly() {\n      var myThis = this;\n      Blockly.JavaScript[this.get(\"id\")] = function (block) {\n        return myThis.block_javascript(block);\n      };\n    }\n\n  });\n\n  /* ============================================== */\n\n  var VariableGet = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"variables_get\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      // Variable getter.\n      var code = Blockly.JavaScript.variableDB_.getName(block.getFieldValue(\"VAR\"), Blockly.Variables.NAME_TYPE);\n      return [\"receptor.atributo(\\\"\" + code + \"\\\")\", Blockly.JavaScript.ORDER_ATOMIC];\n    }\n\n  });\n\n  /* ============================================== */\n\n  var VariableSet = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"variables_set\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      // Variable setter.\n      var argument0 = Blockly.JavaScript.valueToCode(block, \"VALUE\", Blockly.JavaScript.ORDER_ASSIGNMENT) || \"0\";\n      var varName = Blockly.JavaScript.variableDB_.getName(block.getFieldValue(\"VAR\"), Blockly.Variables.NAME_TYPE);\n      return \"programa.cambio_atributo(\\\"\" + varName + \"\\\", function(){ return \" + argument0 + \"; } );\\n\";\n    }\n\n  });\n\n  /* ============================================== */\n\n  var VariableLocalGet = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"local_var_get\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      // Variable getter.\n      var code = Blockly.JavaScript.variableDB_.getName(block.getFieldValue(\"VAR\"), Blockly.Variables.NAME_TYPE);\n      return [\"receptor.variable(\\\"\" + code + \"\\\")\", Blockly.JavaScript.ORDER_ATOMIC];\n    }\n\n  });\n\n  /* ============================================== */\n\n  var VariableLocalSet = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"local_var_set\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      // Variable setter.\n      var argument0 = Blockly.JavaScript.valueToCode(block, \"VALUE\", Blockly.JavaScript.ORDER_ASSIGNMENT) || \"0\";\n      var varName = Blockly.JavaScript.variableDB_.getName(block.getFieldValue(\"VAR\"), Blockly.Variables.NAME_TYPE);\n      return \"programa.cambio_variable(\\\"\" + varName + \"\\\", function(){ return \" + argument0 + \"; } );\\n\";\n    }\n\n  });\n\n  /* ============================================== */\n\n  var Procedimiento = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"procedures_defnoreturn\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      // Define a procedure with a return value.\n      var funcName = Blockly.JavaScript.variableDB_.getName(block.getFieldValue(\"NAME\"), Blockly.Procedures.NAME_TYPE);\n\n      var branch = Blockly.JavaScript.statementToCode(block, \"STACK\");\n\n      if (Blockly.JavaScript.STATEMENT_PREFIX) {\n        branch = Blockly.JavaScript.prefixLines(Blockly.JavaScript.STATEMENT_PREFIX.replace(/%1/g, \"'\" + block.id + \"'\"), Blockly.JavaScript.INDENT) + branch;\n      }\n\n      if (Blockly.JavaScript.INFINITE_LOOP_TRAP) {\n        branch = Blockly.JavaScript.INFINITE_LOOP_TRAP.replace(/%1/g, \"'\" + block.id + \"'\") + branch;\n      }\n\n      var args = [];\n      for (var x = 0; x < block.arguments_.length; x++) {\n        args[x] = Blockly.JavaScript.variableDB_.getName(block.arguments_[x], Blockly.Variables.NAME_TYPE);\n      }\n\n      //    var code = 'function ' + funcName + '(' + args.join(', ') + ') {\\n' +\n      //        branch + returnValue + '}';\n\n      var args_string = args.map(function (i) {\n        return \"\\\"\" + i + \"\\\"\";\n      }).join(\", \");\n\n      var code = \"programa.empezar_secuencia();\\n\" + branch + \"programa.def_proc(\\\"\" + funcName + \"\\\", [\" + args_string + \"]);\\n\";\n\n      code = Blockly.JavaScript.scrub_(block, code);\n      Blockly.JavaScript.definitions_[funcName] = code;\n      return null;\n    }\n\n  });\n\n  /* ============================================== */\n\n  var Funcion = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"procedures_defreturn\");\n    },\n\n    registrar_en_blockly: function registrar_en_blockly() {}\n\n  });\n\n  /* ============================================== */\n\n  var CallNoReturn = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"procedures_callnoreturn\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      // Call a procedure with no return value.\n      var funcName = Blockly.JavaScript.variableDB_.getName(block.getFieldValue(\"NAME\"), Blockly.Procedures.NAME_TYPE);\n      var args = [];\n      for (var x = 0; x < block.arguments_.length; x++) {\n        args[x] = Blockly.JavaScript.valueToCode(block, \"ARG\" + x, Blockly.JavaScript.ORDER_COMMA) || \"null\";\n        args[x] = \"function(){ return \" + args[x] + \"; }\";\n      }\n      function juntar_args() {\n        if (args.length > 0) {\n          return \"[\\n\" + args.join(\", \\n\") + \"\\n]\";\n        } else {\n          return \"[]\";\n        }\n      }\n      // var code = funcName + '(' + args.join(', ') + ');\\n';\n      var code = \"programa.llamada_proc(\\\"\" + funcName + \"\\\", \" + juntar_args() + \");\\n\";\n      return code;\n    }\n\n  });\n\n  /* ============================================== */\n\n  var CallReturn = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"procedures_callreturn\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      // Call a procedure with a return value.\n      var funcName = Blockly.JavaScript.variableDB_.getName(block.getFieldValue(\"NAME\"), Blockly.Procedures.NAME_TYPE);\n      var args = [];\n      for (var x = 0; x < block.arguments_.length; x++) {\n        args[x] = Blockly.JavaScript.valueToCode(block, \"ARG\" + x, Blockly.JavaScript.ORDER_COMMA) || \"null\";\n        args[x] = \"function(){ return \" + args[x] + \"; }\";\n      }\n      var code = funcName + \"(\" + args.join(\", \") + \")\";\n      return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n    }\n\n  });\n\n  /* ============================================== */\n\n  var ParamGet = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"param_get\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      // Variable getter.\n      var code = Blockly.JavaScript.variableDB_.getName(block.getFieldValue(\"VAR\"), Blockly.Variables.NAME_TYPE);\n\n      // agrego parentesis para llamar al closure del parametro\n      return [\"receptor.parametro(\\\"\" + code + \"\\\")\", Blockly.JavaScript.ORDER_ATOMIC];\n    }\n\n  });\n\n  /* ============================================== */\n\n  var AlEmpezar = Bloque.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"al_empezar_a_ejecutar\");\n    },\n\n    block_init: function block_init(block) {\n      block.setColour(Blockly.Blocks.eventos.COLOUR);\n      block.appendDummyInput().appendField(\"Al empezar a ejecutar\");\n      block.appendStatementInput(\"program\");\n      block.setDeletable(false);\n      block.setEditable(false);\n      block.setMovable(false);\n    },\n\n    block_javascript: function block_javascript(block) {\n      var statements_program = Blockly.JavaScript.statementToCode(block, \"program\");\n      var r = \"programa.empezar_secuencia();\\n\";\n      r += statements_program + \"\\n\";\n      r += \"programa.ejecutar(receptor);\\n\";\n      return r;\n    }\n\n  });\n\n  /* ============================================== */\n\n  var Accion = Bloque.extend({\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.setColour(Blockly.Blocks.primitivas.COLOUR);\n      block.setPreviousStatement(true);\n      block.setNextStatement(true);\n    },\n\n    block_javascript: function block_javascript(block) {\n      return \"programa.hacer(\" + this.nombre_comportamiento() + \", \" + this.argumentos() + \")\\n\";\n    }\n\n  });\n\n  /* ============================================== */\n\n  var IrDerecha = Accion.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"ir_derecha\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendDummyInput().appendField(this.obtener_icono(\"derecha.png\")).appendField(\"ir derecha\");\n    },\n\n    nombre_comportamiento: function nombre_comportamiento() {\n      return \"MoverHaciaDerecha\";\n    },\n\n    argumentos: function argumentos() {\n      return \"{cantidad: 68, tiempo: 1}\";\n    }\n\n  });\n\n  /* ============================================== */\n\n  var IrIzquierda = Accion.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"ir_izquierda\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendDummyInput().appendField(this.obtener_icono(\"izquierda.png\")).appendField(\"ir izquierda\");\n    },\n\n    nombre_comportamiento: function nombre_comportamiento() {\n      return \"MoverHaciaIzquierda\";\n    },\n\n    argumentos: function argumentos() {\n      return \"{cantidad: 68, tiempo: 1}\";\n    }\n\n  });\n\n  /* ============================================== */\n\n  var IrArriba = Accion.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"ir_arriba\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendDummyInput().appendField(this.obtener_icono(\"arriba.png\")).appendField(\"ir arriba\");\n    },\n\n    nombre_comportamiento: function nombre_comportamiento() {\n      return \"MoverHaciaArriba\";\n    },\n\n    argumentos: function argumentos() {\n      return \"{cantidad: 80, tiempo: 1}\";\n    }\n\n  });\n\n  /* ============================================== */\n\n  var IrAbajo = Accion.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"ir_abajo\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendDummyInput().appendField(this.obtener_icono(\"abajo.png\")).appendField(\"ir abajo\");\n    },\n\n    nombre_comportamiento: function nombre_comportamiento() {\n      return \"MoverHaciaAbajo\";\n    },\n\n    argumentos: function argumentos() {\n      return \"{cantidad: 80, tiempo: 1}\";\n    }\n\n  });\n\n  /* ============================================== */\n\n  var Recoger = Accion.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"recoger\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendDummyInput().appendField(\"recoger\").appendField(new Blockly.FieldImage(\"libs/data/tuerca.png\", 16, 16, \"tuerca\"));\n    },\n\n    nombre_comportamiento: function nombre_comportamiento() {\n      return \"Recoger\";\n    },\n\n    argumentos: function argumentos() {\n      return \"{tiempo: 1}\";\n    }\n\n  });\n\n  /* ============================================== */\n\n  var Sensor = Bloque.extend({\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.setColour(Blockly.Blocks.sensores.COLOUR);\n      block.setInputsInline(true);\n      block.setOutput(true);\n    },\n\n    block_javascript: function block_javascript(block) {\n      return [\"receptor.\" + this.nombre_sensor() + \"\\n\", Blockly.JavaScript.ORDER_ATOMIC];\n    }\n  });\n\n  var ChocaConTuerca = Sensor.extend({\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"choca_con_tuerca\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendDummyInput().appendField(\"choca con\").appendField(new Blockly.FieldImage(\"libs/data/tuerca.png\", 15, 15, \"tuerca\"));\n    },\n\n    nombre_sensor: function nombre_sensor() {\n      return \"choca_con_tuerca()\";\n    }\n  });\n\n  /* ============================================== */\n\n  var EstructuraDeControl = Bloque.extend({\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.setColour(Blockly.Blocks.loops.COLOUR);\n      block.setInputsInline(true);\n      block.setPreviousStatement(true);\n      block.setNextStatement(true);\n    }\n\n  });\n\n  /* ============================================== */\n\n  var Repetir = EstructuraDeControl.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"repetir\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendValueInput(\"count\").setCheck(\"Number\").appendField(\"repetir\");\n      block.appendStatementInput(\"block\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      var value_count = Blockly.JavaScript.valueToCode(block, \"count\", Blockly.JavaScript.ORDER_ATOMIC) || \"0\";\n      var statements_block = Blockly.JavaScript.statementToCode(block, \"block\");\n      var r = \"programa.empezar_secuencia();\\n\";\n      r += statements_block;\n      r += \"programa.repetirN(function(){\\nreturn {{n}};\\n});\\n\".replace(\"{{n}}\", value_count);\n      return r;\n    },\n\n    get_parametros: function get_parametros() {\n      return [ParamValor.create({\n        nombre_param: \"count\",\n        tipo_bloque: \"math_number\",\n        nombre_valor: \"NUM\",\n        valor: \"10\"\n      })];\n    }\n\n  });\n\n  /* ============================================== */\n\n  var Si = EstructuraDeControl.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"si\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendValueInput(\"condition\").setCheck(\"Boolean\").appendField(\"si\");\n      block.appendStatementInput(\"block\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      var value_condition = Blockly.JavaScript.valueToCode(block, \"condition\", Blockly.JavaScript.ORDER_ATOMIC) || \"false\";\n      var statements_block = Blockly.JavaScript.statementToCode(block, \"block\");\n      var r = \"programa.empezar_secuencia();\\n\";\n      r += statements_block;\n      r += \"programa.alternativa_si(function(){\\nreturn {{condition}};\\n});\\n\".replace(\"{{condition}}\", value_condition);\n      return r;\n    }\n\n  });\n\n  /* ============================================== */\n\n  var Sino = EstructuraDeControl.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"sino\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendValueInput(\"condition\").setCheck(\"Boolean\").appendField(\"si\");\n      block.appendStatementInput(\"block1\");\n      block.appendDummyInput().appendField(\"sino\");\n      block.appendStatementInput(\"block2\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      var value_condition = Blockly.JavaScript.valueToCode(block, \"condition\", Blockly.JavaScript.ORDER_ATOMIC) || \"false\";\n      var statements_block1 = Blockly.JavaScript.statementToCode(block, \"block1\");\n      var statements_block2 = Blockly.JavaScript.statementToCode(block, \"block2\");\n      var r = \"programa.empezar_secuencia();\\n\";\n      r += statements_block1;\n      r += \"programa.empezar_secuencia();\\n\";\n      r += statements_block2;\n      r += \"programa.alternativa_sino(function(){\\nreturn {{condition}};\\n});\\n\".replace(\"{{condition}}\", value_condition);\n      return r;\n    }\n\n  });\n\n  /* ============================================== */\n\n  var Hasta = EstructuraDeControl.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"hasta\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendValueInput(\"condition\").setCheck(\"Boolean\").appendField(\"repetir hasta que\");\n      block.appendStatementInput(\"block\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      var value_condition = Blockly.JavaScript.valueToCode(block, \"condition\", Blockly.JavaScript.ORDER_ATOMIC) || \"true\";\n      var statements_block = Blockly.JavaScript.statementToCode(block, \"block\");\n      var r = \"programa.empezar_secuencia();\\n\";\n      r += statements_block;\n      r += \"programa.repetir_hasta(function(){\\nreturn {{condition}};\\n});\\n\".replace(\"{{condition}}\", value_condition);\n      return r;\n    }\n\n  });\n\n  var ExpresionDeBlockly = Bloque.extend({\n\n    registrar_en_blockly: function registrar_en_blockly() {}\n\n  });\n\n  var Numero = ExpresionDeBlockly.extend({\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"math_number\");\n    } });\n\n  var OpAritmetica = ExpresionDeBlockly.extend({\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"math_arithmetic\");\n    } });\n\n  var Booleano = ExpresionDeBlockly.extend({\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"logic_boolean\");\n    } });\n\n  var OpComparacion = ExpresionDeBlockly.extend({\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"logic_compare\");\n    } });\n\n  var OpLogica = ExpresionDeBlockly.extend({\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"logic_operation\");\n    } });\n\n  var OpNegacion = ExpresionDeBlockly.extend({\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"logic_negate\");\n    } });\n\n  /* ============================================== */\n\n  /*\n   * Representa el valor\n   * de un campo string de un bloque\n   */\n  /*exported ParamCampo*/\n  var ParamCampo = Ember['default'].Object.extend({\n    build: function build() {\n      var str_block = \"\";\n      str_block += \"<field name=\\\"NOMBRE\\\">\".replace(\"NOMBRE\", this.get(\"nombre_valor\"));\n      str_block += this.get(\"valor\");\n      str_block += \"</field>\";\n      return str_block;\n    }\n  });\n\n  /* ============================================== */\n\n  /*\n   * Representa un valor mas complejo\n   * de un campo de un bloque\n   */\n  var ParamValor = Ember['default'].Object.extend({\n    build: function build() {\n      var str_block = \"\";\n      str_block += \"<value name=\\\"NOMBRE\\\">\".replace(\"NOMBRE\", this.get(\"nombre_param\"));\n\n      str_block += \"<block type=\\\"TIPO\\\">\".replace(\"TIPO\", this.get(\"tipo_bloque\"));\n\n      str_block += \"<field name=\\\"TIPO\\\">\".replace(\"TIPO\", this.get(\"nombre_valor\"));\n      str_block += this.get(\"valor\");\n      str_block += \"</field>\";\n\n      str_block += \"</block>\";\n\n      str_block += \"</value>\";\n\n      return str_block;\n    }\n  });\n\n  /* ============================================== */\n\n  /*\n   * Representa el lenguaje que podra utilizarse\n   * en una actividad\n   */\n  var Lenguaje = Ember['default'].Object.extend({\n\n    init: function init() {\n      this.set(\"categorias\", []);\n      this.set(\"bloques\", {});\n    },\n\n    agregar: function agregar(c, bs) {\n      if (bs !== undefined) {\n        this.categoria(c);\n        bs.forEach((function (b) {\n          this.bloque(c, b);\n        }).bind(this));\n      }\n    },\n\n    categoria: function categoria(c) {\n      this.get(\"categorias\").pushObject(c);\n      var bs = this.get(\"bloques\");\n      bs[c] = [];\n      this.set(\"bloques\", bs);\n    },\n\n    bloque: function bloque(c, b) {\n      var block = this.definir_bloque(b);\n      this.get(\"bloques\")[c].pushObject(block);\n    },\n\n    definir_bloque: function definir_bloque(b) {\n      var block = b.create();\n      block.registrar_en_blockly();\n      return block;\n    },\n\n    build: function build() {\n      var str_toolbox = \"\";\n\n      str_toolbox += \"<xml>\";\n\n      this.get(\"categorias\").forEach((function (item) {\n        if (item === \"Variables\") {\n          str_toolbox += this._build_variables();\n        } else if (item === \"Subtareas\") {\n          str_toolbox += this._build_procedures();\n        } else {\n          str_toolbox += this._build_categoria(item);\n        }\n      }).bind(this));\n\n      str_toolbox += \"</xml>\";\n\n      return str_toolbox;\n    },\n\n    _build_categoria: function _build_categoria(categoria) {\n      var str_category = \"\";\n\n      str_category += \"<category name=\\\"x\\\">\\n\".replace(\"x\", categoria);\n\n      this.get(\"bloques\")[categoria].forEach(function (b) {\n        str_category += b.build();\n      });\n\n      str_category += \"</category>\\n\";\n\n      return str_category;\n    },\n\n    _build_procedures: function _build_procedures() {\n      return \"<category name=\\\"Subtareas\\\" custom=\\\"PROCEDURE\\\"></category>\";\n    },\n\n    _build_variables: function _build_variables() {\n      return \"<category name=\\\"Variables\\\" custom=\\\"VARIABLE\\\"></category>\";\n    }\n\n  });\n\n  /* ============================================== */\n\n  /**\n    Modelo de actividad\n  **/\n  var Actividad = Ember['default'].Object.extend({\n    init: function init() {\n      var actividad = this.get(\"actividad\");\n      this.set(\"nombre\", actividad.nombre);\n      this.set(\"enunciado\", actividad.enunciado);\n      this.set(\"escena\", actividad.escena);\n      this.set(\"puedeComentar\", actividad.puedeComentar);\n      this.set(\"puedeDesactivar\", actividad.puedeDesactivar);\n      this.set(\"puedeDuplicar\", actividad.puedeDuplicar);\n      this.setColours();\n      this.pisar_bloques_blockly();\n    },\n\n    iniciarEscena: function iniciarEscena() {\n      var Esc = this.get(\"escena\");\n      var esc_instance = new Esc();\n      this.set(\"escena_instanciada\", esc_instance);\n      pilas.mundo.gestor_escenas.cambiar_escena(esc_instance);\n    },\n\n    obtenerLenguaje: function obtenerLenguaje() {\n      var act = this.get(\"actividad\");\n      var leng = Lenguaje.create();\n\n      leng.agregar(\"Acciones\", act.acciones);\n      leng.agregar(\"Sensores\", act.sensores);\n      leng.agregar(\"Control\", act.control);\n      leng.agregar(\"Expresiones\", act.expresiones);\n      leng.agregar(\"Variables\", act.variables);\n      leng.agregar(\"Subtareas\", act.subtareas);\n\n      return leng.build();\n    },\n\n    bloques_iniciales: function bloques_iniciales() {\n      return [AlEmpezar];\n    },\n\n    crear_bloques_iniciales: function crear_bloques_iniciales() {\n      this.bloques_iniciales().forEach(function (b) {\n        b.create().instanciar_para_workspace();\n      });\n    },\n\n    pisar_bloques_blockly: function pisar_bloques_blockly() {\n      CallReturn.create().registrar_en_blockly();\n      CallNoReturn.create().registrar_en_blockly();\n      ParamGet.create().registrar_en_blockly();\n      VariableGet.create().registrar_en_blockly();\n      VariableSet.create().registrar_en_blockly();\n      VariableLocalGet.create().registrar_en_blockly();\n      VariableLocalSet.create().registrar_en_blockly();\n    },\n\n    usa_procedimientos: function usa_procedimientos() {\n      return this.get(\"actividad\").subtareas.indexOf(Procedimiento) > -1;\n    },\n\n    usa_funciones: function usa_funciones() {\n      return this.get(\"actividad\").subtareas.indexOf(Funcion) > -1;\n    },\n\n    iniciarBlockly: function iniciarBlockly(contenedor) {\n      var actividad = this;\n\n      Blockly.inject(contenedor, {\n        collapse: false,\n        duplicate: actividad.get(\"puedeDuplicar\"),\n        trashOnlyDelete: true,\n        disable: actividad.get(\"puedeDesactivar\"),\n        comments: actividad.get(\"puedeComentar\"),\n        rgbColours: true,\n        defsOnly: true,\n        def_procedures: actividad.usa_procedimientos(),\n        def_functions: actividad.usa_funciones(),\n        globalVariables: false,\n        oneReturnOnly: true,\n        defsNames: [\"al_empezar_a_ejecutar\", \"procedures_defnoreturn\", \"procedures_defreturn\"],\n        path: \"./libs/blockly/\",\n        toolbox: Blockly.Xml.textToDom(actividad.obtenerLenguaje()) });\n\n      this.crear_bloques_iniciales();\n    },\n\n    generarCodigo: function generarCodigo() {\n      // variable global con la que se accede al receptor del programa\n      window.receptor = this.get(\"escena_instanciada\").automata;\n      var comienzo = \"var programa = new pilas.comportamientos.ConstructorDePrograma();\\n\\n\";\n      var code = Blockly.JavaScript.workspaceToCode();\n      return comienzo + code;\n    },\n\n    // Scratch style colours\n    setColours: function setColours() {\n      Blockly.Blocks.primitivas.COLOUR = \"#4a6cd4\";\n      Blockly.Blocks.sensores.COLOUR = \"#2ca5e2\";\n      Blockly.Blocks.eventos.COLOUR = \"#00a65a\"; // == boton ejecutar\n      Blockly.Blocks.math.COLOUR = \"#49930e\";\n      Blockly.Blocks.logic.COLOUR = \"#5cb712\";\n      Blockly.Blocks.loops.COLOUR = \"#ee7d16\";\n\n      Blockly.Blocks.procedures.COLOUR = \"#6C52EB\";\n      Blockly.Blocks.procedures.vars.COLOUR = \"#8a55d7\";\n      Blockly.Blocks.procedures.params.COLOUR = \"#6C52EB\";\n\n      Blockly.Blocks.variables.COLOUR = \"#cc5b22\";\n\n      Blockly.Blocks.texts.COLOUR = \"#4a6cd4\";\n      Blockly.Blocks.lists.COLOUR = \"#cc5b22\";\n      Blockly.Blocks.colour.COLOUR = \"#4a6cd4\";\n\n      // IN SCRATCH THE COLOURS ARE\n      // 4a6cd4 MOTION\n      // 8a55d7 LOOKS\n      // bb42c3 SOUND\n      // 0e9a6c PEN\n      // ee7d16 DATA Variables\n      // cc5b22 DATA Lists\n      // c88330 EVENTS\n      // e1a91a CONTROL\n      // 2ca5e2 SENSING\n      // 5cb712 OPERATORS\n      // 49930e OPERATORS dark\n      // 632d99 MORE BLOCKS\n      // 5e4db3 PARAMS\n    },\n\n    obtener_codigo_en_texto: function obtener_codigo_en_texto() {\n      var xml = Blockly.Xml.workspaceToDom(Blockly.getMainWorkspace());\n      return Blockly.Xml.domToText(xml);\n    } });\n\n  /* ============================================== */\n\n  var EscenaAlien = (function (_super) {\n    __extends(EscenaAlien, _super);\n    function EscenaAlien() {\n      _super.apply(this, arguments);\n    }\n\n    EscenaAlien.prototype.coord_grilla = function (fila, columna) {\n      var columnas = [-175, -105, -35, 35, 105, 175];\n      var filas = [140, 60, -20, -100, -180];\n\n      return { x: columnas[columna - 1], y: filas[fila - 1] };\n    };\n\n    EscenaAlien.prototype.iniciar = function () {\n\n      new pilas.fondos.Laberinto1();\n      var alien = new pilas.actores.Alien(-175, -180);\n\n      this.automata = alien;\n\n      // metodo para ver si choca con tuerca\n      alien.choca_con_tuerca = function () {\n        var actores = pilas.obtener_actores_en(alien.x, alien.y + 20, \"Tuerca\");\n        return actores.length > 0;\n      };\n\n      alien.cuando_busca_recoger = function () {\n        var actores = pilas.obtener_actores_en(alien.x, alien.y + 20, \"Tuerca\");\n        if (actores.length > 0) {\n          var mensaje = \"\";\n          actores[0].eliminar();\n          var restantes = pilas.obtener_actores_con_etiqueta(\"Tuerca\").length;\n\n          if (restantes > 0) {\n            mensaje = \"genial, aún quedan: \" + restantes;\n          } else {\n            mensaje = \"¡Nivel completado!\";\n          }\n\n          // alien.decir(mensaje);\n        }\n      };\n\n      var posicion = this.coord_grilla(1, 1);\n      new pilas.actores.Tuerca(posicion.x, posicion.y);\n\n      posicion = this.coord_grilla(2, 2);\n      new pilas.actores.Tuerca(posicion.x, posicion.y);\n\n      posicion = this.coord_grilla(3, 3);\n      new pilas.actores.Tuerca(posicion.x, posicion.y);\n\n      posicion = this.coord_grilla(4, 4);\n      new pilas.actores.Tuerca(posicion.x, posicion.y);\n\n      posicion = this.coord_grilla(5, 5);\n      new pilas.actores.Tuerca(posicion.x, posicion.y);\n    };\n\n    return EscenaAlien;\n  })(Base);\n\n  /* ============================================== */\n\n  var actividadAlien = {\n    nombre: \"El alien y las tuercas\",\n    enunciado: \"Define un programa para que el alien junte todas las tuercas\",\n    escena: EscenaAlien,\n    puedeComentar: false,\n    puedeDesactivar: false,\n    puedeDuplicar: false,\n    subtareas: [Procedimiento, Funcion],\n\n    // TODO: aca irian atributos iniciales que se desean para un personaje\n    variables: [],\n\n    control: [Repetir, Si, Sino, Hasta],\n    expresiones: [Numero, OpAritmetica, OpComparacion, Booleano, OpLogica, OpNegacion],\n    acciones: [IrDerecha, IrIzquierda, IrArriba, IrAbajo, Recoger],\n    sensores: [ChocaConTuerca]\n  };\n\n  /* ============================================== */\n\n  var Actividades = {\n    Alien: Actividad.create({ actividad: actividadAlien }) };\n\n  exports['default'] = Actividades;\n\n  // espera:\n  // + id\n  // + categoria\n\n  // abstracta\n\n  // abstracta\n\n  // pisado porque provisoriamente se\n  // usa el que viene con blockly\n\n  // pisado porque ya viene con blockly\n  // ni tampoco quiero modificar el javascript\n\n});","define('pilas-engine-bloques/actividades/actividadAlien', ['exports', 'pilas-engine-bloques/actividades/bloques'], function (exports, bloques) {\n\n  'use strict';\n\n  var Accion = bloques['default'].Accion;\n  var Sensor = bloques['default'].Sensor;\n  var Repetir = bloques['default'].Repetir;\n\n  var EscenaAlien = (function (_super) {\n    __extends(EscenaAlien, _super);\n    function EscenaAlien() {\n      _super.apply(this, arguments);\n    }\n\n    EscenaAlien.prototype.coord_grilla = function (fila, columna) {\n      var columnas = [-175, -105, -35, 35, 105, 175];\n      var filas = [140, 60, -20, -100, -180];\n\n      return { x: columnas[columna - 1], y: filas[fila - 1] };\n    };\n\n    EscenaAlien.prototype.iniciar = function () {\n\n      new pilas.fondos.Laberinto1();\n      var alien = new pilas.actores.Alien(-175, -180);\n\n      this.automata = alien;\n\n      // metodo para ver si choca con tuerca\n      alien.choca_con_tuerca = function () {\n        var actores = pilas.obtener_actores_en(alien.x, alien.y + 20, \"Tuerca\");\n        return actores.length > 0;\n      };\n\n      alien.cuando_busca_recoger = function () {\n        var actores = pilas.obtener_actores_en(alien.x, alien.y + 20, \"Tuerca\");\n        if (actores.length > 0) {\n          var mensaje = \"\";\n          actores[0].eliminar();\n          var restantes = pilas.obtener_actores_con_etiqueta(\"Tuerca\").length;\n\n          if (restantes > 0) {\n            mensaje = \"genial, aún quedan: \" + restantes;\n          } else {\n            mensaje = \"¡Nivel completado!\";\n          }\n\n          // alien.decir(mensaje);\n        }\n      };\n\n      var posicion = this.coord_grilla(1, 1);\n      new pilas.actores.Tuerca(posicion.x, posicion.y);\n\n      posicion = this.coord_grilla(2, 2);\n      new pilas.actores.Tuerca(posicion.x, posicion.y);\n\n      posicion = this.coord_grilla(3, 3);\n      new pilas.actores.Tuerca(posicion.x, posicion.y);\n\n      posicion = this.coord_grilla(4, 4);\n      new pilas.actores.Tuerca(posicion.x, posicion.y);\n\n      posicion = this.coord_grilla(5, 5);\n      new pilas.actores.Tuerca(posicion.x, posicion.y);\n    };\n\n    return EscenaAlien;\n  })(Base);\n\n  var IrDerecha = Accion.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"ir_derecha\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendDummyInput().appendField(this.obtener_icono(\"derecha.png\")).appendField(\"ir derecha\");\n    },\n\n    nombre_comportamiento: function nombre_comportamiento() {\n      return \"MoverHaciaDerecha\";\n    },\n\n    argumentos: function argumentos() {\n      return \"{cantidad: 68, tiempo: 1}\";\n    }\n\n  });\n\n  var IrIzquierda = Accion.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"ir_izquierda\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendDummyInput().appendField(this.obtener_icono(\"izquierda.png\")).appendField(\"ir izquierda\");\n    },\n\n    nombre_comportamiento: function nombre_comportamiento() {\n      return \"MoverHaciaIzquierda\";\n    },\n\n    argumentos: function argumentos() {\n      return \"{cantidad: 68, tiempo: 1}\";\n    }\n\n  });\n\n  var IrArriba = Accion.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"ir_arriba\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendDummyInput().appendField(this.obtener_icono(\"arriba.png\")).appendField(\"ir arriba\");\n    },\n\n    nombre_comportamiento: function nombre_comportamiento() {\n      return \"MoverHaciaArriba\";\n    },\n\n    argumentos: function argumentos() {\n      return \"{cantidad: 80, tiempo: 1}\";\n    }\n\n  });\n\n  var IrAbajo = Accion.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"ir_abajo\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendDummyInput().appendField(this.obtener_icono(\"abajo.png\")).appendField(\"ir abajo\");\n    },\n\n    nombre_comportamiento: function nombre_comportamiento() {\n      return \"MoverHaciaAbajo\";\n    },\n\n    argumentos: function argumentos() {\n      return \"{cantidad: 80, tiempo: 1}\";\n    }\n\n  });\n\n  var Recoger = Accion.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"recoger\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendDummyInput().appendField(\"recoger\").appendField(new Blockly.FieldImage(\"libs/data/tuerca.png\", 16, 16, \"tuerca\"));\n    },\n\n    nombre_comportamiento: function nombre_comportamiento() {\n      return \"Recoger\";\n    },\n\n    argumentos: function argumentos() {\n      return \"{tiempo: 1}\";\n    }\n\n  });\n\n  var ChocaConTuerca = Sensor.extend({\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"choca_con_tuerca\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendDummyInput().appendField(\"choca con\").appendField(new Blockly.FieldImage(\"libs/data/tuerca.png\", 15, 15, \"tuerca\"));\n    },\n\n    nombre_sensor: function nombre_sensor() {\n      return \"choca_con_tuerca()\";\n    }\n  });\n\n  var actividadAlien = {\n    nombre: \"El alien y las tuercas\",\n    enunciado: \"Define un programa para que el alien junte todas las tuercas\",\n\n    escena: EscenaAlien,\n    puedeComentar: false,\n    puedeDesactivar: false,\n    puedeDuplicar: false,\n    subtareas: [],\n\n    // TODO: aca irian atributos iniciales que se desean para un personaje\n    variables: [],\n\n    control: [Repetir],\n    expresiones: [],\n    acciones: [IrDerecha, IrIzquierda, IrArriba, IrAbajo, Recoger],\n    sensores: [ChocaConTuerca]\n  };\n\n  exports['default'] = actividadAlien;\n\n});","define('pilas-engine-bloques/actividades/actividadElObreroCopado', ['exports', 'pilas-engine-bloques/actividades/bloques'], function (exports, bloques) {\n\n  'use strict';\n\n  var Accion = bloques['default'].Accion;\n  var Sensor = bloques['default'].Sensor;\n\n  var Avanzar = Accion.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"avanzar\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendDummyInput().appendField(this.obtener_icono(\"izquierda.png\")).appendField(\"avanzar\");\n    },\n\n    nombre_comportamiento: function nombre_comportamiento() {\n      return \"CaminaIzquierda\";\n    },\n\n    argumentos: function argumentos() {\n      return \"{ pasos: 2 }\";\n    }\n  });\n\n  var Retroceder = Accion.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"retroceder\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendDummyInput().appendField(this.obtener_icono(\"derecha.png\")).appendField(\"retroceder\");\n    },\n\n    nombre_comportamiento: function nombre_comportamiento() {\n      return \"CaminaDerecha\";\n    },\n\n    argumentos: function argumentos() {\n      return \"{ pasos: 2 }\";\n    }\n  });\n\n  var Martillar = Accion.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"martillar\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendDummyInput().appendField(this.obtener_icono(\"martillar.png\")).appendField(\"martillar\");\n    },\n\n    nombre_comportamiento: function nombre_comportamiento() {\n      return \"Martillar\";\n    },\n\n    argumentos: function argumentos() {\n      return \"{ veces: 20 }\";\n    }\n  });\n\n  var actividadElObreroCopado = {\n    nombre: \"El Obrero Copado\",\n    enunciado: \"Ayudá a nuestro obrero\",\n\n    escena: ElObreroCopado,\n    puedeComentar: false,\n    puedeDesactivar: false,\n    puedeDuplicar: false,\n    subtareas: [],\n\n    // TODO: aca irian atributos iniciales que se desean para un personaje\n    variables: [],\n\n    control: [],\n    expresiones: [],\n    acciones: [Avanzar, Retroceder, Martillar],\n    sensores: [] };\n\n  exports['default'] = actividadElObreroCopado;\n\n});","define('pilas-engine-bloques/actividades/bloques', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var Bloque = Ember['default'].Object.extend({\n    init: function init() {},\n\n    block_init: function block_init() {},\n\n    /*jshint unused: vars*/\n    block_javascript: function block_javascript(block) {},\n\n    registrar_en_blockly: function registrar_en_blockly() {\n      var myThis = this;\n      Blockly.Blocks[this.get(\"id\")] = {\n        init: function init() {\n          myThis.block_init(this);\n        }\n      };\n\n      Blockly.JavaScript[this.get(\"id\")] = function (block) {\n        return myThis.block_javascript(block);\n      };\n    },\n\n    instanciar_para_workspace: function instanciar_para_workspace() {\n      this.registrar_en_blockly();\n\n      var block_dom = Blockly.Xml.textToDom(\"<xml>\" + this.build() + \"</xml>\");\n\n      Blockly.Xml.domToWorkspace(Blockly.getMainWorkspace(), block_dom);\n    },\n\n    // reimplementar si se desean parametros ya aplicados\n    get_parametros: function get_parametros() {\n      return [];\n    },\n\n    obtener_icono: function obtener_icono(nombre) {\n      return new Blockly.FieldImage(\"iconos/\" + nombre, 16, 16, \"<\");\n    },\n\n    // Escupe el código que va en el toolbox para el bloque\n    build: function build() {\n      var str_block = \"\";\n      str_block += \"<block type=\\\"TIPO\\\">\".replace(\"TIPO\", this.get(\"id\"));\n\n      this.get_parametros().forEach(function (item) {\n        str_block += item.build();\n      });\n\n      str_block += \"</block>\";\n      return str_block;\n    }\n  });\n\n  /*\n   * Pide implementar sólo block_javascript\n   * Sirve para pisar el JS que produce blockly\n   */\n  var CambioDeJSDeBlocky = Bloque.extend({\n\n    registrar_en_blockly: function registrar_en_blockly() {\n      var myThis = this;\n      Blockly.JavaScript[this.get(\"id\")] = function (block) {\n        return myThis.block_javascript(block);\n      };\n    }\n  });\n\n  var VariableGet = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"variables_get\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      // Variable getter.\n      var code = Blockly.JavaScript.variableDB_.getName(block.getFieldValue(\"VAR\"), Blockly.Variables.NAME_TYPE);\n      return [\"receptor.atributo(\\\"\" + code + \"\\\")\", Blockly.JavaScript.ORDER_ATOMIC];\n    }\n\n  });\n\n  var VariableSet = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"variables_set\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      // Variable setter.\n      var argument0 = Blockly.JavaScript.valueToCode(block, \"VALUE\", Blockly.JavaScript.ORDER_ASSIGNMENT) || \"0\";\n      var varName = Blockly.JavaScript.variableDB_.getName(block.getFieldValue(\"VAR\"), Blockly.Variables.NAME_TYPE);\n      return \"programa.cambio_atributo(\\\"\" + varName + \"\\\", function(){ return \" + argument0 + \"; } );\\n\";\n    }\n\n  });\n\n  /* ============================================== */\n\n  var VariableLocalGet = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"local_var_get\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      // Variable getter.\n      var code = Blockly.JavaScript.variableDB_.getName(block.getFieldValue(\"VAR\"), Blockly.Variables.NAME_TYPE);\n      return [\"receptor.variable(\\\"\" + code + \"\\\")\", Blockly.JavaScript.ORDER_ATOMIC];\n    }\n\n  });\n\n  /* ============================================== */\n\n  var VariableLocalSet = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"local_var_set\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      // Variable setter.\n      var argument0 = Blockly.JavaScript.valueToCode(block, \"VALUE\", Blockly.JavaScript.ORDER_ASSIGNMENT) || \"0\";\n      var varName = Blockly.JavaScript.variableDB_.getName(block.getFieldValue(\"VAR\"), Blockly.Variables.NAME_TYPE);\n      return \"programa.cambio_variable(\\\"\" + varName + \"\\\", function(){ return \" + argument0 + \"; } );\\n\";\n    }\n\n  });\n\n  /* ============================================== */\n\n  var Procedimiento = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"procedures_defnoreturn\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      // Define a procedure with a return value.\n      var funcName = Blockly.JavaScript.variableDB_.getName(block.getFieldValue(\"NAME\"), Blockly.Procedures.NAME_TYPE);\n\n      var branch = Blockly.JavaScript.statementToCode(block, \"STACK\");\n\n      if (Blockly.JavaScript.STATEMENT_PREFIX) {\n        branch = Blockly.JavaScript.prefixLines(Blockly.JavaScript.STATEMENT_PREFIX.replace(/%1/g, \"'\" + block.id + \"'\"), Blockly.JavaScript.INDENT) + branch;\n      }\n\n      if (Blockly.JavaScript.INFINITE_LOOP_TRAP) {\n        branch = Blockly.JavaScript.INFINITE_LOOP_TRAP.replace(/%1/g, \"'\" + block.id + \"'\") + branch;\n      }\n\n      var args = [];\n      for (var x = 0; x < block.arguments_.length; x++) {\n        args[x] = Blockly.JavaScript.variableDB_.getName(block.arguments_[x], Blockly.Variables.NAME_TYPE);\n      }\n\n      //    var code = 'function ' + funcName + '(' + args.join(', ') + ') {\\n' +\n      //        branch + returnValue + '}';\n\n      var args_string = args.map(function (i) {\n        return \"\\\"\" + i + \"\\\"\";\n      }).join(\", \");\n\n      var code = \"programa.empezar_secuencia();\\n\" + branch + \"programa.def_proc(\\\"\" + funcName + \"\\\", [\" + args_string + \"]);\\n\";\n\n      code = Blockly.JavaScript.scrub_(block, code);\n      Blockly.JavaScript.definitions_[funcName] = code;\n      return null;\n    }\n\n  });\n\n  /* ============================================== */\n\n  var Funcion = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"procedures_defreturn\");\n    },\n\n    registrar_en_blockly: function registrar_en_blockly() {}\n\n  });\n\n  /* ============================================== */\n\n  var CallNoReturn = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"procedures_callnoreturn\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      // Call a procedure with no return value.\n      var funcName = Blockly.JavaScript.variableDB_.getName(block.getFieldValue(\"NAME\"), Blockly.Procedures.NAME_TYPE);\n      var args = [];\n      for (var x = 0; x < block.arguments_.length; x++) {\n        args[x] = Blockly.JavaScript.valueToCode(block, \"ARG\" + x, Blockly.JavaScript.ORDER_COMMA) || \"null\";\n        args[x] = \"function(){ return \" + args[x] + \"; }\";\n      }\n      function juntar_args() {\n        if (args.length > 0) {\n          return \"[\\n\" + args.join(\", \\n\") + \"\\n]\";\n        } else {\n          return \"[]\";\n        }\n      }\n      // var code = funcName + '(' + args.join(', ') + ');\\n';\n      var code = \"programa.llamada_proc(\\\"\" + funcName + \"\\\", \" + juntar_args() + \");\\n\";\n      return code;\n    }\n\n  });\n\n  /* ============================================== */\n\n  var CallReturn = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"procedures_callreturn\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      // Call a procedure with a return value.\n      var funcName = Blockly.JavaScript.variableDB_.getName(block.getFieldValue(\"NAME\"), Blockly.Procedures.NAME_TYPE);\n      var args = [];\n      for (var x = 0; x < block.arguments_.length; x++) {\n        args[x] = Blockly.JavaScript.valueToCode(block, \"ARG\" + x, Blockly.JavaScript.ORDER_COMMA) || \"null\";\n        args[x] = \"function(){ return \" + args[x] + \"; }\";\n      }\n      var code = funcName + \"(\" + args.join(\", \") + \")\";\n      return [code, Blockly.JavaScript.ORDER_FUNCTION_CALL];\n    }\n\n  });\n\n  /* ============================================== */\n\n  var ParamGet = CambioDeJSDeBlocky.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"param_get\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      // Variable getter.\n      var code = Blockly.JavaScript.variableDB_.getName(block.getFieldValue(\"VAR\"), Blockly.Variables.NAME_TYPE);\n\n      // agrego parentesis para llamar al closure del parametro\n      return [\"receptor.parametro(\\\"\" + code + \"\\\")\", Blockly.JavaScript.ORDER_ATOMIC];\n    }\n\n  });\n\n  /* ============================================== */\n\n  var AlEmpezar = Bloque.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"al_empezar_a_ejecutar\");\n    },\n\n    block_init: function block_init(block) {\n      block.setColour(Blockly.Blocks.eventos.COLOUR);\n      block.appendDummyInput().appendField(\"Al empezar a ejecutar\");\n      block.appendStatementInput(\"program\");\n      block.setDeletable(false);\n      block.setEditable(false);\n      block.setMovable(false);\n    },\n\n    block_javascript: function block_javascript(block) {\n      var statements_program = Blockly.JavaScript.statementToCode(block, \"program\");\n      var r = \"programa.empezar_secuencia();\\n\";\n      r += statements_program + \"\\n\";\n      r += \"programa.ejecutar(receptor);\\n\";\n      return r;\n    }\n\n  });\n\n  var Accion = Bloque.extend({\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.setColour(Blockly.Blocks.primitivas.COLOUR);\n      block.setPreviousStatement(true);\n      block.setNextStatement(true);\n    },\n\n    block_javascript: function block_javascript(block) {\n      return \"programa.hacer(\" + this.nombre_comportamiento() + \", \" + this.argumentos() + \")\\n\";\n    }\n\n  });\n\n  var Sensor = Bloque.extend({\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.setColour(Blockly.Blocks.sensores.COLOUR);\n      block.setInputsInline(true);\n      block.setOutput(true);\n    },\n\n    block_javascript: function block_javascript(block) {\n      return [\"receptor.\" + this.nombre_sensor() + \"\\n\", Blockly.JavaScript.ORDER_ATOMIC];\n    }\n  });\n\n  /*\n   * Representa un valor mas complejo\n   * de un campo de un bloque\n   */\n  var ParamValor = Ember['default'].Object.extend({\n    build: function build() {\n      var str_block = \"\";\n      str_block += \"<value name=\\\"NOMBRE\\\">\".replace(\"NOMBRE\", this.get(\"nombre_param\"));\n\n      str_block += \"<block type=\\\"TIPO\\\">\".replace(\"TIPO\", this.get(\"tipo_bloque\"));\n\n      str_block += \"<field name=\\\"TIPO\\\">\".replace(\"TIPO\", this.get(\"nombre_valor\"));\n      str_block += this.get(\"valor\");\n      str_block += \"</field>\";\n\n      str_block += \"</block>\";\n\n      str_block += \"</value>\";\n\n      return str_block;\n    }\n  });\n\n  /* ============================================== */\n\n  var EstructuraDeControl = Bloque.extend({\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.setColour(Blockly.Blocks.loops.COLOUR);\n      block.setInputsInline(true);\n      block.setPreviousStatement(true);\n      block.setNextStatement(true);\n    }\n\n  });\n\n  /* ============================================== */\n\n  var Repetir = EstructuraDeControl.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"repetir\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendValueInput(\"count\").setCheck(\"Number\").appendField(\"repetir\");\n      block.appendStatementInput(\"block\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      var value_count = Blockly.JavaScript.valueToCode(block, \"count\", Blockly.JavaScript.ORDER_ATOMIC) || \"0\";\n      var statements_block = Blockly.JavaScript.statementToCode(block, \"block\");\n      var r = \"programa.empezar_secuencia();\\n\";\n      r += statements_block;\n      r += \"programa.repetirN(function(){\\nreturn {{n}};\\n});\\n\".replace(\"{{n}}\", value_count);\n      return r;\n    },\n\n    get_parametros: function get_parametros() {\n      return [ParamValor.create({\n        nombre_param: \"count\",\n        tipo_bloque: \"math_number\",\n        nombre_valor: \"NUM\",\n        valor: \"10\"\n      })];\n    }\n\n  });\n\n  var bloques = { Bloque: Bloque, CambioDeJSDeBlocky: CambioDeJSDeBlocky, VariableGet: VariableGet,\n    VariableSet: VariableSet, VariableLocalGet: VariableLocalGet, VariableLocalSet: VariableLocalSet, Procedimiento: Procedimiento,\n    Funcion: Funcion, CallNoReturn: CallNoReturn, CallReturn: CallReturn, ParamGet: ParamGet, AlEmpezar: AlEmpezar, Accion: Accion,\n    Sensor: Sensor, Repetir: Repetir };\n\n  exports['default'] = bloques;\n\n  // espera:\n  // + id\n  // + categoria\n\n  // abstracta\n\n  // abstracta\n\n  // pisado porque provisoriamente se\n  // usa el que viene con blockly\n\n});","define('pilas-engine-bloques/adapters/application', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].LSAdapter.extend({\n    namespace: \"pilas-engine-bloques_namespace\"\n  });\n\n});","define('pilas-engine-bloques/app', ['exports', 'ember', 'ember/resolver', 'ember/load-initializers', 'pilas-engine-bloques/config/environment'], function (exports, Ember, Resolver, loadInitializers, config) {\n\n  'use strict';\n\n  Ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  var inflector = Ember['default'].Inflector.inflector;\n  inflector.irregular(\"galeria\", \"galeria\");\n\n  var App = Ember['default'].Application.extend({\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix,\n    Resolver: Resolver['default']\n  });\n\n  loadInitializers['default'](App, config['default'].modulePrefix);\n\n  exports['default'] = App;\n\n});","define('pilas-engine-bloques/components/em-button', ['exports', 'ember-idx-button/button'], function (exports, ButtonComponent) {\n\n\t'use strict';\n\n\texports['default'] = ButtonComponent['default'];\n\n});","define('pilas-engine-bloques/components/em-checkbox', ['exports', 'ember', 'ember-idx-forms/checkbox'], function (exports, Ember, CheckboxComponent) {\n\n\t'use strict';\n\n\texports['default'] = CheckboxComponent['default'];\n\n});","define('pilas-engine-bloques/components/em-form-control-help', ['exports', 'ember', 'ember-idx-forms/control_help'], function (exports, Ember, FormControlHelperComponent) {\n\n\t'use strict';\n\n\texports['default'] = FormControlHelperComponent['default'];\n\n});","define('pilas-engine-bloques/components/em-form-group', ['exports', 'ember', 'ember-idx-forms/group'], function (exports, Ember, FormGroupComponent) {\n\n\t'use strict';\n\n\texports['default'] = FormGroupComponent['default'];\n\n});","define('pilas-engine-bloques/components/em-form-label', ['exports', 'ember', 'ember-idx-forms/label'], function (exports, Ember, FormLabelComponent) {\n\n\t'use strict';\n\n\texports['default'] = FormLabelComponent['default'];\n\n});","define('pilas-engine-bloques/components/em-form-submit', ['exports', 'ember', 'ember-idx-forms/submit_button'], function (exports, Ember, SubmitButtonComponent) {\n\n\t'use strict';\n\n\texports['default'] = SubmitButtonComponent['default'];\n\n});","define('pilas-engine-bloques/components/em-form', ['exports', 'ember', 'ember-idx-forms/form'], function (exports, Ember, FormComponent) {\n\n\t'use strict';\n\n\texports['default'] = FormComponent['default'];\n\n});","define('pilas-engine-bloques/components/em-input', ['exports', 'ember', 'ember-idx-forms/input'], function (exports, Ember, InputComponent) {\n\n\t'use strict';\n\n\texports['default'] = InputComponent['default'];\n\n});","define('pilas-engine-bloques/components/em-modal-body', ['exports', 'ember-idx-modal/modal-body'], function (exports, BodyComponent) {\n\n\t'use strict';\n\n\texports['default'] = BodyComponent['default'];\n\n});","define('pilas-engine-bloques/components/em-modal-confirm-with-reason', ['exports', 'ember-idx-modal/modal-confirm-with-reason'], function (exports, ConfirmWithReasonModal) {\n\n\t'use strict';\n\n\texports['default'] = ConfirmWithReasonModal['default'];\n\n});","define('pilas-engine-bloques/components/em-modal-confirm', ['exports', 'ember-idx-modal/modal-confirm'], function (exports, ModalConfirm) {\n\n\t'use strict';\n\n\texports['default'] = ModalConfirm['default'];\n\n});","define('pilas-engine-bloques/components/em-modal-emform', ['exports', 'ember-idx-modal/modal-emform'], function (exports, ModalEmFormComponent) {\n\n\t'use strict';\n\n\texports['default'] = ModalEmFormComponent['default'];\n\n});","define('pilas-engine-bloques/components/em-modal-footer', ['exports', 'ember-idx-modal/modal-footer'], function (exports, FooterComponent) {\n\n\t'use strict';\n\n\texports['default'] = FooterComponent['default'];\n\n});","define('pilas-engine-bloques/components/em-modal-form', ['exports', 'ember-idx-modal/modal-form'], function (exports, ModalFormComponent) {\n\n\t'use strict';\n\n\texports['default'] = ModalFormComponent['default'];\n\n});","define('pilas-engine-bloques/components/em-modal-title', ['exports', 'ember-idx-modal/modal-title'], function (exports, TitleComponent) {\n\n\t'use strict';\n\n\texports['default'] = TitleComponent['default'];\n\n});","define('pilas-engine-bloques/components/em-modal-toggler', ['exports', 'ember-idx-modal/modal-toggler'], function (exports, TogglerComponent) {\n\n\t'use strict';\n\n\texports['default'] = TogglerComponent['default'];\n\n});","define('pilas-engine-bloques/components/em-modal', ['exports', 'ember-idx-modal/modal'], function (exports, ModalComponent) {\n\n\t'use strict';\n\n\texports['default'] = ModalComponent['default'];\n\n});","define('pilas-engine-bloques/components/em-select', ['exports', 'ember', 'ember-idx-forms/select'], function (exports, Ember, SelectComponent) {\n\n\t'use strict';\n\n\texports['default'] = SelectComponent['default'];\n\n});","define('pilas-engine-bloques/components/em-text', ['exports', 'ember', 'ember-idx-forms/text'], function (exports, Ember, TextComponent) {\n\n\t'use strict';\n\n\texports['default'] = TextComponent['default'];\n\n});","define('pilas-engine-bloques/components/lf-outlet', ['exports', 'liquid-fire/ember-internals'], function (exports, ember_internals) {\n\n\t'use strict';\n\n\texports['default'] = ember_internals.StaticOutlet;\n\n});","define('pilas-engine-bloques/components/lf-overlay', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var COUNTER = \"__lf-modal-open-counter\";\n\n  exports['default'] = Ember['default'].Component.extend({\n    tagName: \"span\",\n    classNames: [\"lf-overlay\"],\n\n    didInsertElement: function didInsertElement() {\n      var body = Ember['default'].$(\"body\");\n      var counter = body.data(COUNTER) || 0;\n      body.addClass(\"lf-modal-open\");\n      body.data(COUNTER, counter + 1);\n    },\n\n    willDestroy: function willDestroy() {\n      var body = Ember['default'].$(\"body\");\n      var counter = body.data(COUNTER) || 0;\n      body.data(COUNTER, counter - 1);\n      if (counter < 2) {\n        body.removeClass(\"lf-modal-open\");\n      }\n    }\n  });\n\n});","define('pilas-engine-bloques/components/liquid-child', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    classNames: [\"liquid-child\"],\n    attributeBindings: [\"style\"],\n    style: Ember['default'].computed(\"visible\", function () {\n      return new Ember['default'].Handlebars.SafeString(this.get(\"visible\") ? \"\" : \"visibility:hidden\");\n    }),\n    tellContainerWeRendered: Ember['default'].on(\"didInsertElement\", function () {\n      this.sendAction(\"didRender\", this);\n    })\n  });\n\n});","define('pilas-engine-bloques/components/liquid-container', ['exports', 'ember', 'liquid-fire/growable', 'pilas-engine-bloques/components/liquid-measured'], function (exports, Ember, Growable, liquid_measured) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend(Growable['default'], {\n    classNames: [\"liquid-container\"],\n    classNameBindings: [\"liquidAnimating\"],\n\n    lockSize: function lockSize(elt, want) {\n      elt.outerWidth(want.width);\n      elt.outerHeight(want.height);\n    },\n\n    unlockSize: function unlockSize() {\n      var _this = this;\n\n      var doUnlock = function () {\n        if (!_this.isDestroyed) {\n          _this.set(\"liquidAnimating\", false);\n        }\n        var elt = _this.$();\n        if (elt) {\n          elt.css({ width: \"\", height: \"\" });\n        }\n      };\n      if (this._scaling) {\n        this._scaling.then(doUnlock);\n      } else {\n        doUnlock();\n      }\n    },\n\n    startMonitoringSize: Ember['default'].on(\"didInsertElement\", function () {\n      this._wasInserted = true;\n    }),\n\n    actions: {\n\n      willTransition: function willTransition(versions) {\n        if (!this._wasInserted) {\n          return;\n        }\n\n        // Remember our own size before anything changes\n        var elt = this.$();\n        this._cachedSize = liquid_measured.measure(elt);\n\n        // And make any children absolutely positioned with fixed sizes.\n        for (var i = 0; i < versions.length; i++) {\n          goAbsolute(versions[i]);\n        }\n\n        // Apply '.liquid-animating' to liquid-container allowing\n        // any customizable CSS control while an animating is occuring\n        this.set(\"liquidAnimating\", true);\n      },\n\n      afterChildInsertion: function afterChildInsertion(versions) {\n        var elt = this.$();\n\n        // Measure  children\n        var sizes = [];\n        for (var i = 0; i < versions.length; i++) {\n          if (versions[i].view) {\n            sizes[i] = liquid_measured.measure(versions[i].view.$());\n          }\n        }\n\n        // Measure ourself again to see how big the new children make\n        // us.\n        var want = liquid_measured.measure(elt);\n        var have = this._cachedSize || want;\n\n        // Make ourself absolute\n        this.lockSize(elt, have);\n\n        // Make the children absolute and fixed size.\n        for (i = 0; i < versions.length; i++) {\n          goAbsolute(versions[i], sizes[i]);\n        }\n\n        // Kick off our growth animation\n        this._scaling = this.animateGrowth(elt, have, want);\n      },\n\n      afterTransition: function afterTransition(versions) {\n        for (var i = 0; i < versions.length; i++) {\n          goStatic(versions[i]);\n        }\n        this.unlockSize();\n      }\n    }\n  });\n\n  function goAbsolute(version, size) {\n    if (!version.view) {\n      return;\n    }\n    var elt = version.view.$();\n    var pos = elt.position();\n    if (!size) {\n      size = liquid_measured.measure(elt);\n    }\n    elt.outerWidth(size.width);\n    elt.outerHeight(size.height);\n    elt.css({\n      position: \"absolute\",\n      top: pos.top,\n      left: pos.left\n    });\n  }\n\n  function goStatic(version) {\n    if (version.view) {\n      version.view.$().css({ width: \"\", height: \"\", position: \"\" });\n    }\n  }\n\n});","define('pilas-engine-bloques/components/liquid-if', ['exports', 'ember', 'liquid-fire/ember-internals'], function (exports, Ember, ember_internals) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    _yieldInverse: ember_internals.inverseYieldMethod,\n    hasInverse: Ember['default'].computed(\"inverseTemplate\", function () {\n      return !!this.get(\"inverseTemplate\");\n    })\n  });\n\n});","define('pilas-engine-bloques/components/liquid-measured', ['exports', 'liquid-fire/mutation-observer', 'ember'], function (exports, MutationObserver, Ember) {\n\n  'use strict';\n\n  exports.measure = measure;\n\n  exports['default'] = Ember['default'].Component.extend({\n\n    didInsertElement: function didInsertElement() {\n      var self = this;\n\n      // This prevents margin collapse\n      this.$().css({\n        overflow: \"auto\"\n      });\n\n      this.didMutate();\n\n      this.observer = new MutationObserver['default'](function (mutations) {\n        self.didMutate(mutations);\n      });\n      this.observer.observe(this.get(\"element\"), {\n        attributes: true,\n        subtree: true,\n        childList: true,\n        characterData: true\n      });\n      this.$().bind(\"webkitTransitionEnd\", function () {\n        self.didMutate();\n      });\n      // Chrome Memory Leak: https://bugs.webkit.org/show_bug.cgi?id=93661\n      window.addEventListener(\"unload\", function () {\n        self.willDestroyElement();\n      });\n    },\n\n    willDestroyElement: function willDestroyElement() {\n      if (this.observer) {\n        this.observer.disconnect();\n      }\n    },\n\n    transitionMap: Ember['default'].inject.service(\"liquid-fire-transitions\"),\n\n    didMutate: function didMutate() {\n      // by incrementing the running transitions counter here we prevent\n      // tests from falling through the gap between the time they\n      // triggered mutation the time we may actually animate in\n      // response.\n      var tmap = this.get(\"transitionMap\");\n      tmap.incrementRunningTransitions();\n      Ember['default'].run.next(this, function () {\n        this._didMutate();\n        tmap.decrementRunningTransitions();\n      });\n    },\n\n    _didMutate: function _didMutate() {\n      var elt = this.$();\n      if (!elt || !elt[0]) {\n        return;\n      }\n      this.set(\"measurements\", measure(elt));\n    }\n\n  });\n  function measure($elt) {\n    var width, height;\n\n    // if jQuery sees a zero dimension, it will temporarily modify the\n    // element's css to try to make its size measurable. But that's bad\n    // for us here, because we'll get an infinite recursion of mutation\n    // events. So we trap the zero case without hitting jQuery.\n\n    if ($elt[0].offsetWidth === 0) {\n      width = 0;\n    } else {\n      width = $elt.outerWidth();\n    }\n    if ($elt[0].offsetHeight === 0) {\n      height = 0;\n    } else {\n      height = $elt.outerHeight();\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n});","define('pilas-engine-bloques/components/liquid-modal', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    classNames: [\"liquid-modal\"],\n    currentContext: Ember['default'].computed.oneWay(\"owner.modalContexts.lastObject\"),\n\n    owner: Ember['default'].inject.service(\"liquid-fire-modals\"),\n\n    innerView: Ember['default'].computed(\"currentContext\", function () {\n      var self = this,\n          current = this.get(\"currentContext\"),\n          name = current.get(\"name\"),\n          container = this.get(\"container\"),\n          component = container.lookup(\"component-lookup:main\").lookupFactory(name);\n      Ember['default'].assert(\"Tried to render a modal using component '\" + name + \"', but couldn't find it.\", !!component);\n\n      var args = Ember['default'].copy(current.get(\"params\"));\n\n      args.registerMyself = Ember['default'].on(\"init\", function () {\n        self.set(\"innerViewInstance\", this);\n      });\n\n      // set source so we can bind other params to it\n      args._source = Ember['default'].computed(function () {\n        return current.get(\"source\");\n      });\n\n      var otherParams = current.get(\"options.otherParams\");\n      var from, to;\n      for (from in otherParams) {\n        to = otherParams[from];\n        args[to] = Ember['default'].computed.alias(\"_source.\" + from);\n      }\n\n      var actions = current.get(\"options.actions\") || {};\n\n      // Override sendAction in the modal component so we can intercept and\n      // dynamically dispatch to the controller as expected\n      args.sendAction = function (name) {\n        var actionName = actions[name];\n        if (!actionName) {\n          this._super.apply(this, Array.prototype.slice.call(arguments));\n          return;\n        }\n\n        var controller = current.get(\"source\");\n        var args = Array.prototype.slice.call(arguments, 1);\n        args.unshift(actionName);\n        controller.send.apply(controller, args);\n      };\n\n      return component.extend(args);\n    }),\n\n    actions: {\n      outsideClick: function outsideClick() {\n        if (this.get(\"currentContext.options.dismissWithOutsideClick\")) {\n          this.send(\"dismiss\");\n        } else {\n          proxyToInnerInstance(this, \"outsideClick\");\n        }\n      },\n      escape: function escape() {\n        if (this.get(\"currentContext.options.dismissWithEscape\")) {\n          this.send(\"dismiss\");\n        } else {\n          proxyToInnerInstance(this, \"escape\");\n        }\n      },\n      dismiss: function dismiss() {\n        var source = this.get(\"currentContext.source\"),\n            proto = source.constructor.proto(),\n            params = this.get(\"currentContext.options.withParams\"),\n            clearThem = {};\n\n        for (var key in params) {\n          clearThem[key] = proto[key];\n        }\n        source.setProperties(clearThem);\n      }\n    }\n  });\n\n  function proxyToInnerInstance(self, message) {\n    var vi = self.get(\"innerViewInstance\");\n    if (vi) {\n      vi.send(message);\n    }\n  }\n\n});","define('pilas-engine-bloques/components/liquid-outlet', ['exports', 'ember', 'liquid-fire/ember-internals'], function (exports, Ember, ember_internals) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Component.extend(ember_internals.OutletBehavior);\n\n});","define('pilas-engine-bloques/components/liquid-spacer', ['exports', 'pilas-engine-bloques/components/liquid-measured', 'liquid-fire/growable', 'ember'], function (exports, liquid_measured, Growable, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend(Growable['default'], {\n    enabled: true,\n\n    didInsertElement: function didInsertElement() {\n      var child = this.$(\"> div\");\n      var measurements = this.myMeasurements(liquid_measured.measure(child));\n      this.$().css({\n        overflow: \"hidden\",\n        outerWidth: measurements.width,\n        outerHeight: measurements.height\n      });\n    },\n\n    sizeChange: Ember['default'].observer(\"measurements\", function () {\n      if (!this.get(\"enabled\")) {\n        return;\n      }\n      var elt = this.$();\n      if (!elt || !elt[0]) {\n        return;\n      }\n      var want = this.myMeasurements(this.get(\"measurements\"));\n      var have = liquid_measured.measure(this.$());\n      this.animateGrowth(elt, have, want);\n    }),\n\n    // given our child's outerWidth & outerHeight, figure out what our\n    // outerWidth & outerHeight should be.\n    myMeasurements: function myMeasurements(childMeasurements) {\n      var elt = this.$();\n      return {\n        width: childMeasurements.width + sumCSS(elt, padding(\"width\")) + sumCSS(elt, border(\"width\")),\n        height: childMeasurements.height + sumCSS(elt, padding(\"height\")) + sumCSS(elt, border(\"height\"))\n      };\n      //if (this.$().css('box-sizing') === 'border-box') {\n    }\n\n  });\n\n  function sides(dimension) {\n    return dimension === \"width\" ? [\"Left\", \"Right\"] : [\"Top\", \"Bottom\"];\n  }\n\n  function padding(dimension) {\n    var s = sides(dimension);\n    return [\"padding\" + s[0], \"padding\" + s[1]];\n  }\n\n  function border(dimension) {\n    var s = sides(dimension);\n    return [\"border\" + s[0] + \"Width\", \"border\" + s[1] + \"Width\"];\n  }\n\n  function sumCSS(elt, fields) {\n    var accum = 0;\n    for (var i = 0; i < fields.length; i++) {\n      var num = parseFloat(elt.css(fields[i]), 10);\n      if (!isNaN(num)) {\n        accum += num;\n      }\n    }\n    return accum;\n  }\n\n});","define('pilas-engine-bloques/components/liquid-versions', ['exports', 'ember', 'liquid-fire/ember-internals'], function (exports, Ember, ember_internals) {\n\n  'use strict';\n\n  var get = Ember['default'].get;\n  var set = Ember['default'].set;\n\n  exports['default'] = Ember['default'].Component.extend({\n    tagName: \"\",\n    name: \"liquid-versions\",\n\n    transitionMap: Ember['default'].inject.service(\"liquid-fire-transitions\"),\n\n    appendVersion: Ember['default'].on(\"init\", Ember['default'].observer(\"value\", function () {\n      var versions = get(this, \"versions\");\n      var firstTime = false;\n      var newValue = get(this, \"value\");\n      var oldValue;\n\n      if (!versions) {\n        firstTime = true;\n        versions = Ember['default'].A();\n      } else {\n        oldValue = versions[0];\n      }\n\n      // TODO: may need to extend the comparison to do the same kind of\n      // key-based diffing that htmlbars is doing.\n      if (!firstTime && (!oldValue && !newValue || oldValue === newValue)) {\n        return;\n      }\n\n      this.notifyContainer(\"willTransition\", versions);\n      var newVersion = {\n        value: newValue,\n        shouldRender: newValue || get(this, \"renderWhenFalse\")\n      };\n      versions.unshiftObject(newVersion);\n\n      this.firstTime = firstTime;\n      if (firstTime) {\n        set(this, \"versions\", versions);\n      }\n\n      if (!newVersion.shouldRender && !firstTime) {\n        this._transition();\n      }\n    })),\n\n    _transition: function _transition() {\n      var _this = this;\n\n      var versions = get(this, \"versions\");\n      var transition;\n      var firstTime = this.firstTime;\n      this.firstTime = false;\n\n      this.notifyContainer(\"afterChildInsertion\", versions);\n\n      transition = get(this, \"transitionMap\").transitionFor({\n        versions: versions,\n        parentElement: Ember['default'].$(ember_internals.containingElement(this)),\n        use: get(this, \"use\"),\n        // Using strings instead of booleans here is an\n        // optimization. The constraint system can match them more\n        // efficiently, since it treats boolean constraints as generic\n        // \"match anything truthy/falsy\" predicates, whereas string\n        // checks are a direct object property lookup.\n        firstTime: firstTime ? \"yes\" : \"no\",\n        helperName: get(this, \"name\")\n      });\n\n      if (this._runningTransition) {\n        this._runningTransition.interrupt();\n      }\n      this._runningTransition = transition;\n\n      transition.run().then(function (wasInterrupted) {\n        // if we were interrupted, we don't handle the cleanup because\n        // another transition has already taken over.\n        if (!wasInterrupted) {\n          _this.finalizeVersions(versions);\n          _this.notifyContainer(\"afterTransition\", versions);\n        }\n      }, function (err) {\n        _this.finalizeVersions(versions);\n        _this.notifyContainer(\"afterTransition\", versions);\n        throw err;\n      });\n    },\n\n    finalizeVersions: function finalizeVersions(versions) {\n      versions.replace(1, versions.length - 1);\n    },\n\n    notifyContainer: function notifyContainer(method, versions) {\n      var target = get(this, \"notify\");\n      if (target) {\n        target.send(method, versions);\n      }\n    },\n\n    actions: {\n      childDidRender: function childDidRender(child) {\n        var version = get(child, \"version\");\n        set(version, \"view\", child);\n        this._transition();\n      }\n    }\n\n  });\n\n});","define('pilas-engine-bloques/components/liquid-with', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    name: \"liquid-with\"\n  });\n\n});","define('pilas-engine-bloques/components/lm-container', ['exports', 'ember', 'liquid-fire/tabbable'], function (exports, Ember) {\n\n  'use strict';\n\n  /*\n     Parts of this file were adapted from ic-modal\n\n     https://github.com/instructure/ic-modal\n     Released under The MIT License (MIT)\n     Copyright (c) 2014 Instructure, Inc.\n  */\n\n  var lastOpenedModal = null;\n  Ember['default'].$(document).on(\"focusin\", handleTabIntoBrowser);\n\n  function handleTabIntoBrowser() {\n    if (lastOpenedModal) {\n      lastOpenedModal.focus();\n    }\n  }\n\n  exports['default'] = Ember['default'].Component.extend({\n    classNames: [\"lm-container\"],\n    attributeBindings: [\"tabindex\"],\n    tabindex: 0,\n\n    keyUp: function keyUp(event) {\n      // Escape key\n      if (event.keyCode === 27) {\n        this.sendAction();\n      }\n    },\n\n    keyDown: function keyDown(event) {\n      // Tab key\n      if (event.keyCode === 9) {\n        this.constrainTabNavigation(event);\n      }\n    },\n\n    didInsertElement: function didInsertElement() {\n      this.focus();\n      lastOpenedModal = this;\n    },\n\n    willDestroy: function willDestroy() {\n      lastOpenedModal = null;\n    },\n\n    focus: function focus() {\n      if (this.get(\"element\").contains(document.activeElement)) {\n        // just let it be if we already contain the activeElement\n        return;\n      }\n      var target = this.$(\"[autofocus]\");\n      if (!target.length) {\n        target = this.$(\":tabbable\");\n      }\n\n      if (!target.length) {\n        target = this.$();\n      }\n\n      target[0].focus();\n    },\n\n    constrainTabNavigation: function constrainTabNavigation(event) {\n      var tabbable = this.$(\":tabbable\");\n      var finalTabbable = tabbable[event.shiftKey ? \"first\" : \"last\"]()[0];\n      var leavingFinalTabbable = finalTabbable === document.activeElement ||\n      // handle immediate shift+tab after opening with mouse\n      this.get(\"element\") === document.activeElement;\n      if (!leavingFinalTabbable) {\n        return;\n      }\n      event.preventDefault();\n      tabbable[event.shiftKey ? \"last\" : \"first\"]()[0].focus();\n    },\n\n    click: function click(event) {\n      if (event.target === this.get(\"element\")) {\n        this.sendAction(\"clickAway\");\n      }\n    }\n  });\n\n});","define('pilas-engine-bloques/components/nw-zoom', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    tagName: \"div\",\n    classNames: [\"nw-zoom\"],\n    zoomValue: 100,\n    zoom: Ember['default'].inject.service(),\n\n    canZoomIn: (function () {\n      return this.get(\"zoomValue\") < 120;\n    }).property(\"zoomValue\"),\n\n    canZoomOut: (function () {\n      return this.get(\"zoomValue\") > 80;\n    }).property(\"zoomValue\"),\n\n    cambiarZoom: (function () {\n      var gui = window.requireNode(\"nw.gui\");\n      var win = gui.Window.get();\n      this.get(\"zoom\").setValue(this.get(\"zoomValue\"));\n\n      win.zoomLevel = (this.get(\"zoomValue\") - 100) / 10;\n    }).observes(\"zoomValue\"),\n\n    onStart: (function () {\n      this.set(\"zoomValue\", this.get(\"zoom\").getValue());\n      this.cambiarZoom();\n    }).on(\"init\"),\n\n    actions: {\n      zoomIn: function zoomIn() {\n        this.set(\"zoomValue\", this.get(\"zoomValue\") + 10);\n      },\n      zoomOut: function zoomOut() {\n        this.set(\"zoomValue\", this.get(\"zoomValue\") - 10);\n      },\n      zoomRestore: function zoomRestore() {\n        this.set(\"zoomValue\", 100);\n      }\n    } });\n\n});","define('pilas-engine-bloques/components/pilas-blockly', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    ejecutando: false,\n    cola_deshacer: [],\n    data_observar_blockly: false,\n    actividad: null,\n\n    twitter: Ember['default'].inject.service(),\n    previewData: null, // representa la imagen previsualización del dialogo para twittear.\n    mensajeCompartir: \"Comparto mi solución de pilas-engine-bloques @hugoruscitti\",\n    compartirEnCurso: false,\n    browser: Ember['default'].inject.service(),\n\n    inyectarRedimensionado: (function () {\n\n      window.anterior_altura = 0;\n      window.anterior_ancho = 0;\n      var ancho_canvas = 445;\n\n      function redimensionar() {\n        var panel = document.getElementById(\"panel-derecho\");\n        var contenedorEditor = document.getElementById(\"contenedor-editor\");\n        var panelPilas = document.getElementById(\"panel-pilas\");\n        var e = document.getElementById(\"contenedor-blockly\");\n\n        if (!panel) {\n          return null;\n        }\n\n        var altura = panel.getClientRects()[0].height;\n        var ancho_total = contenedorEditor.getClientRects()[0].width;\n\n        if (window.anterior_altura !== altura || window.anterior_ancho !== ancho_total) {\n\n          e.style.width = ancho_total - ancho_canvas + \"px\";\n          e.style.height = altura - 50 + \"px\";\n          panelPilas.style.width = ancho_canvas - 20 + \"px\";\n\n          window.anterior_altura = altura;\n          window.anterior_ancho = ancho_total;\n\n          Blockly.fireUiEvent(window, \"resize\");\n        }\n      }\n\n      function forzar_redimensionado() {\n        window.anterior_altura += 1;\n        redimensionar();\n      }\n\n      window.onresize = redimensionar;\n      window.forzar_redimensionado = forzar_redimensionado;\n    }).on(\"init\"),\n\n    iniciarBlockly: (function () {\n      var contenedor = this.$().find(\"#contenedor-blockly\")[0];\n      this.set(\"cola_deshacer\", []);\n      //this.cargar_codigo_desde_el_modelo();\n      //this.observarCambiosEnBlocky();\n    }).on(\"didInsertElement\"),\n\n    /**\n     * Se conecta a los eventos y cambios de estado de blockly para implementar\n     * la funcionalidad de 'deshacer'.\n     */\n    observarCambiosEnBlocky: function observarCambiosEnBlocky() {\n      var f = this.almacenar_cambio.bind(this);\n      var d = Blockly.addChangeListener(f);\n      this.set(\"data_observar_blockly\", d);\n    },\n\n    noMirarCambiosEnBlockly: function noMirarCambiosEnBlockly() {\n      if (this.get(\"data_observar_blockly\")) {\n        Blockly.removeChangeListener(this.get(\"data_observar_blockly\"));\n      }\n    },\n\n    almacenar_cambio: function almacenar_cambio() {\n      this.get(\"cola_deshacer\").pushObject(this.obtener_codigo_en_texto());\n      console.log(\"guardar\");\n    },\n\n    restaurar_codigo: function restaurar_codigo(codigo) {\n      var xml = Blockly.Xml.textToDom(codigo);\n      Blockly.mainWorkspace.clear();\n      Blockly.Xml.domToWorkspace(Blockly.getMainWorkspace(), xml);\n    },\n\n    obtener_codigo_en_texto: function obtener_codigo_en_texto() {\n      var xml = Blockly.Xml.workspaceToDom(Blockly.getMainWorkspace());\n      return Blockly.Xml.domToText(xml);\n    },\n\n    cargar_codigo_desde_el_modelo: function cargar_codigo_desde_el_modelo() {\n      if (this.get(\"model\")) {\n        var modelo = this.get(\"model\");\n        var codigo = modelo.get(\"codigo\");\n        this.restaurar_codigo(codigo);\n      }\n      this.sendAction(\"registrarPrimerCodigo\");\n    },\n\n    actions: {\n      ejecutar: function ejecutar() {\n        window.LoopTrap = 1000;\n        //this.sendAction('reiniciar');\n        Blockly.JavaScript.INFINITE_LOOP_TRAP = \"if (--window.LoopTrap == 0) throw \\\"Infinite loop.\\\";\\n\";\n\n        var code = this.get(\"actividad\").generarCodigo();\n        Blockly.JavaScript.INFINITE_LOOP_TRAP = null;\n\n        try {\n          this.set(\"ejecutando\", true);\n          eval(code);\n          this.sendAction(\"parar\");\n        } catch (e) {\n          console.error(e.stack);\n          alert(e);\n        }\n      },\n      reiniciar: function reiniciar() {\n        this.set(\"ejecutando\", false);\n        this.sendAction(\"reiniciar\");\n      },\n      guardar: function guardar() {\n        this.sendAction(\"guardar\");\n      },\n      alternar: function alternar() {\n        //this.sendAction('redimensionar');\n        console.log(this.controllerFor(\"application\"));\n        //.sendAction('redimensionar');\n      },\n      ver_codigo: function ver_codigo() {\n        Blockly.JavaScript.INFINITE_LOOP_TRAP = null;\n        var code = this.get(\"actividad\").generarCodigo();\n        alert(code);\n      },\n      deshacer_cambio: function deshacer_cambio() {\n        this.noMirarCambiosEnBlockly();\n        this.get(\"cola_deshacer\").popObject();\n        var c = this.get(\"cola_deshacer\").popObject();\n        if (c) {\n          console.log(\"deshacer\");\n          this.restaurar_codigo(c);\n        }\n        this.observarCambiosEnBlocky();\n      },\n\n      compartir: function compartir() {\n        this.set(\"abrirDialogoCompartir\", true);\n        var data = canvas.toDataURL(\"image/png\");\n        this.set(\"previewData\", data);\n      },\n\n      abrirMensajePublicado: function abrirMensajePublicado() {\n        var url = this.get(\"mensajePublicadoURL\");\n        this.get(\"browser\").openLink(url);\n      },\n\n      enviarMensaje: function enviarMensaje() {\n        var _this = this;\n\n        this.set(\"envioEnCurso\", true);\n\n        var mensaje = this.get(\"mensajeCompartir\");\n        var imagen = this.get(\"previewData\");\n\n        this.get(\"twitter\").compartir(mensaje, imagen).then(function (data) {\n          _this.set(\"envioEnCurso\", false);\n          _this.set(\"mensajePublicadoURL\", data.url);\n        })[\"catch\"](function (err) {\n          alert(err);\n          _this.set(\"envioEnCurso\", false);\n        });\n      }\n\n    } });\n\n});","define('pilas-engine-bloques/components/pilas-canvas', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    actividad: null,\n\n    iniciarPilas: (function () {\n      var canvas_element = this.$().find(\"canvas\")[0];\n\n      window.pilas = pilasengine.iniciar({\n        ancho: 420,\n        alto: 480,\n        canvas: canvas_element,\n        data_path: \"libs/data\",\n\n        imagenesExtra: [\"fondos.estrellas.png\", \"fondos.obrero.png\", \"fondos.nubes.png\", \"casillaLightbot.png\", \"perro_cohete.png\", \"hueso.png\", \"mock_llave.png\", \"mock_caballero.png\", \"mock_cofre.png\", \"mock_heroe.png\", \"mock_mago.png\", \"mock_unicornio.png\", \"casillaArriba.png\", \"casillaAbajo.png\", \"casillaDerecha.png\", \"casillaIzquierda.png\", \"banana.png\", \"manzana.png\", \"casilla_base.png\", \"robot.png\", \"casilla_con_luz.png\", \"invisible.png\", \"sin_imagen.png\", \"maria.png\", \"sandia.png\", \"compu_animada.png\", \"globoAnimado.png\", \"cangrejo.png\", \"buzo.png\", \"fondos.mar.png\", \"pez1.png\", \"pez2.png\", \"pez3.png\", \"alimento_pez.png\", \"ratonAnimado.png\", \"quesoAnimado.png\", \"naveAnimada.png\", \"robotAnimado.png\", \"pelotaAnimada.png\", \"fondos.biblioteca.png\", \"fondos.reparandoLaNave.png\", \"casilla.reparandoNave.png\", \"marcianoVerdeAnimado.png\", \"carbon_animado.png\", \"hierro_animado.png\"]\n      });\n\n      window.pilas.onready = (function () {\n        this.get(\"actividad\").iniciarEscena();\n\n        var contenedor = document.getElementById(\"contenedor-blockly\");\n        this.get(\"actividad\").iniciarBlockly(contenedor);\n      }).bind(this);\n\n      window.pilas.ejecutar();\n    }).on(\"didInsertElement\") });\n\n});","define('pilas-engine-bloques/components/pilas-desafio', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Component.extend({\n    classNames: [\"desafio\"],\n    nombre: null,\n    deshabilitada: false,\n\n    actions: {\n      abrir: function abrir() {\n        this.sendAction(\"onSelect\", this.get(\"nombre\"));\n      }\n    }\n  });\n\n});","define('pilas-engine-bloques/controllers/application', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var Bootstrap = window.Bootstrap;\n\n  exports['default'] = Ember['default'].Controller.extend({\n    url: \"\",\n    queryParams: [\"layout\"],\n    layout: true,\n    environment: Ember['default'].inject.service(),\n\n    mostrar_url: (function () {\n      var controller = this;\n\n      var actualizar = function actualizar() {\n        controller.set(\"url\", window.location.href);\n      };\n\n      setInterval(actualizar, 100);\n\n      this.set(\"layout\", this.get(\"environment\").get(\"showLayout\"));\n    }).on(\"init\"),\n\n    myModalButtons: [Ember['default'].Object.create({ title: \"Cerrar\", dismiss: \"modal\" })],\n\n    actions: {\n      mostrar_devtools: function mostrar_devtools() {\n        window.requireNode(\"nw.gui\").Window.get().showDevTools();\n      },\n      actualizar: function actualizar() {\n        location.reload(true);\n      },\n      redimensionar: function redimensionar() {\n        alert(\"tengo que redimensionar!\");\n      }\n    }\n\n  });\n\n});","define('pilas-engine-bloques/controllers/desafios/index', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    actions: {\n      onSelect: function onSelect(name) {\n        this.transitionToRoute(\"desafios.nombre\", name);\n      }\n    }\n  });\n\n});","define('pilas-engine-bloques/controllers/editor', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    //actividad: Actividades.Alien,\n    nombre_al_guardar: \"mi actividad\",\n    tmp_codigo_xml: \"\",\n\n    debeGuardar: function debeGuardar() {\n      var codigo_xml = this.get(\"actividad\").obtener_codigo_en_texto();\n      return codigo_xml !== this.get(\"tmp_codigo_xml\");\n    },\n\n    inyectarRedimensionado: (function () {\n\n      window.anterior_altura = 0;\n      window.anterior_ancho = 0;\n      var ancho_canvas = 445;\n\n      function redimensionar() {\n        var panel = document.getElementById(\"panel-derecho\");\n        var contenedorEditor = document.getElementById(\"contenedor-editor\");\n        var panelPilas = document.getElementById(\"panel-pilas\");\n        var e = document.getElementById(\"contenedor-blockly\");\n\n        if (!panel) {\n          return null;\n        }\n\n        var altura = panel.getClientRects()[0].height;\n        var ancho_total = contenedorEditor.getClientRects()[0].width;\n\n        if (window.anterior_altura !== altura || window.anterior_ancho !== ancho_total) {\n\n          e.style.width = ancho_total - ancho_canvas + \"px\";\n          e.style.height = altura - 50 + \"px\";\n          panelPilas.style.width = ancho_canvas - 20 + \"px\";\n\n          window.anterior_altura = altura;\n          window.anterior_ancho = ancho_total;\n\n          Blockly.fireUiEvent(window, \"resize\");\n        }\n      }\n\n      function forzar_redimensionado() {\n        window.anterior_altura += 1;\n        redimensionar();\n      }\n\n      window.onresize = redimensionar;\n      window.forzar_redimensionado = forzar_redimensionado;\n    }).on(\"init\"),\n\n    \"botones-modal-guardar\": [Ember['default'].Object.create({ title: \"Guardar y ver en la galería\", clicked: \"guardarEnGaleriaYRedireccionar\" }), Ember['default'].Object.create({ title: \"Guardar y continuar\", clicked: \"guardarEnGaleria\", dismiss: \"modal\" }), Ember['default'].Object.create({ title: \"Cerrar\", dismiss: \"modal\" })],\n\n    actions: {\n      registrarPrimerCodigo: function registrarPrimerCodigo() {\n        var codigo_xml = this.get(\"actividad\").obtener_codigo_en_texto();\n        this.set(\"tmp_codigo_xml\", codigo_xml);\n        if (this.get(\"model\")) {\n          this.set(\"nombre_al_guardar\", this.get(\"model\").get(\"nombre\"));\n        }\n      },\n\n      guardar: function guardar() {\n        var codigo_xml = this.get(\"actividad\").obtener_codigo_en_texto();\n        this.set(\"tmp_codigo_xml\", codigo_xml);\n        return Bootstrap.ModalManager.show(\"modal-guardar\");\n      },\n\n      guardarEnGaleriaYRedireccionar: function guardarEnGaleriaYRedireccionar() {\n        this.send(\"guardarEnGaleria\");\n        this.transitionToRoute(\"galeria\");\n      },\n\n      guardarEnGaleria: function guardarEnGaleria() {\n        //alert(\"test\");\n        var imagen = document.getElementById(\"canvas\");\n        var imagen_data = imagen.toDataURL(\"image/png\");\n\n        var juego = this.get(\"model\");\n\n        if (juego) {\n          juego.set(\"nombre\", this.get(\"nombre_al_guardar\"));\n          juego.set(\"imagen\", imagen_data);\n          juego.set(\"codigo\", this.get(\"tmp_codigo_xml\"));\n        } else {\n          juego = this.store.createRecord(\"galeria\", {\n            nombre: this.get(\"nombre_al_guardar\"),\n            imagen: imagen_data,\n            codigo: this.get(\"tmp_codigo_xml\")\n          });\n        }\n\n        juego.save();\n      },\n\n      reiniciar: function reiniciar() {\n        this.get(\"actividad\").iniciarEscena();\n      }\n    }\n  });\n\n});","define('pilas-engine-bloques/controllers/galeria', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].ArrayController.extend({\n    actions: {\n      eliminar: function eliminar(record) {\n        record.destroyRecord();\n      },\n\n      abrir: function abrir(record) {\n        this.transitionToRoute(\"editor\", record);\n      } }\n  });\n\n});","define('pilas-engine-bloques/controllers/iframe', ['exports', 'ember', 'pilas-engine-bloques/actividades'], function (exports, Ember, Actividades) {\n\n  'use strict';\n\n  var Bootstrap = window.Bootstrap;\n\n  exports['default'] = Ember['default'].Controller.extend({\n    queryParams: [\"layout\"],\n    layout: true,\n    actividad: Actividades['default'].Alien,\n    nombre_al_guardar: \"mi actividad\",\n    tmp_codigo_xml: \"\",\n\n    debeGuardar: function debeGuardar() {\n      var codigo_xml = this.get(\"actividad\").obtener_codigo_en_texto();\n      return codigo_xml !== this.get(\"tmp_codigo_xml\");\n    },\n\n    inyectarRedimensionado: (function () {\n\n      window.anterior_altura = 0;\n      window.anterior_ancho = 0;\n      var ancho_canvas = 445;\n\n      function redimensionar() {\n        var panel = document.getElementById(\"panel-derecho\");\n        var contenedorEditor = document.getElementById(\"contenedor-editor\");\n        var panelPilas = document.getElementById(\"panel-pilas\");\n        var e = document.getElementById(\"contenedor-blockly\");\n\n        if (!panel) {\n          return null;\n        }\n\n        var altura = panel.getClientRects()[0].height;\n        var ancho_total = contenedorEditor.getClientRects()[0].width;\n\n        if (window.anterior_altura !== altura || window.anterior_ancho !== ancho_total) {\n\n          e.style.width = ancho_total - ancho_canvas + \"px\";\n          e.style.height = altura - 50 + \"px\";\n          panelPilas.style.width = ancho_canvas - 20 + \"px\";\n\n          window.anterior_altura = altura;\n          window.anterior_ancho = ancho_total;\n\n          Blockly.fireUiEvent(window, \"resize\");\n        }\n      }\n\n      function forzar_redimensionado() {\n        window.anterior_altura += 1;\n        redimensionar();\n      }\n\n      window.onresize = redimensionar;\n      window.forzar_redimensionado = forzar_redimensionado;\n    }).on(\"init\"),\n\n    \"botones-modal-guardar\": [Ember['default'].Object.create({ title: \"Guardar y ver en la galería\", clicked: \"guardarEnGaleriaYRedireccionar\" }), Ember['default'].Object.create({ title: \"Guardar y continuar\", clicked: \"guardarEnGaleria\", dismiss: \"modal\" }), Ember['default'].Object.create({ title: \"Cerrar\", dismiss: \"modal\" })],\n\n    actions: {\n      registrarPrimerCodigo: function registrarPrimerCodigo() {\n        var codigo_xml = this.get(\"actividad\").obtener_codigo_en_texto();\n        this.set(\"tmp_codigo_xml\", codigo_xml);\n        if (this.get(\"model\")) {\n          this.set(\"nombre_al_guardar\", this.get(\"model\").get(\"nombre\"));\n        }\n      },\n\n      guardar: function guardar() {\n        var codigo_xml = this.get(\"actividad\").obtener_codigo_en_texto();\n        this.set(\"tmp_codigo_xml\", codigo_xml);\n        return Bootstrap.ModalManager.show(\"modal-guardar\");\n      },\n\n      guardarEnGaleriaYRedireccionar: function guardarEnGaleriaYRedireccionar() {\n        this.send(\"guardarEnGaleria\");\n        this.transitionToRoute(\"galeria\");\n      },\n\n      guardarEnGaleria: function guardarEnGaleria() {\n        var imagen = document.getElementById(\"canvas\");\n        var imagen_data = imagen.toDataURL(\"image/png\");\n\n        var juego = this.get(\"model\");\n\n        if (juego) {\n          juego.set(\"nombre\", this.get(\"nombre_al_guardar\"));\n          juego.set(\"imagen\", imagen_data);\n          juego.set(\"codigo\", this.get(\"tmp_codigo_xml\"));\n        } else {\n          juego = this.store.createRecord(\"galeria\", {\n            nombre: this.get(\"nombre_al_guardar\"),\n            imagen: imagen_data,\n            codigo: this.get(\"tmp_codigo_xml\")\n          });\n        }\n\n        juego.save();\n      },\n\n      reiniciar: function reiniciar() {\n        this.get(\"actividad\").iniciarEscena();\n      }\n    }\n  });\n\n});","define('pilas-engine-bloques/controllers/preferencia', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Controller.extend({\n    edicion: false,\n    actions: {\n      guardar: function guardar() {\n        var record = this.store.find(\"preferencium\", { tipo: \"principal\" });\n        record.save();\n\n        model.save().then(function () {\n          this.set(\"edicion\", false);\n        });\n      },\n      editar: function editar() {\n        this.set(\"edicion\", true);\n      } }\n  });\n\n});","define('pilas-engine-bloques/helpers/fa-icon', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var FA_PREFIX = /^fa\\-.+/;\n\n  var warn = Ember['default'].Logger.warn;\n\n  /**\n   * Handlebars helper for generating HTML that renders a FontAwesome icon.\n   *\n   * @param  {String} name    The icon name. Note that the `fa-` prefix is optional.\n   *                          For example, you can pass in either `fa-camera` or just `camera`.\n   * @param  {Object} options Options passed to helper.\n   * @return {Ember.Handlebars.SafeString} The HTML markup.\n   */\n  var faIcon = function faIcon(name, options) {\n    if (Ember['default'].typeOf(name) !== \"string\") {\n      var message = \"fa-icon: no icon specified\";\n      warn(message);\n      return Ember['default'].String.htmlSafe(message);\n    }\n\n    var params = options.hash,\n        classNames = [],\n        html = \"\";\n\n    classNames.push(\"fa\");\n    if (!name.match(FA_PREFIX)) {\n      name = \"fa-\" + name;\n    }\n    classNames.push(name);\n    if (params.spin) {\n      classNames.push(\"fa-spin\");\n    }\n    if (params.flip) {\n      classNames.push(\"fa-flip-\" + params.flip);\n    }\n    if (params.rotate) {\n      classNames.push(\"fa-rotate-\" + params.rotate);\n    }\n    if (params.lg) {\n      warn(\"fa-icon: the 'lg' parameter is deprecated. Use 'size' instead. I.e. {{fa-icon size=\\\"lg\\\"}}\");\n      classNames.push(\"fa-lg\");\n    }\n    if (params.x) {\n      warn(\"fa-icon: the 'x' parameter is deprecated. Use 'size' instead. I.e. {{fa-icon size=\\\"\" + params.x + \"\\\"}}\");\n      classNames.push(\"fa-\" + params.x + \"x\");\n    }\n    if (params.size) {\n      if (Ember['default'].typeOf(params.size) === \"string\" && params.size.match(/\\d+/)) {\n        params.size = Number(params.size);\n      }\n      if (Ember['default'].typeOf(params.size) === \"number\") {\n        classNames.push(\"fa-\" + params.size + \"x\");\n      } else {\n        classNames.push(\"fa-\" + params.size);\n      }\n    }\n    if (params.fixedWidth) {\n      classNames.push(\"fa-fw\");\n    }\n    if (params.listItem) {\n      classNames.push(\"fa-li\");\n    }\n    if (params.pull) {\n      classNames.push(\"pull-\" + params.pull);\n    }\n    if (params.border) {\n      classNames.push(\"fa-border\");\n    }\n    if (params.classNames && !Ember['default'].isArray(params.classNames)) {\n      params.classNames = [params.classNames];\n    }\n    if (!Ember['default'].isEmpty(params.classNames)) {\n      Array.prototype.push.apply(classNames, params.classNames);\n    }\n\n    html += \"<\";\n    var tagName = params.tagName || \"i\";\n    html += tagName;\n    html += \" class='\" + classNames.join(\" \") + \"'\";\n    if (params.title) {\n      html += \" title='\" + params.title + \"'\";\n    }\n    if (params.ariaHidden === undefined || params.ariaHidden) {\n      html += \" aria-hidden=\\\"true\\\"\";\n    }\n    html += \"></\" + tagName + \">\";\n    return Ember['default'].String.htmlSafe(html);\n  };\n\n  exports['default'] = Ember['default'].Handlebars.makeBoundHelper(faIcon);\n\n  exports.faIcon = faIcon;\n\n});","define('pilas-engine-bloques/helpers/lf-yield-inverse', ['exports', 'liquid-fire/ember-internals'], function (exports, ember_internals) {\n\n  'use strict';\n\n  exports['default'] = {\n    isHTMLBars: true,\n    helperFunction: ember_internals.inverseYieldHelper\n  };\n\n});","define('pilas-engine-bloques/helpers/liquid-bind', ['exports', 'liquid-fire/ember-internals'], function (exports, ember_internals) {\n\n\t'use strict';\n\n\texports['default'] = ember_internals.makeHelperShim(\"liquid-bind\");\n\n});","define('pilas-engine-bloques/helpers/liquid-if', ['exports', 'liquid-fire/ember-internals'], function (exports, ember_internals) {\n\n  'use strict';\n\n  exports['default'] = ember_internals.makeHelperShim(\"liquid-if\", function (params, hash, options) {\n    hash.helperName = \"liquid-if\";\n    hash.inverseTemplate = options.inverse;\n  });\n\n});","define('pilas-engine-bloques/helpers/liquid-outlet', ['exports', 'liquid-fire/ember-internals'], function (exports, ember_internals) {\n\n  'use strict';\n\n  exports['default'] = ember_internals.makeHelperShim(\"liquid-outlet\", function (params, hash) {\n    hash._outletName = params[0] || \"main\";\n  });\n\n});","define('pilas-engine-bloques/helpers/liquid-unless', ['exports', 'liquid-fire/ember-internals'], function (exports, ember_internals) {\n\n  'use strict';\n\n  exports['default'] = ember_internals.makeHelperShim(\"liquid-if\", function (params, hash, options) {\n    hash.helperName = \"liquid-unless\";\n    hash.inverseTemplate = options.template;\n    options.template = options.inverse;\n  });\n\n});","define('pilas-engine-bloques/helpers/liquid-with', ['exports', 'liquid-fire/ember-internals'], function (exports, ember_internals) {\n\n\t'use strict';\n\n\texports['default'] = ember_internals.makeHelperShim(\"liquid-with\");\n\n});","define('pilas-engine-bloques/initialize', ['exports', 'ember', 'ember-idx-utils/config'], function (exports, Em, IdxConfig) {\n\n  'use strict';\n\n  exports['default'] = {\n    name: \"ember-idx-utils\",\n    initialize: function initialize() {\n      if (!Em['default'].IdxConfig) {\n        Em['default'].IdxConfig = IdxConfig['default'].create();\n      }\n    }\n  };\n\n});","define('pilas-engine-bloques/initializers/app-version', ['exports', 'pilas-engine-bloques/config/environment', 'ember'], function (exports, config, Ember) {\n\n  'use strict';\n\n  var classify = Ember['default'].String.classify;\n  var registered = false;\n\n  exports['default'] = {\n    name: \"App Version\",\n    initialize: function initialize(container, application) {\n      if (!registered) {\n        var appName = classify(application.toString());\n        Ember['default'].libraries.register(appName, config['default'].APP.version);\n        registered = true;\n      }\n    }\n  };\n\n});","define('pilas-engine-bloques/initializers/ember-idx-modal', ['exports', 'ember', 'ember-idx-utils/config'], function (exports, Em, IdxConfig) {\n\n    'use strict';\n\n    exports['default'] = {\n        name: \"ember-idx-modal\",\n        initialize: function initialize() {\n            var Config = Em['default'].IdxConfig = Em['default'].IdxConfig ? Em['default'].IdxConfig : IdxConfig['default'].create();\n\n            var defaultConfig = Config.getConfig(\"bs\");\n            if (!defaultConfig) {\n                Config.addConfig(\"bs\");\n                defaultConfig = Config.getConfig(\"bs\");\n            }\n\n            defaultConfig.modal = {\n                classes: [\"em-modal\", \"modal\", \"fade\"],\n                bodyClasses: [\"modal-body\"],\n                titleClasses: [\"modal-header\"],\n                footerClasses: [\"modal-footer\"]\n            };\n        }\n    };\n\n});","define('pilas-engine-bloques/initializers/export-application-global', ['exports', 'ember', 'pilas-engine-bloques/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  exports.initialize = initialize;\n\n  function initialize(container, application) {\n    var classifiedName = Ember['default'].String.classify(config['default'].modulePrefix);\n\n    if (config['default'].exportApplicationGlobal && !window[classifiedName]) {\n      window[classifiedName] = application;\n    }\n  }\n\n  ;\n\n  exports['default'] = {\n    name: \"export-application-global\",\n\n    initialize: initialize\n  };\n\n});","define('pilas-engine-bloques/initializers/liquid-fire', ['exports', 'liquid-fire/router-dsl-ext'], function (exports) {\n\n  'use strict';\n\n  // This initializer exists only to make sure that the following import\n  // happens before the app boots.\n  exports['default'] = {\n    name: \"liquid-fire\",\n    initialize: function initialize() {}\n  };\n\n});","define('pilas-engine-bloques/models/galeria', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    nombre: DS['default'].attr(\"string\"),\n    codigo: DS['default'].attr(\"string\"),\n    imagen: DS['default'].attr(\"string\") });\n\n});","define('pilas-engine-bloques/models/preferencium', ['exports', 'ember-data'], function (exports, DS) {\n\n  'use strict';\n\n  exports['default'] = DS['default'].Model.extend({\n    nombre: DS['default'].attr(\"string\"),\n    tipo: DS['default'].attr(\"string\") });\n\n});","define('pilas-engine-bloques/router', ['exports', 'ember', 'pilas-engine-bloques/config/environment'], function (exports, Ember, config) {\n\n  'use strict';\n\n  var Router = Ember['default'].Router.extend({\n    location: config['default'].locationType\n  });\n\n  Router.map(function () {\n    this.route(\"about\");\n    this.route(\"version\");\n    this.route(\"preferencia\");\n    this.resource(\"editor\", { path: \"/editor/:galeria_id\" });\n    this.route(\"galeria\");\n    this.route(\"iframe\");\n    this.route(\"test\");\n    this.resource(\"desafios\", function () {\n      this.route(\"nombre\", { path: \":nombre\" });\n    });\n  });\n\n  exports['default'] = Router;\n\n});","define('pilas-engine-bloques/routes/desafios', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('pilas-engine-bloques/routes/desafios/nombre', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    actividades: Ember['default'].inject.service(),\n    actividadActual: null,\n\n    model: function model(param) {\n      var _this = this;\n\n      return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n        var actividad = _this.get(\"actividades\").obtenerPorNombre(param.nombre);\n        _this.set(\"actividadActual\", actividad);\n\n        if (!actividad) {\n          var msg = \"ERROR: no existe un desafio con ese nombre\";\n          return reject(msg);\n        }\n\n        return resolve({ actividad: actividad });\n      });\n    },\n\n    actions: {\n      reiniciar: function reiniciar() {\n        this.get(\"actividadActual\").iniciarEscena();\n      }\n    }\n  });\n\n});","define('pilas-engine-bloques/routes/editor', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model(params) {\n      if (params.galeria_id !== \"new\") {\n        return this.store.find(\"galeria\", params.galeria_id);\n      } else {\n        return null;\n      }\n    },\n    actions: {\n      willTransition: function willTransition(transition) {\n        var b = this.controllerFor(\"editor\").debeGuardar();\n        if (b) {\n          transition.abort();\n          this.controllerFor(\"editor\").send(\"guardar\");\n        } else {\n          // Bubble the `willTransition` action so that\n          // parent routes can decide whether or not to abort.\n          return true;\n        }\n      }\n    }\n\n  });\n\n});","define('pilas-engine-bloques/routes/galeria', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return this.store.find(\"galeria\");\n    }\n  });\n\n});","define('pilas-engine-bloques/routes/iframe', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      return null;\n    }\n  });\n\n});","define('pilas-engine-bloques/routes/index', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('pilas-engine-bloques/routes/preferencia', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    model: function model() {\n      var record = this.store.find(\"preferencium\", { tipo: \"principal\" });\n      var controller = this;\n\n      record.then(function (data) {\n        return data;\n      })[\"catch\"](function (err) {\n        return controller.store.createRecord(\"preferencium\", {\n          tipo: \"principal\",\n          nombre: \"nombre sin definir\"\n        }).save();\n      });\n    }\n  });\n\n});","define('pilas-engine-bloques/routes/test', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Route.extend({\n    actividades: Ember['default'].inject.service(),\n\n    model: function model() {\n      var actividad = this.get(\"actividades\").obtenerPorNombre(\"alien\");\n\n      return { actividad: actividad };\n    }\n  });\n\n});","define('pilas-engine-bloques/routes/tips', ['exports', 'ember'], function (exports, Ember) {\n\n\t'use strict';\n\n\texports['default'] = Ember['default'].Route.extend({});\n\n});","define('pilas-engine-bloques/serializers/application', ['exports', 'ember-data'], function (exports, DS) {\n\n\t'use strict';\n\n\texports['default'] = DS['default'].LSSerializer.extend();\n\n});","define('pilas-engine-bloques/services/actividades', ['exports', 'ember', 'pilas-engine-bloques/actividades/bloques', 'pilas-engine-bloques/actividades/actividadElObreroCopado', 'pilas-engine-bloques/actividades/actividadAlien'], function (exports, Ember, bloques, actividadElObreroCopado, actividadAlien) {\n\n  'use strict';\n\n  Blockly.Blocks.primitivas = { COLOUR: \"#4a6cd4\" };\n  Blockly.Blocks.sensores = { COLOUR: \"#4a6cd4\" };\n  Blockly.Blocks.eventos = { COLOUR: \"#4a6cd4\" };\n\n  /* ============================================== */\n\n  var Bloque = bloques['default'].Bloque;\n  var CambioDeJSDeBlocky = bloques['default'].CambioDeJSDeBlocky;\n  var VariableGet = bloques['default'].VariableGet;\n  var VariableSet = bloques['default'].VariableSet;\n  var VariableLocalGet = bloques['default'].VariableLocalGet;\n  var VariableLocalSet = bloques['default'].VariableLocalSet;\n  var Procedimiento = bloques['default'].Procedimiento;\n  var Funcion = bloques['default'].Funcion;\n  var CallNoReturn = bloques['default'].CallNoReturn;\n  var CallReturn = bloques['default'].CallReturn;\n  var ParamGet = bloques['default'].ParamGet;\n  var AlEmpezar = bloques['default'].AlEmpezar;\n  var Accion = bloques['default'].Accion;\n  var Sensor = bloques['default'].Sensor;\n\n  /* ============================================== */\n\n  var EstructuraDeControl = Bloque.extend({\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.setColour(Blockly.Blocks.loops.COLOUR);\n      block.setInputsInline(true);\n      block.setPreviousStatement(true);\n      block.setNextStatement(true);\n    }\n\n  });\n\n  /* ============================================== */\n\n  var Repetir = EstructuraDeControl.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"repetir\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendValueInput(\"count\").setCheck(\"Number\").appendField(\"repetir\");\n      block.appendStatementInput(\"block\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      var value_count = Blockly.JavaScript.valueToCode(block, \"count\", Blockly.JavaScript.ORDER_ATOMIC) || \"0\";\n      var statements_block = Blockly.JavaScript.statementToCode(block, \"block\");\n      var r = \"programa.empezar_secuencia();\\n\";\n      r += statements_block;\n      r += \"programa.repetirN(function(){\\nreturn {{n}};\\n});\\n\".replace(\"{{n}}\", value_count);\n      return r;\n    },\n\n    get_parametros: function get_parametros() {\n      return [ParamValor.create({\n        nombre_param: \"count\",\n        tipo_bloque: \"math_number\",\n        nombre_valor: \"NUM\",\n        valor: \"10\"\n      })];\n    }\n\n  });\n\n  /* ============================================== */\n\n  var Si = EstructuraDeControl.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"si\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendValueInput(\"condition\").setCheck(\"Boolean\").appendField(\"si\");\n      block.appendStatementInput(\"block\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      var value_condition = Blockly.JavaScript.valueToCode(block, \"condition\", Blockly.JavaScript.ORDER_ATOMIC) || \"false\";\n      var statements_block = Blockly.JavaScript.statementToCode(block, \"block\");\n      var r = \"programa.empezar_secuencia();\\n\";\n      r += statements_block;\n      r += \"programa.alternativa_si(function(){\\nreturn {{condition}};\\n});\\n\".replace(\"{{condition}}\", value_condition);\n      return r;\n    }\n\n  });\n\n  /* ============================================== */\n\n  var Sino = EstructuraDeControl.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"sino\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendValueInput(\"condition\").setCheck(\"Boolean\").appendField(\"si\");\n      block.appendStatementInput(\"block1\");\n      block.appendDummyInput().appendField(\"sino\");\n      block.appendStatementInput(\"block2\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      var value_condition = Blockly.JavaScript.valueToCode(block, \"condition\", Blockly.JavaScript.ORDER_ATOMIC) || \"false\";\n      var statements_block1 = Blockly.JavaScript.statementToCode(block, \"block1\");\n      var statements_block2 = Blockly.JavaScript.statementToCode(block, \"block2\");\n      var r = \"programa.empezar_secuencia();\\n\";\n      r += statements_block1;\n      r += \"programa.empezar_secuencia();\\n\";\n      r += statements_block2;\n      r += \"programa.alternativa_sino(function(){\\nreturn {{condition}};\\n});\\n\".replace(\"{{condition}}\", value_condition);\n      return r;\n    }\n\n  });\n\n  /* ============================================== */\n\n  var Hasta = EstructuraDeControl.extend({\n\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"hasta\");\n    },\n\n    block_init: function block_init(block) {\n      this._super(block);\n      block.appendValueInput(\"condition\").setCheck(\"Boolean\").appendField(\"repetir hasta que\");\n      block.appendStatementInput(\"block\");\n    },\n\n    block_javascript: function block_javascript(block) {\n      var value_condition = Blockly.JavaScript.valueToCode(block, \"condition\", Blockly.JavaScript.ORDER_ATOMIC) || \"true\";\n      var statements_block = Blockly.JavaScript.statementToCode(block, \"block\");\n      var r = \"programa.empezar_secuencia();\\n\";\n      r += statements_block;\n      r += \"programa.repetir_hasta(function(){\\nreturn {{condition}};\\n});\\n\".replace(\"{{condition}}\", value_condition);\n      return r;\n    }\n\n  });\n\n  var ExpresionDeBlockly = Bloque.extend({\n\n    registrar_en_blockly: function registrar_en_blockly() {}\n\n  });\n\n  var Numero = ExpresionDeBlockly.extend({\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"math_number\");\n    } });\n\n  var OpAritmetica = ExpresionDeBlockly.extend({\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"math_arithmetic\");\n    } });\n\n  var Booleano = ExpresionDeBlockly.extend({\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"logic_boolean\");\n    } });\n\n  var OpComparacion = ExpresionDeBlockly.extend({\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"logic_compare\");\n    } });\n\n  var OpLogica = ExpresionDeBlockly.extend({\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"logic_operation\");\n    } });\n\n  var OpNegacion = ExpresionDeBlockly.extend({\n    init: function init() {\n      this._super();\n      this.set(\"id\", \"logic_negate\");\n    } });\n\n  /* ============================================== */\n\n  /*\n   * Representa el valor\n   * de un campo string de un bloque\n   */\n  /*exported ParamCampo*/\n  var ParamCampo = Ember['default'].Object.extend({\n    build: function build() {\n      var str_block = \"\";\n      str_block += \"<field name=\\\"NOMBRE\\\">\".replace(\"NOMBRE\", this.get(\"nombre_valor\"));\n      str_block += this.get(\"valor\");\n      str_block += \"</field>\";\n      return str_block;\n    }\n  });\n\n  /* ============================================== */\n\n  /*\n   * Representa un valor mas complejo\n   * de un campo de un bloque\n   */\n  var ParamValor = Ember['default'].Object.extend({\n    build: function build() {\n      var str_block = \"\";\n      str_block += \"<value name=\\\"NOMBRE\\\">\".replace(\"NOMBRE\", this.get(\"nombre_param\"));\n\n      str_block += \"<block type=\\\"TIPO\\\">\".replace(\"TIPO\", this.get(\"tipo_bloque\"));\n\n      str_block += \"<field name=\\\"TIPO\\\">\".replace(\"TIPO\", this.get(\"nombre_valor\"));\n      str_block += this.get(\"valor\");\n      str_block += \"</field>\";\n\n      str_block += \"</block>\";\n\n      str_block += \"</value>\";\n\n      return str_block;\n    }\n  });\n\n  /* ============================================== */\n\n  /*\n   * Representa el lenguaje que podra utilizarse\n   * en una actividad\n   */\n  var Lenguaje = Ember['default'].Object.extend({\n\n    init: function init() {\n      this.set(\"categorias\", []);\n      this.set(\"bloques\", {});\n    },\n\n    agregar: function agregar(c, bs) {\n      if (bs !== undefined) {\n        this.categoria(c);\n        bs.forEach((function (b) {\n          this.bloque(c, b);\n        }).bind(this));\n      }\n    },\n\n    categoria: function categoria(c) {\n      this.get(\"categorias\").pushObject(c);\n      var bs = this.get(\"bloques\");\n      bs[c] = [];\n      this.set(\"bloques\", bs);\n    },\n\n    bloque: function bloque(c, b) {\n      var block = this.definir_bloque(b);\n      this.get(\"bloques\")[c].pushObject(block);\n    },\n\n    definir_bloque: function definir_bloque(b) {\n      var block = b.create();\n      block.registrar_en_blockly();\n      return block;\n    },\n\n    build: function build() {\n      var str_toolbox = \"\";\n\n      str_toolbox += \"<xml>\";\n\n      this.get(\"categorias\").forEach((function (item) {\n        if (item === \"Variables\") {\n          str_toolbox += this._build_variables();\n        } else if (item === \"Subtareas\") {\n          str_toolbox += this._build_procedures();\n        } else {\n          str_toolbox += this._build_categoria(item);\n        }\n      }).bind(this));\n\n      str_toolbox += \"</xml>\";\n\n      return str_toolbox;\n    },\n\n    _build_categoria: function _build_categoria(categoria) {\n      var str_category = \"\";\n\n      str_category += \"<category name=\\\"x\\\">\\n\".replace(\"x\", categoria);\n\n      this.get(\"bloques\")[categoria].forEach(function (b) {\n        str_category += b.build();\n      });\n\n      str_category += \"</category>\\n\";\n\n      return str_category;\n    },\n\n    _build_procedures: function _build_procedures() {\n      return \"<category name=\\\"Subtareas\\\" custom=\\\"PROCEDURE\\\"></category>\";\n    },\n\n    _build_variables: function _build_variables() {\n      return \"<category name=\\\"Variables\\\" custom=\\\"VARIABLE\\\"></category>\";\n    }\n\n  });\n\n  /* ============================================== */\n\n  /**\n    Modelo de actividad\n  **/\n  var Actividad = Ember['default'].Object.extend({\n    init: function init() {\n      var actividad = this.get(\"actividad\");\n      this.set(\"nombre\", actividad.nombre);\n      this.set(\"enunciado\", actividad.enunciado);\n      this.set(\"escena\", actividad.escena);\n      this.set(\"puedeComentar\", actividad.puedeComentar);\n      this.set(\"puedeDesactivar\", actividad.puedeDesactivar);\n      this.set(\"puedeDuplicar\", actividad.puedeDuplicar);\n      this.setColours();\n      this.pisar_bloques_blockly();\n    },\n\n    iniciarEscena: function iniciarEscena() {\n      var Esc = this.get(\"escena\");\n      var esc_instance = new Esc();\n      this.set(\"escena_instanciada\", esc_instance);\n      pilas.mundo.gestor_escenas.cambiar_escena(esc_instance);\n    },\n\n    obtenerLenguaje: function obtenerLenguaje() {\n      var act = this.get(\"actividad\");\n      var leng = Lenguaje.create();\n\n      leng.agregar(\"Acciones\", act.acciones);\n      leng.agregar(\"Sensores\", act.sensores);\n      leng.agregar(\"Control\", act.control);\n      leng.agregar(\"Expresiones\", act.expresiones);\n      leng.agregar(\"Variables\", act.variables);\n      leng.agregar(\"Subtareas\", act.subtareas);\n\n      return leng.build();\n    },\n\n    bloques_iniciales: function bloques_iniciales() {\n      return [AlEmpezar];\n    },\n\n    crear_bloques_iniciales: function crear_bloques_iniciales() {\n      this.bloques_iniciales().forEach(function (b) {\n        b.create().instanciar_para_workspace();\n      });\n    },\n\n    pisar_bloques_blockly: function pisar_bloques_blockly() {\n      CallReturn.create().registrar_en_blockly();\n      CallNoReturn.create().registrar_en_blockly();\n      ParamGet.create().registrar_en_blockly();\n      VariableGet.create().registrar_en_blockly();\n      VariableSet.create().registrar_en_blockly();\n      VariableLocalGet.create().registrar_en_blockly();\n      VariableLocalSet.create().registrar_en_blockly();\n    },\n\n    usa_procedimientos: function usa_procedimientos() {\n      return this.get(\"actividad\").subtareas.indexOf(Procedimiento) > -1;\n    },\n\n    usa_funciones: function usa_funciones() {\n      return this.get(\"actividad\").subtareas.indexOf(Funcion) > -1;\n    },\n\n    iniciarBlockly: function iniciarBlockly(contenedor) {\n      var actividad = this;\n\n      Blockly.inject(contenedor, {\n        collapse: false,\n        duplicate: actividad.get(\"puedeDuplicar\"),\n        trashOnlyDelete: true,\n        disable: actividad.get(\"puedeDesactivar\"),\n        comments: actividad.get(\"puedeComentar\"),\n        rgbColours: true,\n        defsOnly: true,\n        def_procedures: actividad.usa_procedimientos(),\n        def_functions: actividad.usa_funciones(),\n        globalVariables: false,\n        oneReturnOnly: true,\n        defsNames: [\"al_empezar_a_ejecutar\", \"procedures_defnoreturn\", \"procedures_defreturn\"],\n        path: \"./libs/blockly/\",\n        toolbox: Blockly.Xml.textToDom(actividad.obtenerLenguaje()) });\n\n      this.crear_bloques_iniciales();\n    },\n\n    generarCodigo: function generarCodigo() {\n      // variable global con la que se accede al receptor del programa\n      window.receptor = this.get(\"escena_instanciada\").automata;\n      var comienzo = \"var programa = new pilas.comportamientos.ConstructorDePrograma();\\n\\n\";\n      var code = Blockly.JavaScript.workspaceToCode();\n      return comienzo + code;\n    },\n\n    // Scratch style colours\n    setColours: function setColours() {\n      Blockly.Blocks.primitivas.COLOUR = \"#4a6cd4\";\n      Blockly.Blocks.sensores.COLOUR = \"#2ca5e2\";\n      Blockly.Blocks.eventos.COLOUR = \"#00a65a\"; // == boton ejecutar\n      Blockly.Blocks.math.COLOUR = \"#49930e\";\n      Blockly.Blocks.logic.COLOUR = \"#5cb712\";\n      Blockly.Blocks.loops.COLOUR = \"#ee7d16\";\n\n      Blockly.Blocks.procedures.COLOUR = \"#6C52EB\";\n      //Blockly.Blocks.procedures.vars.COLOUR = '#8a55d7';\n      //Blockly.Blocks.procedures.params.COLOUR = '#6C52EB';\n\n      Blockly.Blocks.variables.COLOUR = \"#cc5b22\";\n\n      Blockly.Blocks.texts.COLOUR = \"#4a6cd4\";\n      Blockly.Blocks.lists.COLOUR = \"#cc5b22\";\n      Blockly.Blocks.colour.COLOUR = \"#4a6cd4\";\n\n      // IN SCRATCH THE COLOURS ARE\n      // 4a6cd4 MOTION\n      // 8a55d7 LOOKS\n      // bb42c3 SOUND\n      // 0e9a6c PEN\n      // ee7d16 DATA Variables\n      // cc5b22 DATA Lists\n      // c88330 EVENTS\n      // e1a91a CONTROL\n      // 2ca5e2 SENSING\n      // 5cb712 OPERATORS\n      // 49930e OPERATORS dark\n      // 632d99 MORE BLOCKS\n      // 5e4db3 PARAMS\n    },\n\n    obtener_codigo_en_texto: function obtener_codigo_en_texto() {\n      var xml = Blockly.Xml.workspaceToDom(Blockly.getMainWorkspace());\n      return Blockly.Xml.domToText(xml);\n    } });\n\n  exports['default'] = Ember['default'].Service.extend({\n    obtenerPorNombre: function obtenerPorNombre(nombreActividad) {\n\n      var actividades = {\n        alien: actividadAlien['default'],\n        ElObreroCopado: actividadElObreroCopado['default'] };\n\n      var actividad = actividades[nombreActividad];\n\n      if (!actividad) {\n        return null;\n      }\n\n      return Actividad.create({ actividad: actividad });\n    }\n  });\n\n  // pisado porque ya viene con blockly\n  // ni tampoco quiero modificar el javascript\n\n});","define('pilas-engine-bloques/services/browser', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var isNode = typeof process !== \"undefined\" && typeof require !== \"undefined\";\n  var isNodeWebkit = false;\n\n  //Is this Node.js?\n  if (isNode) {\n    //If so, test for Node-Webkit\n    try {\n      isNodeWebkit = typeof require(\"nw.gui\") !== \"undefined\";\n    } catch (e) {\n      isNodeWebkit = false;\n    }\n  }\n\n  exports['default'] = Ember['default'].Service.extend({\n    openLink: function openLink(url) {\n      if (isNodeWebkit) {\n        var gui = window.requireNode(\"nw.gui\");\n        gui.Shell.openExternal(url);\n      } else {\n        window.open(url);\n      }\n    }\n  });\n\n});","define('pilas-engine-bloques/services/environment', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Service.extend({\n    env: null,\n    showLayout: null,\n\n    loadProperties: (function () {\n      this.set(\"env\", this.container.lookupFactory(\"config:environment\"));\n      this.set(\"showLayout\", this.get(\"env\").showLayout);\n    }).on(\"init\"),\n\n    getENV: function getENV() {\n      return this.get(\"env\");\n    }\n  });\n\n});","define('pilas-engine-bloques/services/liquid-fire-modals', ['exports', 'liquid-fire/modals'], function (exports, Modals) {\n\n\t'use strict';\n\n\texports['default'] = Modals['default'];\n\n});","define('pilas-engine-bloques/services/liquid-fire-transitions', ['exports', 'liquid-fire/transition-map'], function (exports, TransitionMap) {\n\n\t'use strict';\n\n\texports['default'] = TransitionMap['default'];\n\n});","define('pilas-engine-bloques/services/twitter', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var URL = \"http://104.131.245.133:9914/sendMessage\";\n\n  exports['default'] = Ember['default'].Service.extend({\n    compartir: function compartir(mensaje, imagen) {\n      return new Ember['default'].RSVP.Promise(function (resolve, reject) {\n        $.ajax({\n          url: URL,\n          type: \"POST\",\n          dataType: \"json\",\n          contentType: \"application/json\",\n          data: JSON.stringify({\n            message: mensaje,\n            media: imagen\n          }),\n          success: function success(res) {\n            resolve(res);\n          },\n          error: function error(xhr, status, errorThrown) {\n            console.error(xhr.responseText);\n            reject(xhr.responseText);\n          }\n        });\n      });\n    }\n  });\n\n});","define('pilas-engine-bloques/services/validations', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  var set = Ember['default'].set;\n\n  exports['default'] = Ember['default'].Service.extend({\n    init: function init() {\n      set(this, \"cache\", {});\n    }\n  });\n\n});","define('pilas-engine-bloques/services/zoom', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = Ember['default'].Service.extend({\n    zoom: 100,\n\n    getValue: function getValue() {\n      return this.get(\"zoom\");\n    },\n\n    setValue: function setValue(zoomValue) {\n      this.set(\"zoom\", zoomValue);\n    }\n  });\n\n});","define('pilas-engine-bloques/templates/-compartir', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"×\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h4\");\n            dom.setAttribute(el1,\"class\",\"modal-title\");\n            var el2 = dom.createTextNode(\"Compartir en twitter\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            block(env, morph0, context, \"em-modal-toggler\", [], {\"class\": \"close\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"          \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"button\");\n              dom.setAttribute(el1,\"class\",\"btn btn-info\");\n              dom.setAttribute(el1,\"disabled\",\"\");\n              var el2 = dom.createElement(\"i\");\n              dom.setAttribute(el2,\"class\",\"fa fa-twitter\");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\" Compartiendo ...\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"          \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"button\");\n              dom.setAttribute(el1,\"class\",\"btn btn-info\");\n              var el2 = dom.createElement(\"i\");\n              dom.setAttribute(el2,\"class\",\"fa fa-twitter\");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\" Compartir\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, element = hooks.element;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var element1 = dom.childAt(fragment, [1]);\n              element(env, element1, context, \"action\", [\"enviarMensaje\"], {});\n              return fragment;\n            }\n          };\n        }());\n        var child2 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"      \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"div\");\n              dom.setAttribute(el1,\"class\",\"compartir-mensaje\");\n              var el2 = dom.createTextNode(\"\\n        Listo, tu mensaje fué publicado en twitter,\\n        \");\n              dom.appendChild(el1, el2);\n              var el2 = dom.createElement(\"a\");\n              dom.setAttribute(el2,\"href\",\"\");\n              var el3 = dom.createTextNode(\"¿querés abrirlo?\");\n              dom.appendChild(el2, el3);\n              dom.appendChild(el1, el2);\n              var el2 = dom.createTextNode(\".\\n      \");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, element = hooks.element;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var element0 = dom.childAt(fragment, [1, 1]);\n              element(env, element0, context, \"action\", [\"abrirMensajePublicado\"], {});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"\\n    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"modal-inline-block  float-left\");\n            var el2 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"img\");\n            dom.setAttribute(el2,\"id\",\"preview\");\n            dom.setAttribute(el2,\"width\",\"210\");\n            dom.setAttribute(el2,\"height\",\"240\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n    \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"modal-inline-block\");\n            var el2 = dom.createTextNode(\"\\n\\n      \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"div\");\n            dom.setAttribute(el2,\"class\",\"fila-opcion\");\n            var el3 = dom.createTextNode(\"\\n        Mensaje: \");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n\\n      \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"div\");\n            dom.setAttribute(el2,\"class\",\"fila-opcion\");\n            var el3 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createComment(\"\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\"      \");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n\\n\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n    \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, attribute = hooks.attribute, inline = hooks.inline, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element2 = dom.childAt(fragment, [1, 1]);\n            var element3 = dom.childAt(fragment, [3]);\n            var attrMorph0 = dom.createAttrMorph(element2, 'src');\n            var morph0 = dom.createMorphAt(dom.childAt(element3, [1]),1,1);\n            var morph1 = dom.createMorphAt(dom.childAt(element3, [3]),1,1);\n            var morph2 = dom.createMorphAt(element3,5,5);\n            attribute(env, attrMorph0, element2, \"src\", get(env, context, \"previewData\"));\n            inline(env, morph0, context, \"textarea\", [], {\"class\": \"modal-mensaje-compartir\", \"rows\": 3, \"value\": get(env, context, \"mensajeCompartir\")});\n            block(env, morph1, context, \"if\", [get(env, context, \"envioEnCurso\")], {}, child0, child1);\n            block(env, morph2, context, \"if\", [get(env, context, \"mensajePublicadoURL\")], {}, child2, null);\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"Cerrar\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            block(env, morph0, context, \"em-modal-toggler\", [], {\"class\": \"btn btn-default\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n          block(env, morph0, context, \"em-modal-title\", [], {}, child0, null);\n          block(env, morph1, context, \"em-modal-body\", [], {}, child1, null);\n          block(env, morph2, context, \"em-modal-footer\", [], {\"style\": \"clear:both\"}, child2, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"id is important, so we can reference it on the toggler component\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        block(env, morph0, context, \"em-modal\", [], {\"configName\": \"bs\", \"open-if\": get(env, context, \"abrirDialogoCompartir\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"×\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h4\");\n            dom.setAttribute(el1,\"class\",\"modal-title\");\n            var el2 = dom.createTextNode(\"Opciones\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            block(env, morph0, context, \"em-modal-toggler\", [], {\"class\": \"close\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"\\n    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"fila-opcion\");\n            var el2 = dom.createTextNode(\"\\n      Herramientas de desarrollo:\\n      \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"button\");\n            dom.setAttribute(el2,\"class\",\"btn btn-success btn-sm\");\n            var el3 = dom.createElement(\"i\");\n            dom.setAttribute(el3,\"class\",\"glyphicon glyphicon glyphicon-refresh\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\" Actualizar\");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createElement(\"button\");\n            dom.setAttribute(el2,\"class\",\"btn btn-info btn-sm\");\n            var el3 = dom.createElement(\"i\");\n            dom.setAttribute(el3,\"class\",\"glyphicon glyphicon glyphicon-cog\");\n            dom.appendChild(el2, el3);\n            var el3 = dom.createTextNode(\" Mostrar devtools\");\n            dom.appendChild(el2, el3);\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n    \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n\\n    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"class\",\"fila-opcion\");\n            var el2 = dom.createTextNode(\"\\n      Tamaño de interfaz: \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n    \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, element = hooks.element, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            var element1 = dom.childAt(element0, [1]);\n            var element2 = dom.childAt(element0, [3]);\n            var morph0 = dom.createMorphAt(dom.childAt(fragment, [3]),1,1);\n            element(env, element1, context, \"action\", [\"actualizar\"], {});\n            element(env, element2, context, \"action\", [\"mostrar_devtools\"], {});\n            content(env, morph0, context, \"nw-zoom\");\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"Cerrar\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            block(env, morph0, context, \"em-modal-toggler\", [], {\"class\": \"btn btn-default\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,5,5,contextualElement);\n          dom.insertBoundary(fragment, null);\n          block(env, morph0, context, \"em-modal-title\", [], {}, child0, null);\n          block(env, morph1, context, \"em-modal-body\", [], {}, child1, null);\n          block(env, morph2, context, \"em-modal-footer\", [], {}, child2, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"id is important, so we can reference it on the toggler component\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        block(env, morph0, context, \"em-modal\", [], {\"configName\": \"bs\", \"id\": \"modal1\"}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/-navbar', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"a\");\n          dom.setAttribute(el1,\"href\",\"#\");\n          var el2 = dom.createTextNode(\"Principal\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"a\");\n          dom.setAttribute(el1,\"href\",\"#\");\n          var el2 = dom.createTextNode(\"Desafios\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createElement(\"a\");\n          dom.setAttribute(el1,\"href\",\"#\");\n          var el2 = dom.createTextNode(\"Galería\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          inline(env, morph0, context, \"fa-icon\", [\"gear\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"nav\");\n        dom.setAttribute(el1,\"class\",\"navbar navbar-default\");\n        dom.setAttribute(el1,\"role\",\"navigation\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"container-fluid\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\" Brand and toggle get grouped for better mobile display \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"navbar-header navbar-collapse\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"a\");\n        dom.setAttribute(el4,\"class\",\"navbar-brand\");\n        dom.setAttribute(el4,\"href\",\"#\");\n        var el5 = dom.createElement(\"img\");\n        dom.setAttribute(el5,\"src\",\"images/logo.png\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\" Collect the nav links, forms, and other content for toggling \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"id\",\"bs-example-navbar-collapse-1\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"ul\");\n        dom.setAttribute(el4,\"class\",\"nav navbar-nav\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"div\");\n        dom.setAttribute(el4,\"class\",\"header-right\");\n        var el5 = dom.createTextNode(\"\\n        \");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        var el5 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0, 1, 7]);\n        var element1 = dom.childAt(element0, [1]);\n        var morph0 = dom.createMorphAt(element1,1,1);\n        var morph1 = dom.createMorphAt(element1,3,3);\n        var morph2 = dom.createMorphAt(element1,5,5);\n        var morph3 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n        block(env, morph0, context, \"link-to\", [\"index\"], {\"tagName\": \"li\"}, child0, null);\n        block(env, morph1, context, \"link-to\", [\"desafios\"], {\"tagName\": \"li\"}, child1, null);\n        block(env, morph2, context, \"link-to\", [\"galeria\"], {\"tagName\": \"li\"}, child2, null);\n        block(env, morph3, context, \"em-modal-toggler\", [], {\"modal-id\": \"modal1\", \"class\": \"header-button\"}, child3, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/application', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n          inline(env, morph0, context, \"partial\", [\"navbar\"], {});\n          inline(env, morph1, context, \"partial\", [\"modal\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"style\");\n          var el2 = dom.createTextNode(\"\\n    .absolute {\\n      top: 10px;\\n    }\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"page-container\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(dom.childAt(fragment, [2]),1,1);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"layout\")], {}, child0, child1);\n        inline(env, morph1, context, \"liquid-outlet\", [], {\"class\": \"absolute\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/em-button', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"i\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          element(env, element0, context, \"bind-attr\", [], {\"class\": \"icon-classes\"});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,1,1,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"icon-classes\")], {}, child0, null);\n        content(env, morph1, context, \"label\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/em-form-control-help', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"helpText\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/em-form-group', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(element0,1,1);\n          element(env, element0, context, \"bind-attr\", [], {\"class\": get(env, context, \"wrapperClass\")});\n          inline(env, morph0, context, \"partial\", [\"components/formgroup/form-group\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"partial\", [\"components/formgroup/form-group\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"wrapperClass\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/em-form-label', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"yield\");\n        content(env, morph1, context, \"text\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/em-form-submit', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"button\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [1]);\n          var element2 = dom.childAt(element1, [1]);\n          var morph0 = dom.createMorphAt(element2,0,0);\n          element(env, element1, context, \"bind-attr\", [], {\"class\": get(env, context, \"horiClass\")});\n          element(env, element2, context, \"bind-attr\", [], {\"class\": get(env, context, \"classes\")});\n          element(env, element2, context, \"bind-attr\", [], {\"disabled\": get(env, context, \"disabled\")});\n          content(env, morph0, context, \"text\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(element0,0,0);\n          element(env, element0, context, \"bind-attr\", [], {\"class\": get(env, context, \"classes\")});\n          element(env, element0, context, \"bind-attr\", [], {\"disabled\": get(env, context, \"disabled\")});\n          content(env, morph0, context, \"text\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"form.isHorizontal\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/em-form', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          content(env, morph0, context, \"em-form-submit\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"yield\");\n        block(env, morph1, context, \"if\", [get(env, context, \"submit_button\")], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/em-modal-confirm', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createElement(\"span\");\n              dom.setAttribute(el1,\"aria-hidden\",\"true\");\n              var el2 = dom.createTextNode(\"×\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"span\");\n              dom.setAttribute(el1,\"class\",\"sr-only\");\n              var el2 = dom.createTextNode(\"Close\");\n              dom.appendChild(el1, el2);\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"h4\");\n            dom.setAttribute(el1,\"class\",\"modal-title\");\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, block = hooks.block, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            var morph1 = dom.createMorphAt(dom.childAt(fragment, [3]),0,0);\n            block(env, morph0, context, \"em-modal-toggler\", [], {\"class\": \"close\"}, child0, null);\n            content(env, morph1, context, \"title\");\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"        \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              inline(env, morph0, context, \"view\", [get(env, context, \"Ember.Select\")], {\"valueBinding\": \"message\", \"contentBinding\": \"messages\", \"optionValuePath\": \"id\", \"optionLabelPath\": \"content.msg\"});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"Confirmation with a reason\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, content = hooks.content, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n            var morph2 = dom.createMorphAt(fragment,7,7,contextualElement);\n            dom.insertBoundary(fragment, null);\n            content(env, morph0, context, \"message\");\n            content(env, morph1, context, \"yield\");\n            block(env, morph2, context, \"if\", [get(env, context, \"reasonModal\")], {}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createElement(\"i\");\n              dom.setAttribute(el1,\"class\",\"fa fa-thumbs-o-down\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,3,3,contextualElement);\n              content(env, morph0, context, \"cancel-button-title\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, inline = hooks.inline, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n            dom.insertBoundary(fragment, null);\n            inline(env, morph0, context, \"em-button\", [], {\"class\": get(env, context, \"cancel-button-classes\"), \"on-click\": \"confirmPressed\", \"default\": get(env, context, \"submit-button-title\"), \"icon-default\": get(env, context, \"submit-button-default-icons\"), \"icon-executing\": get(env, context, \"submit-button-execute-icons\"), \"executing\": get(env, context, \"submit-button-submitting-title\")});\n            block(env, morph1, context, \"em-modal-toggler\", [], {\"class\": get(env, context, \"submit-button-classes\")}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,1,1,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,2,2,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"em-modal-title\", [], {\"classes\": get(env, context, \"modal-title-classes\")}, child0, null);\n          block(env, morph1, context, \"em-modal-body\", [], {}, child1, null);\n          block(env, morph2, context, \"em-modal-footer\", [], {}, child2, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"em-modal\", [], {\"id\": get(env, context, \"confirm-id\"), \"configName\": get(env, context, \"configName\"), \"model-id\": get(env, context, \"model-id\"), \"open-if\": get(env, context, \"open-if\"), \"close-if\": get(env, context, \"close-if\"), \"on-hide\": get(env, context, \"on-hide\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/em-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"modal-dialog\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"modal-content\");\n          var el3 = dom.createTextNode(\"\\n            \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [1, 1]),1,1);\n          content(env, morph0, context, \"yield\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"is-open\")], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/formgroup/control-within-label', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"partial\", [\"components/formgroup/form-group-control\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"em-form-label\", [], {\"text\": get(env, context, \"label\"), \"horiClass\": \"\", \"inlineClass\": \"\", \"viewName\": get(env, context, \"labelViewName\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/formgroup/form-group-control', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          var el2 = dom.createTextNode(\"\\n        \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var morph0 = dom.createMorphAt(element0,1,1);\n          element(env, element0, context, \"bind-attr\", [], {\"class\": get(env, context, \"controlWrapper\")});\n          inline(env, morph0, context, \"view\", [get(env, context, \"controlView\")], {\"viewName\": get(env, context, \"controlViewName\"), \"property\": get(env, context, \"propertyName\"), \"id\": get(env, context, \"cid\")});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          inline(env, morph0, context, \"view\", [get(env, context, \"controlView\")], {\"viewName\": get(env, context, \"controlViewName\"), \"property\": get(env, context, \"propertyName\"), \"id\": get(env, context, \"cid\")});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"controlWrapper\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/formgroup/form-group', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          var child0 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.0\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"                \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"div\");\n                var el2 = dom.createTextNode(\"\\n                    \");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createComment(\"\");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createTextNode(\"\\n                \");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var element2 = dom.childAt(fragment, [1]);\n                var morph0 = dom.createMorphAt(element2,1,1);\n                element(env, element2, context, \"bind-attr\", [], {\"class\": get(env, context, \"labelWrapperClass\")});\n                inline(env, morph0, context, \"partial\", [\"components/formgroup/control-within-label\"], {});\n                return fragment;\n              }\n            };\n          }());\n          var child1 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.0\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"                \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, inline = hooks.inline;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n                inline(env, morph0, context, \"partial\", [\"components/formgroup/control-within-label\"], {});\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, block = hooks.block;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              block(env, morph0, context, \"if\", [get(env, context, \"labelWrapperClass\")], {}, child0, child1);\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          var child0 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.0\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"                \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createElement(\"div\");\n                var el2 = dom.createTextNode(\"\\n                    \");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createComment(\"\");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createTextNode(\"\\n                    \");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createComment(\"\");\n                dom.appendChild(el1, el2);\n                var el2 = dom.createTextNode(\"\\n                \");\n                dom.appendChild(el1, el2);\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, element = hooks.element, inline = hooks.inline;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var element1 = dom.childAt(fragment, [1]);\n                var morph0 = dom.createMorphAt(element1,1,1);\n                var morph1 = dom.createMorphAt(element1,3,3);\n                element(env, element1, context, \"bind-attr\", [], {\"class\": get(env, context, \"labelWrapperClass\")});\n                inline(env, morph0, context, \"em-form-label\", [], {\"text\": get(env, context, \"label\"), \"viewName\": get(env, context, \"labelViewName\")});\n                inline(env, morph1, context, \"partial\", [\"components/formgroup/form-group-control\"], {});\n                return fragment;\n              }\n            };\n          }());\n          var child1 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.0\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"                \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n                \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n                var morph1 = dom.createMorphAt(fragment,3,3,contextualElement);\n                inline(env, morph0, context, \"em-form-label\", [], {\"text\": get(env, context, \"label\"), \"viewName\": get(env, context, \"labelViewName\")});\n                inline(env, morph1, context, \"partial\", [\"components/formgroup/form-group-control\"], {});\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, block = hooks.block;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              block(env, morph0, context, \"if\", [get(env, context, \"labelWrapperClass\")], {}, child0, child1);\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"if\", [get(env, context, \"yieldInLabel\")], {}, child0, child1);\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n            inline(env, morph0, context, \"partial\", [\"components/formgroup/form-group-control\"], {});\n            return fragment;\n          }\n        };\n      }());\n      var child2 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"        \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"span\");\n            dom.setAttribute(el1,\"class\",\"form-control-feedback\");\n            var el2 = dom.createElement(\"i\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1, 0]);\n            element(env, element0, context, \"bind-attr\", [], {\"class\": get(env, context, \"v_icon\")});\n            return fragment;\n          }\n        };\n      }());\n      var child3 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"            \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              inline(env, morph0, context, \"em-form-control-help\", [], {\"text\": get(env, context, \"help\"), \"viewName\": get(env, context, \"helpViewName\")});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"if\", [get(env, context, \"canShowErrors\")], {}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          var morph2 = dom.createMorphAt(fragment,4,4,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"if\", [get(env, context, \"label\")], {}, child0, child1);\n          block(env, morph1, context, \"if\", [get(env, context, \"v_icons\")], {}, child2, null);\n          block(env, morph2, context, \"unless\", [get(env, context, \"form.isInline\")], {}, child3, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          content(env, morph0, context, \"yield\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"unless\", [get(env, context, \"template\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/liquid-bind', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement, blockArguments) {\n            var dom = env.dom;\n            var hooks = env.hooks, set = hooks.set, content = hooks.content;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            set(env, context, \"version\", blockArguments[0]);\n            content(env, morph0, context, \"version\");\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"liquid-versions\", [], {\"value\": get(env, context, \"value\"), \"use\": get(env, context, \"use\"), \"name\": \"liquid-bind\", \"renderWhenFalse\": true}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 1,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement, blockArguments) {\n              var dom = env.dom;\n              var hooks = env.hooks, set = hooks.set, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              set(env, context, \"version\", blockArguments[0]);\n              content(env, morph0, context, \"version\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement, blockArguments) {\n            var dom = env.dom;\n            var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            set(env, context, \"container\", blockArguments[0]);\n            block(env, morph0, context, \"liquid-versions\", [], {\"value\": get(env, context, \"value\"), \"notify\": get(env, context, \"container\"), \"use\": get(env, context, \"use\"), \"name\": \"liquid-bind\", \"renderWhenFalse\": true}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"liquid-container\", [], {\"id\": get(env, context, \"innerId\"), \"class\": get(env, context, \"innerClass\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"containerless\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/liquid-container', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        inline(env, morph0, context, \"yield\", [get(env, context, \"this\")], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/liquid-if', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"      \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              content(env, morph0, context, \"yield\");\n              return fragment;\n            }\n          };\n        }());\n        var child1 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode(\"      \");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              var el1 = dom.createTextNode(\"\\n\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, content = hooks.content;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n              content(env, morph0, context, \"lf-yield-inverse\");\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement, blockArguments) {\n            var dom = env.dom;\n            var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            set(env, context, \"valueVersion\", blockArguments[0]);\n            block(env, morph0, context, \"if\", [get(env, context, \"valueVersion\")], {}, child0, child1);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"liquid-versions\", [], {\"value\": get(env, context, \"value\"), \"name\": get(env, context, \"helperName\"), \"use\": get(env, context, \"use\"), \"renderWhenFalse\": get(env, context, \"hasInverse\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          var child0 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.0\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"        \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, content = hooks.content;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n                content(env, morph0, context, \"yield\");\n                return fragment;\n              }\n            };\n          }());\n          var child1 = (function() {\n            return {\n              isHTMLBars: true,\n              revision: \"Ember@1.11.0\",\n              blockParams: 0,\n              cachedFragment: null,\n              hasRendered: false,\n              build: function build(dom) {\n                var el0 = dom.createDocumentFragment();\n                var el1 = dom.createTextNode(\"        \");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createComment(\"\");\n                dom.appendChild(el0, el1);\n                var el1 = dom.createTextNode(\"\\n\");\n                dom.appendChild(el0, el1);\n                return el0;\n              },\n              render: function render(context, env, contextualElement) {\n                var dom = env.dom;\n                var hooks = env.hooks, content = hooks.content;\n                dom.detectNamespace(contextualElement);\n                var fragment;\n                if (env.useFragmentCache && dom.canClone) {\n                  if (this.cachedFragment === null) {\n                    fragment = this.build(dom);\n                    if (this.hasRendered) {\n                      this.cachedFragment = fragment;\n                    } else {\n                      this.hasRendered = true;\n                    }\n                  }\n                  if (this.cachedFragment) {\n                    fragment = dom.cloneNode(this.cachedFragment, true);\n                  }\n                } else {\n                  fragment = this.build(dom);\n                }\n                var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n                content(env, morph0, context, \"lf-yield-inverse\");\n                return fragment;\n              }\n            };\n          }());\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 1,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement, blockArguments) {\n              var dom = env.dom;\n              var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              set(env, context, \"valueVersion\", blockArguments[0]);\n              block(env, morph0, context, \"if\", [get(env, context, \"valueVersion\")], {}, child0, child1);\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement, blockArguments) {\n            var dom = env.dom;\n            var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            set(env, context, \"container\", blockArguments[0]);\n            block(env, morph0, context, \"liquid-versions\", [], {\"value\": get(env, context, \"value\"), \"notify\": get(env, context, \"container\"), \"name\": get(env, context, \"helperName\"), \"use\": get(env, context, \"use\"), \"renderWhenFalse\": get(env, context, \"hasInverse\")}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"liquid-container\", [], {\"id\": get(env, context, \"innerId\"), \"class\": get(env, context, \"innerClass\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"containerless\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/liquid-measured', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        content(env, morph0, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/liquid-modal', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"    \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"div\");\n            dom.setAttribute(el1,\"role\",\"dialog\");\n            var el2 = dom.createTextNode(\"\\n      \");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createComment(\"\");\n            dom.appendChild(el1, el2);\n            var el2 = dom.createTextNode(\"\\n    \");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, element = hooks.element, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element0 = dom.childAt(fragment, [1]);\n            var morph0 = dom.createMorphAt(element0,1,1);\n            element(env, element0, context, \"bind-attr\", [], {\"class\": \":lf-dialog cc.options.dialogClass\"});\n            element(env, element0, context, \"bind-attr\", [], {\"aria-labelledby\": \"cc.options.ariaLabelledBy\", \"aria-label\": \"cc.options.ariaLabel\"});\n            inline(env, morph0, context, \"view\", [get(env, context, \"innerView\")], {\"dismiss\": \"dismiss\"});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement, blockArguments) {\n          var dom = env.dom;\n          var hooks = env.hooks, set = hooks.set, block = hooks.block, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          var morph1 = dom.createMorphAt(fragment,2,2,contextualElement);\n          dom.insertBoundary(fragment, 0);\n          set(env, context, \"cc\", blockArguments[0]);\n          block(env, morph0, context, \"lm-container\", [], {\"action\": \"escape\", \"clickAway\": \"outsideClick\"}, child0, null);\n          content(env, morph1, context, \"lf-overlay\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"liquid-versions\", [], {\"name\": \"liquid-modal\", \"value\": get(env, context, \"currentContext\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/liquid-outlet', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement, blockArguments) {\n          var dom = env.dom;\n          var hooks = env.hooks, set = hooks.set, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          set(env, context, \"outletStateVersion\", blockArguments[0]);\n          inline(env, morph0, context, \"lf-outlet\", [], {\"staticState\": get(env, context, \"outletStateVersion\")});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"liquid-with\", [get(env, context, \"outletState\")], {\"id\": get(env, context, \"innerId\"), \"class\": get(env, context, \"innerClass\"), \"use\": get(env, context, \"use\"), \"name\": \"liquid-outlet\", \"containerless\": get(env, context, \"containerless\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/liquid-spacer', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,1,1,contextualElement);\n          content(env, morph0, context, \"yield\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"liquid-measured\", [], {\"measurements\": get(env, context, \"measurements\")}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/liquid-versions', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement) {\n              var dom = env.dom;\n              var hooks = env.hooks, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              inline(env, morph0, context, \"yield\", [get(env, context, \"version.value\")], {});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            block(env, morph0, context, \"liquid-child\", [], {\"version\": get(env, context, \"version\"), \"visible\": false, \"didRender\": \"childDidRender\"}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement, blockArguments) {\n          var dom = env.dom;\n          var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          set(env, context, \"version\", blockArguments[0]);\n          block(env, morph0, context, \"if\", [get(env, context, \"version.shouldRender\")], {}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"each\", [get(env, context, \"versions\")], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/liquid-with', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement, blockArguments) {\n            var dom = env.dom;\n            var hooks = env.hooks, set = hooks.set, get = hooks.get, inline = hooks.inline;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            set(env, context, \"version\", blockArguments[0]);\n            inline(env, morph0, context, \"yield\", [get(env, context, \"version\")], {});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"liquid-versions\", [], {\"value\": get(env, context, \"value\"), \"use\": get(env, context, \"use\"), \"name\": get(env, context, \"name\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      var child0 = (function() {\n        var child0 = (function() {\n          return {\n            isHTMLBars: true,\n            revision: \"Ember@1.11.0\",\n            blockParams: 1,\n            cachedFragment: null,\n            hasRendered: false,\n            build: function build(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment(\"\");\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            render: function render(context, env, contextualElement, blockArguments) {\n              var dom = env.dom;\n              var hooks = env.hooks, set = hooks.set, get = hooks.get, inline = hooks.inline;\n              dom.detectNamespace(contextualElement);\n              var fragment;\n              if (env.useFragmentCache && dom.canClone) {\n                if (this.cachedFragment === null) {\n                  fragment = this.build(dom);\n                  if (this.hasRendered) {\n                    this.cachedFragment = fragment;\n                  } else {\n                    this.hasRendered = true;\n                  }\n                }\n                if (this.cachedFragment) {\n                  fragment = dom.cloneNode(this.cachedFragment, true);\n                }\n              } else {\n                fragment = this.build(dom);\n              }\n              var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n              dom.insertBoundary(fragment, null);\n              dom.insertBoundary(fragment, 0);\n              set(env, context, \"version\", blockArguments[0]);\n              inline(env, morph0, context, \"yield\", [get(env, context, \"version\")], {});\n              return fragment;\n            }\n          };\n        }());\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createComment(\"\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement, blockArguments) {\n            var dom = env.dom;\n            var hooks = env.hooks, set = hooks.set, get = hooks.get, block = hooks.block;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n            dom.insertBoundary(fragment, null);\n            dom.insertBoundary(fragment, 0);\n            set(env, context, \"container\", blockArguments[0]);\n            block(env, morph0, context, \"liquid-versions\", [], {\"value\": get(env, context, \"value\"), \"notify\": get(env, context, \"container\"), \"use\": get(env, context, \"use\"), \"name\": get(env, context, \"name\")}, child0, null);\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"liquid-container\", [], {\"id\": get(env, context, \"innerId\"), \"class\": get(env, context, \"innerClass\")}, child0, null);\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"containerless\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/nw-zoom', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1,\"class\",\"btn btn-success btn-rect\");\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"fa fa-minus\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [1]);\n          element(env, element1, context, \"action\", [\"zoomOut\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1,\"disabled\",\"\");\n          dom.setAttribute(el1,\"class\",\"btn btn-success btn-rect\");\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"fa fa-minus\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1,\"class\",\"btn btn-success btn-rect\");\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"fa fa-plus\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          element(env, element0, context, \"action\", [\"zoomIn\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1,\"disabled\",\"\");\n          dom.setAttribute(el1,\"class\",\"btn btn-success btn-rect\");\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"fa fa-plus\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"span\");\n        dom.setAttribute(el1,\"class\",\"zoom-label\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"%\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, element = hooks.element, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element2 = dom.childAt(fragment, [2]);\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(element2,0,0);\n        var morph2 = dom.createMorphAt(fragment,4,4,contextualElement);\n        dom.insertBoundary(fragment, null);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"canZoomOut\")], {}, child0, child1);\n        element(env, element2, context, \"action\", [\"zoomRestore\"], {});\n        content(env, morph1, context, \"zoomValue\");\n        block(env, morph2, context, \"if\", [get(env, context, \"canZoomIn\")], {}, child2, child3);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/pilas-blockly', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1,\"disabled\",\"\");\n          dom.setAttribute(el1,\"class\",\"btn btn-info\");\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"fa fa-arrows-h\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" Alterar\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element6 = dom.childAt(fragment, [1]);\n          element(env, element6, context, \"action\", [\"alternar\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1,\"class\",\"btn btn-warning\");\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"fa fa-refresh\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" Reiniciar\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element5 = dom.childAt(fragment, [1]);\n          element(env, element5, context, \"action\", [\"reiniciar\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child2 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"      \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1,\"class\",\"btn btn-success\");\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"fa fa-play\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" Ejecutar\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element4 = dom.childAt(fragment, [1]);\n          element(env, element4, context, \"action\", [\"ejecutar\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child3 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1,\"class\",\"btn btn-warning\");\n          var el2 = dom.createTextNode(\"Ver Codigo\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element3 = dom.childAt(fragment, [1]);\n          element(env, element3, context, \"action\", [\"ver_codigo\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child4 = (function() {\n      var child0 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"class\",\"btn btn-success\");\n            var el2 = dom.createTextNode(\"Guardar\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element2 = dom.childAt(fragment, [1]);\n            element(env, element2, context, \"action\", [\"guardar\"], {});\n            return fragment;\n          }\n        };\n      }());\n      var child1 = (function() {\n        return {\n          isHTMLBars: true,\n          revision: \"Ember@1.11.0\",\n          blockParams: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          build: function build(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode(\"      \");\n            dom.appendChild(el0, el1);\n            var el1 = dom.createElement(\"button\");\n            dom.setAttribute(el1,\"class\",\"btn btn-success\");\n            var el2 = dom.createTextNode(\"Crear y Guardar\");\n            dom.appendChild(el1, el2);\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode(\"\\n\");\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          render: function render(context, env, contextualElement) {\n            var dom = env.dom;\n            var hooks = env.hooks, element = hooks.element;\n            dom.detectNamespace(contextualElement);\n            var fragment;\n            if (env.useFragmentCache && dom.canClone) {\n              if (this.cachedFragment === null) {\n                fragment = this.build(dom);\n                if (this.hasRendered) {\n                  this.cachedFragment = fragment;\n                } else {\n                  this.hasRendered = true;\n                }\n              }\n              if (this.cachedFragment) {\n                fragment = dom.cloneNode(this.cachedFragment, true);\n              }\n            } else {\n              fragment = this.build(dom);\n            }\n            var element1 = dom.childAt(fragment, [1]);\n            element(env, element1, context, \"action\", [\"guardar\"], {});\n            return fragment;\n          }\n        };\n      }());\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, block = hooks.block;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n          dom.insertBoundary(fragment, null);\n          dom.insertBoundary(fragment, 0);\n          block(env, morph0, context, \"if\", [get(env, context, \"model\")], {}, child0, child1);\n          return fragment;\n        }\n      };\n    }());\n    var child5 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1,\"class\",\"btn btn-info\");\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"fa fa-undo\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" Deshacer\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          element(env, element0, context, \"action\", [\"deshacer_cambio\"], {});\n          return fragment;\n        }\n      };\n    }());\n    var child6 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1,\"class\",\"btn btn-info disabled\");\n          var el2 = dom.createElement(\"i\");\n          dom.setAttribute(el2,\"class\",\"fa fa-undo\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\" Deshacer\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"pilas-blockly-botones\");\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"button\");\n        dom.setAttribute(el2,\"class\",\"btn btn-info border-right right\");\n        var el3 = dom.createElement(\"i\");\n        dom.setAttribute(el3,\"class\",\"fa fa-twitter\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\" Compartir en twitter\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"id\",\"contenedor-blockly\");\n        dom.setAttribute(el1,\"style\",\"height: 300px; width: 500px;\");\n        var el2 = dom.createTextNode(\" \");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, element = hooks.element, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element7 = dom.childAt(fragment, [0]);\n        var element8 = dom.childAt(element7, [11]);\n        var morph0 = dom.createMorphAt(element7,1,1);\n        var morph1 = dom.createMorphAt(element7,3,3);\n        var morph2 = dom.createMorphAt(element7,5,5);\n        var morph3 = dom.createMorphAt(element7,7,7);\n        var morph4 = dom.createMorphAt(element7,9,9);\n        var morph5 = dom.createMorphAt(fragment,4,4,contextualElement);\n        block(env, morph0, context, \"if\", [get(env, context, \"mostrarAlternar\")], {}, child0, null);\n        block(env, morph1, context, \"if\", [get(env, context, \"ejecutando\")], {}, child1, child2);\n        block(env, morph2, context, \"if\", [get(env, context, \"mostrarVerCodigo\")], {}, child3, null);\n        block(env, morph3, context, \"if\", [get(env, context, \"mostrarGuardar\")], {}, child4, null);\n        block(env, morph4, context, \"if\", [get(env, context, \"cola_deshacer\")], {}, child5, child6);\n        element(env, element8, context, \"action\", [\"compartir\"], {});\n        inline(env, morph5, context, \"partial\", [\"compartir\"], {});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/pilas-canvas', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"canvas\");\n        dom.setAttribute(el1,\"id\",\"canvas\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,2,2,contextualElement);\n        content(env, morph0, context, \"yield\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/components/pilas-desafio', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"img\");\n          dom.setAttribute(el1,\"class\",\"grayscale semi-transparente\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"ribbon right gray semi-transparente\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"a\");\n          var el3 = dom.createTextNode(\"Muy pronto\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, concat = hooks.concat, attribute = hooks.attribute;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [1]);\n          var attrMorph0 = dom.createAttrMorph(element1, 'src');\n          attribute(env, attrMorph0, element1, \"src\", concat(env, [\"images/desafios/\", get(env, context, \"nombre\"), \".png\"]));\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"img\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, concat = hooks.concat, attribute = hooks.attribute, element = hooks.element;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var attrMorph0 = dom.createAttrMorph(element0, 'src');\n          attribute(env, attrMorph0, element0, \"src\", concat(env, [\"images/desafios/\", get(env, context, \"nombre\"), \".png\"]));\n          element(env, element0, context, \"action\", [\"abrir\"], {});\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"pilas-desafio-titulo\");\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, element = hooks.element, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element2 = dom.childAt(fragment, [2]);\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(element2,0,0);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"deshabilitado\")], {}, child0, child1);\n        element(env, element2, context, \"action\", [\"abrir\"], {});\n        content(env, morph1, context, \"titulo\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/desafios/error', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Lo siento, el desafío no se puede cargar.\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/desafios/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"contenido-principal\");\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h1\");\n        var el3 = dom.createTextNode(\"Desafíos\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"Estos son los desafíos disponibles parar realizar.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, inline = hooks.inline;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element0,5,5);\n        var morph1 = dom.createMorphAt(element0,7,7);\n        var morph2 = dom.createMorphAt(element0,9,9);\n        var morph3 = dom.createMorphAt(element0,11,11);\n        inline(env, morph0, context, \"pilas-desafio\", [], {\"nombre\": \"alien\", \"titulo\": \"El alien y las tuercas\", \"onSelect\": \"onSelect\"});\n        inline(env, morph1, context, \"pilas-desafio\", [], {\"nombre\": \"ElObreroCopado\", \"titulo\": \"El obrero copado\", \"onSelect\": \"onSelect\"});\n        inline(env, morph2, context, \"pilas-desafio\", [], {\"nombre\": \"vampiro\", \"titulo\": \"Pesadillas de vampiro\", \"deshabilitado\": true});\n        inline(env, morph3, context, \"pilas-desafio\", [], {\"nombre\": \"nave\", \"titulo\": \"Invasor espacial\", \"deshabilitado\": true});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/desafios/nombre', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"contenedor-editor\");\n        dom.setAttribute(el1,\"id\",\"contenedor-editor\");\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"panel-pilas\");\n        dom.setAttribute(el2,\"id\",\"panel-pilas\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"panel-ayuda\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"h4\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"panel-derecho\");\n        dom.setAttribute(el2,\"id\",\"panel-derecho\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element1, [3]);\n        var morph0 = dom.createMorphAt(element1,1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element2, [1]),0,0);\n        var morph2 = dom.createMorphAt(dom.childAt(element2, [3]),0,0);\n        var morph3 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n        inline(env, morph0, context, \"pilas-canvas\", [], {\"actividad\": get(env, context, \"model.actividad\")});\n        content(env, morph1, context, \"actividad.nombre\");\n        content(env, morph2, context, \"actividad.enunciado\");\n        inline(env, morph3, context, \"pilas-blockly\", [], {\"actividad\": get(env, context, \"model.actividad\"), \"reiniciar\": \"reiniciar\"});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/editor', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"contenedor-editor\");\n        dom.setAttribute(el1,\"id\",\"contenedor-editor\");\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"panel-pilas\");\n        dom.setAttribute(el2,\"id\",\"panel-pilas\");\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"panel-ayuda\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"panel-derecho\");\n        dom.setAttribute(el2,\"id\",\"panel-derecho\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, inline = hooks.inline, content = hooks.content, get = hooks.get;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1]);\n        var morph0 = dom.createMorphAt(element1,1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element1, [3, 1]),0,0);\n        var morph2 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n        inline(env, morph0, context, \"pilas-canvas\", [], {\"onready\": \"reiniciar\"});\n        content(env, morph1, context, \"actividad.enunciado\");\n        inline(env, morph2, context, \"pilas-blockly\", [], {\"model\": get(env, context, \"model\"), \"guardar\": \"guardar\", \"reiniciar\": \"reiniciar\", \"registrarPrimerCodigo\": \"registrarPrimerCodigo\", \"actividad\": get(env, context, \"actividad\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/galeria', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"div\");\n          dom.setAttribute(el1,\"class\",\"galeria-juego\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"galeria-juego-acciones\");\n          var el3 = dom.createElement(\"button\");\n          dom.setAttribute(el3,\"class\",\"btn btn-danger btn-xs\");\n          var el4 = dom.createElement(\"i\");\n          dom.setAttribute(el4,\"class\",\"fa fa-trash\");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"galeria-juego-preview\");\n          var el3 = dom.createElement(\"img\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"div\");\n          dom.setAttribute(el2,\"class\",\"galeria-juego-titulo\");\n          var el3 = dom.createComment(\"\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, get = hooks.get, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1]);\n          var element1 = dom.childAt(element0, [1, 0]);\n          var element2 = dom.childAt(element0, [3]);\n          var element3 = dom.childAt(element2, [0]);\n          var morph0 = dom.createMorphAt(dom.childAt(element0, [5]),0,0);\n          element(env, element1, context, \"action\", [\"eliminar\", get(env, context, \"juego\")], {});\n          element(env, element2, context, \"action\", [\"abrir\", get(env, context, \"juego\")], {});\n          element(env, element3, context, \"bindAttr\", [], {\"src\": get(env, context, \"juego.imagen\")});\n          content(env, morph0, context, \"juego.nombre\");\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"Parece que no hay ningún juego creado...\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"contenido-principal\");\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h1\");\n        var el3 = dom.createTextNode(\"Galería\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element4 = dom.childAt(fragment, [0]);\n        var morph0 = dom.createMorphAt(element4,3,3);\n        var morph1 = dom.createMorphAt(element4,5,5);\n        block(env, morph0, context, \"each\", [get(env, context, \"model\")], {\"keyword\": \"juego\"}, child0, child1);\n        content(env, morph1, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/iframe', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"style\");\n          var el2 = dom.createTextNode(\"\\n    .contenedor-editor {\\n      top: 0px !important;\\n    }\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"contenedor-editor\");\n        dom.setAttribute(el1,\"id\",\"contenedor-editor\");\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"panel-pilas\");\n        dom.setAttribute(el2,\"id\",\"panel-pilas\");\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"panel-ayuda\");\n        var el4 = dom.createTextNode(\"\\n\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"panel-derecho\");\n        dom.setAttribute(el2,\"id\",\"panel-derecho\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block, inline = hooks.inline, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [2]);\n        var element1 = dom.childAt(element0, [1]);\n        var morph0 = dom.createMorphAt(fragment,0,0,contextualElement);\n        var morph1 = dom.createMorphAt(element1,1,1);\n        var morph2 = dom.createMorphAt(dom.childAt(element1, [3, 1]),0,0);\n        var morph3 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n        dom.insertBoundary(fragment, 0);\n        block(env, morph0, context, \"if\", [get(env, context, \"layout\")], {}, child0, child1);\n        inline(env, morph1, context, \"pilas-canvas\", [], {\"onready\": \"reiniciar\"});\n        content(env, morph2, context, \"actividad.enunciado\");\n        inline(env, morph3, context, \"pilas-blockly\", [], {\"model\": get(env, context, \"model\"), \"mostrarAlternar\": false, \"mostrarGuardar\": false, \"mostrarVerCodigo\": false, \"guardar\": \"guardar\", \"reiniciar\": \"reiniciar\", \"registrarPrimerCodigo\": \"registrarPrimerCodigo\", \"actividad\": get(env, context, \"actividad\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/index', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"Desafíos\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"contenido-principal\");\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"box\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"img\");\n        dom.setAttribute(el3,\"src\",\"images/main-logo.png\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"br\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"\\n      ¡Hola!, te damos la bienvenida a \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"strong\");\n        var el5 = dom.createTextNode(\"pilas-engine-bloques\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\",\\n      una herramienta diseñana para a programar utilizando lógica y\\n      desafíos.\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"p\");\n        var el4 = dom.createTextNode(\"\\n      Ingresá en la sección \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      para comenzar.\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0, 1, 7]),1,1);\n        block(env, morph0, context, \"link-to\", [\"desafios\"], {}, child0, null);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/loading', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"contenido-principal\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"img\");\n        dom.setAttribute(el2,\"class\",\"spinner\");\n        dom.setAttribute(el2,\"src\",\"imagenes/spinner.gif\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/preferencia', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    var child0 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"button\");\n          dom.setAttribute(el2,\"class\",\"btn btn-success\");\n          var el3 = dom.createTextNode(\"Guardar\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"table\");\n          dom.setAttribute(el1,\"class\",\"table table-preferencias\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"tr\");\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"th\");\n          dom.setAttribute(el3,\"class\",\"etiqueta\");\n          var el4 = dom.createTextNode(\" Tu nombre: \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"td\");\n          var el4 = dom.createTextNode(\" \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\" \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element, get = hooks.get, inline = hooks.inline;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element1 = dom.childAt(fragment, [1, 1]);\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [3, 1, 3]),1,1);\n          element(env, element1, context, \"action\", [\"guardar\"], {});\n          inline(env, morph0, context, \"input\", [], {\"type\": \"text\", \"value\": get(env, context, \"model.nombre\")});\n          return fragment;\n        }\n      };\n    }());\n    var child1 = (function() {\n      return {\n        isHTMLBars: true,\n        revision: \"Ember@1.11.0\",\n        blockParams: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        build: function build(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"button\");\n          dom.setAttribute(el2,\"disabled\",\"\");\n          dom.setAttribute(el2,\"class\",\"btn btn-info\");\n          var el3 = dom.createTextNode(\"Editar\");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"table\");\n          dom.setAttribute(el1,\"class\",\"table table-preferencias\");\n          var el2 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createElement(\"tr\");\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"th\");\n          dom.setAttribute(el3,\"class\",\"etiqueta\");\n          var el4 = dom.createTextNode(\" Tu nombre: \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n      \");\n          dom.appendChild(el2, el3);\n          var el3 = dom.createElement(\"td\");\n          var el4 = dom.createTextNode(\" sin editar \");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createComment(\"\");\n          dom.appendChild(el3, el4);\n          var el4 = dom.createTextNode(\" \");\n          dom.appendChild(el3, el4);\n          dom.appendChild(el2, el3);\n          var el3 = dom.createTextNode(\"\\n    \");\n          dom.appendChild(el2, el3);\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\"\\n  \");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        render: function render(context, env, contextualElement) {\n          var dom = env.dom;\n          var hooks = env.hooks, element = hooks.element, content = hooks.content;\n          dom.detectNamespace(contextualElement);\n          var fragment;\n          if (env.useFragmentCache && dom.canClone) {\n            if (this.cachedFragment === null) {\n              fragment = this.build(dom);\n              if (this.hasRendered) {\n                this.cachedFragment = fragment;\n              } else {\n                this.hasRendered = true;\n              }\n            }\n            if (this.cachedFragment) {\n              fragment = dom.cloneNode(this.cachedFragment, true);\n            }\n          } else {\n            fragment = this.build(dom);\n          }\n          var element0 = dom.childAt(fragment, [1, 1]);\n          var morph0 = dom.createMorphAt(dom.childAt(fragment, [3, 1, 3]),1,1);\n          element(env, element0, context, \"action\", [\"editar\"], {});\n          content(env, morph0, context, \"model.nombre\");\n          return fragment;\n        }\n      };\n    }());\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"contenido-principal\");\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h1\");\n        var el3 = dom.createTextNode(\"Preferencias\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"Desde esta sección vas a poder configurar\\ny describir tus datos personales.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"p\");\n        var el3 = dom.createTextNode(\"La información de esta sección servirá para\\n  que otros usuarios puedan ver tus códigos\\n  publicados.\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, block = hooks.block;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(dom.childAt(fragment, [0]),7,7);\n        block(env, morph0, context, \"if\", [get(env, context, \"edicion\")], {}, child0, child1);\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/test', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1,\"class\",\"contenedor-editor\");\n        dom.setAttribute(el1,\"id\",\"contenedor-editor\");\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"panel-pilas\");\n        dom.setAttribute(el2,\"id\",\"panel-pilas\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3,\"class\",\"panel-ayuda\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"h4\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2,\"class\",\"panel-derecho\");\n        dom.setAttribute(el2,\"id\",\"panel-derecho\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, get = hooks.get, inline = hooks.inline, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element1, [3]);\n        var morph0 = dom.createMorphAt(element1,1,1);\n        var morph1 = dom.createMorphAt(dom.childAt(element2, [1]),0,0);\n        var morph2 = dom.createMorphAt(dom.childAt(element2, [3]),0,0);\n        var morph3 = dom.createMorphAt(dom.childAt(element0, [3]),1,1);\n        inline(env, morph0, context, \"pilas-canvas\", [], {\"actividad\": get(env, context, \"model.actividad\")});\n        content(env, morph1, context, \"actividad.nombre\");\n        content(env, morph2, context, \"actividad.enunciado\");\n        inline(env, morph3, context, \"pilas-blockly\", [], {\"actividad\": get(env, context, \"model.actividad\")});\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/templates/tips', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = Ember.HTMLBars.template((function() {\n    return {\n      isHTMLBars: true,\n      revision: \"Ember@1.11.0\",\n      blockParams: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      build: function build(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"p\");\n        var el2 = dom.createTextNode(\"Ejecutá \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"ember watch\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\" para activar\\nel modo \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"code\");\n        var el3 = dom.createTextNode(\"livereload\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\".\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"ul\");\n        var el2 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"li\");\n        var el3 = dom.createElement(\"a\");\n        dom.setAttribute(el3,\"href\",\"/tests/index.html\");\n        var el4 = dom.createTextNode(\"Run tests\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      render: function render(context, env, contextualElement) {\n        var dom = env.dom;\n        var hooks = env.hooks, content = hooks.content;\n        dom.detectNamespace(contextualElement);\n        var fragment;\n        if (env.useFragmentCache && dom.canClone) {\n          if (this.cachedFragment === null) {\n            fragment = this.build(dom);\n            if (this.hasRendered) {\n              this.cachedFragment = fragment;\n            } else {\n              this.hasRendered = true;\n            }\n          }\n          if (this.cachedFragment) {\n            fragment = dom.cloneNode(this.cachedFragment, true);\n          }\n        } else {\n          fragment = this.build(dom);\n        }\n        var morph0 = dom.createMorphAt(fragment,4,4,contextualElement);\n        content(env, morph0, context, \"outlet\");\n        return fragment;\n      }\n    };\n  }()));\n\n});","define('pilas-engine-bloques/tests/actividades.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('actividades.js should pass jshint', function() { \n    ok(false, 'actividades.js should pass jshint.\\nactividades.js: line 1014, col 25, \\'EscenaAlien\\' is already defined.\\nactividades.js: line 1013, col 5, \\'__extends\\' is not defined.\\nactividades.js: line 1072, col 4, \\'Base\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('pilas-engine-bloques/tests/actividades/actividadAlien.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - actividades');\n  test('actividades/actividadAlien.js should pass jshint', function() { \n    ok(false, 'actividades/actividadAlien.js should pass jshint.\\nactividades/actividadAlien.js: line 7, col 25, \\'EscenaAlien\\' is already defined.\\nactividades/actividadAlien.js: line 6, col 5, \\'__extends\\' is not defined.\\nactividades/actividadAlien.js: line 65, col 4, \\'Base\\' is not defined.\\n\\n3 errors'); \n  });\n\n});","define('pilas-engine-bloques/tests/actividades/actividadElObreroCopado.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - actividades');\n  test('actividades/actividadElObreroCopado.js should pass jshint', function() { \n    ok(false, 'actividades/actividadElObreroCopado.js should pass jshint.\\nactividades/actividadElObreroCopado.js: line 77, col 11, \\'ElObreroCopado\\' is not defined.\\nactividades/actividadElObreroCopado.js: line 2, col 14, \\'Sensor\\' is defined but never used.\\n\\n2 errors'); \n  });\n\n});","define('pilas-engine-bloques/tests/actividades/bloques.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - actividades');\n  test('actividades/bloques.js should pass jshint', function() { \n    ok(true, 'actividades/bloques.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/adapters/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - adapters');\n  test('adapters/application.js should pass jshint', function() { \n    ok(true, 'adapters/application.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('app.js should pass jshint', function() { \n    ok(true, 'app.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/components/nw-zoom.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/nw-zoom.js should pass jshint', function() { \n    ok(true, 'components/nw-zoom.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/components/pilas-blockly.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/pilas-blockly.js should pass jshint', function() { \n    ok(false, 'components/pilas-blockly.js should pass jshint.\\ncomponents/pilas-blockly.js: line 160, col 18, \\'canvas\\' is not defined.\\ncomponents/pilas-blockly.js: line 61, col 9, \\'contenedor\\' is defined but never used.\\n\\n2 errors'); \n  });\n\n});","define('pilas-engine-bloques/tests/components/pilas-canvas.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/pilas-canvas.js should pass jshint', function() { \n    ok(false, 'components/pilas-canvas.js should pass jshint.\\ncomponents/pilas-canvas.js: line 10, col 20, \\'pilasengine\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('pilas-engine-bloques/tests/components/pilas-desafio.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - components');\n  test('components/pilas-desafio.js should pass jshint', function() { \n    ok(true, 'components/pilas-desafio.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/controllers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/application.js should pass jshint', function() { \n    ok(false, 'controllers/application.js should pass jshint.\\ncontrollers/application.js: line 3, col 5, \\'Bootstrap\\' is defined but never used.\\n\\n1 error'); \n  });\n\n});","define('pilas-engine-bloques/tests/controllers/desafios/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers/desafios');\n  test('controllers/desafios/index.js should pass jshint', function() { \n    ok(true, 'controllers/desafios/index.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/controllers/editor.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/editor.js should pass jshint', function() { \n    ok(false, 'controllers/editor.js should pass jshint.\\ncontrollers/editor.js: line 74, col 14, \\'Bootstrap\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('pilas-engine-bloques/tests/controllers/galeria.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/galeria.js should pass jshint', function() { \n    ok(true, 'controllers/galeria.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/controllers/iframe.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/iframe.js should pass jshint', function() { \n    ok(true, 'controllers/iframe.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/controllers/preferencia.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - controllers');\n  test('controllers/preferencia.js should pass jshint', function() { \n    ok(true, 'controllers/preferencia.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/helpers/resolver', ['exports', 'ember/resolver', 'pilas-engine-bloques/config/environment'], function (exports, Resolver, config) {\n\n  'use strict';\n\n  var resolver = Resolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: config['default'].modulePrefix,\n    podModulePrefix: config['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n\n});","define('pilas-engine-bloques/tests/helpers/resolver.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/resolver.js should pass jshint', function() { \n    ok(true, 'helpers/resolver.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/helpers/start-app', ['exports', 'ember', 'pilas-engine-bloques/app', 'pilas-engine-bloques/router', 'pilas-engine-bloques/config/environment'], function (exports, Ember, Application, Router, config) {\n\n  'use strict';\n\n\n\n  exports['default'] = startApp;\n  function startApp(attrs) {\n    var application;\n\n    var attributes = Ember['default'].merge({}, config['default'].APP);\n    attributes = Ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    Ember['default'].run(function () {\n      application = Application['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n\n});","define('pilas-engine-bloques/tests/helpers/start-app.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - helpers');\n  test('helpers/start-app.js should pass jshint', function() { \n    ok(true, 'helpers/start-app.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/helpers/validate-properties', ['exports', 'ember', 'ember-qunit'], function (exports, Ember, ember_qunit) {\n\n  'use strict';\n\n  exports.testValidPropertyValues = testValidPropertyValues;\n  exports.testInvalidPropertyValues = testInvalidPropertyValues;\n\n  var run = Ember['default'].run;\n\n  function validateValues(object, propertyName, values, isTestForValid) {\n    var promise = null;\n    var validatedValues = [];\n\n    values.forEach(function (value) {\n      function handleValidation(errors) {\n        var hasErrors = object.get(\"errors.\" + propertyName + \".firstObject\");\n        if (hasErrors && !isTestForValid || !hasErrors && isTestForValid) {\n          validatedValues.push(value);\n        }\n      }\n\n      run(object, \"set\", propertyName, value);\n\n      var objectPromise = null;\n      run(function () {\n        objectPromise = object.validate().then(handleValidation, handleValidation);\n      });\n\n      // Since we are setting the values in a different run loop as we are validating them,\n      // we need to chain the promises so that they run sequentially. The wrong value will\n      // be validated if the promises execute concurrently\n      promise = promise ? promise.then(objectPromise) : objectPromise;\n    });\n\n    return promise.then(function () {\n      return validatedValues;\n    });\n  }\n\n  function testPropertyValues(propertyName, values, isTestForValid, context) {\n    var validOrInvalid = isTestForValid ? \"Valid\" : \"Invalid\";\n    var testName = validOrInvalid + \" \" + propertyName;\n\n    ember_qunit.test(testName, function (assert) {\n      var object = this.subject();\n\n      if (context && typeof context === \"function\") {\n        context(object);\n      }\n\n      // Use QUnit.dump.parse so null and undefined can be printed as literal 'null' and\n      // 'undefined' strings in the assert message.\n      var valuesString = QUnit.dump.parse(values).replace(/\\n(\\s+)?/g, \"\").replace(/,/g, \", \");\n      var assertMessage = \"Expected \" + propertyName + \" to have \" + validOrInvalid.toLowerCase() + \" values: \" + valuesString;\n\n      return validateValues(object, propertyName, values, isTestForValid).then(function (validatedValues) {\n        assert.deepEqual(validatedValues, values, assertMessage);\n      });\n    });\n  }\n  function testValidPropertyValues(propertyName, values, context) {\n    testPropertyValues(propertyName, values, true, context);\n  }\n\n  function testInvalidPropertyValues(propertyName, values, context) {\n    testPropertyValues(propertyName, values, false, context);\n  }\n\n});","define('pilas-engine-bloques/tests/models/galeria.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/galeria.js should pass jshint', function() { \n    ok(true, 'models/galeria.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/models/preferencium.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - models');\n  test('models/preferencium.js should pass jshint', function() { \n    ok(true, 'models/preferencium.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/router.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('router.js should pass jshint', function() { \n    ok(true, 'router.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/routes/desafios.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/desafios.js should pass jshint', function() { \n    ok(true, 'routes/desafios.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/routes/desafios/nombre.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes/desafios');\n  test('routes/desafios/nombre.js should pass jshint', function() { \n    ok(true, 'routes/desafios/nombre.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/routes/editor.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/editor.js should pass jshint', function() { \n    ok(true, 'routes/editor.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/routes/galeria.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/galeria.js should pass jshint', function() { \n    ok(true, 'routes/galeria.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/routes/iframe.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/iframe.js should pass jshint', function() { \n    ok(true, 'routes/iframe.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/routes/index.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/index.js should pass jshint', function() { \n    ok(true, 'routes/index.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/routes/preferencia.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/preferencia.js should pass jshint', function() { \n    ok(true, 'routes/preferencia.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/routes/test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/test.js should pass jshint', function() { \n    ok(true, 'routes/test.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/routes/tips.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - routes');\n  test('routes/tips.js should pass jshint', function() { \n    ok(true, 'routes/tips.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/serializers/application.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - serializers');\n  test('serializers/application.js should pass jshint', function() { \n    ok(true, 'serializers/application.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/services/actividades.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - services');\n  test('services/actividades.js should pass jshint', function() { \n    ok(false, 'services/actividades.js should pass jshint.\\nservices/actividades.js: line 14, col 14, \\'CambioDeJSDeBlocky\\' is defined but never used.\\nservices/actividades.js: line 16, col 62, \\'Accion\\' is defined but never used.\\nservices/actividades.js: line 17, col 6, \\'Sensor\\' is defined but never used.\\nservices/actividades.js: line 40, col 5, \\'Repetir\\' is defined but never used.\\nservices/actividades.js: line 80, col 5, \\'Si\\' is defined but never used.\\nservices/actividades.js: line 108, col 5, \\'Sino\\' is defined but never used.\\nservices/actividades.js: line 142, col 5, \\'Hasta\\' is defined but never used.\\nservices/actividades.js: line 177, col 5, \\'Numero\\' is defined but never used.\\nservices/actividades.js: line 184, col 5, \\'OpAritmetica\\' is defined but never used.\\nservices/actividades.js: line 191, col 5, \\'Booleano\\' is defined but never used.\\nservices/actividades.js: line 198, col 5, \\'OpComparacion\\' is defined but never used.\\nservices/actividades.js: line 205, col 5, \\'OpLogica\\' is defined but never used.\\nservices/actividades.js: line 212, col 5, \\'OpNegacion\\' is defined but never used.\\n\\n13 errors'); \n  });\n\n});","define('pilas-engine-bloques/tests/services/browser.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - services');\n  test('services/browser.js should pass jshint', function() { \n    ok(false, 'services/browser.js should pass jshint.\\nservices/browser.js: line 10, col 28, \\'require\\' is not defined.\\n\\n1 error'); \n  });\n\n});","define('pilas-engine-bloques/tests/services/environment.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - services');\n  test('services/environment.js should pass jshint', function() { \n    ok(true, 'services/environment.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/services/twitter.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - services');\n  test('services/twitter.js should pass jshint', function() { \n    ok(false, 'services/twitter.js should pass jshint.\\nservices/twitter.js: line 4, col 7, Redefinition of \\'URL\\'.\\nservices/twitter.js: line 9, col 7, \\'$\\' is not defined.\\nservices/twitter.js: line 21, col 39, \\'errorThrown\\' is defined but never used.\\nservices/twitter.js: line 21, col 31, \\'status\\' is defined but never used.\\n\\n4 errors'); \n  });\n\n});","define('pilas-engine-bloques/tests/services/zoom.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - services');\n  test('services/zoom.js should pass jshint', function() { \n    ok(true, 'services/zoom.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/test-helper', ['pilas-engine-bloques/tests/helpers/resolver', 'ember-qunit'], function (resolver, ember_qunit) {\n\n\t'use strict';\n\n\tember_qunit.setResolver(resolver['default']);\n\n});","define('pilas-engine-bloques/tests/test-helper.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('test-helper.js should pass jshint', function() { \n    ok(true, 'test-helper.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/transitions.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - .');\n  test('transitions.js should pass jshint', function() { \n    ok(true, 'transitions.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/unit/components/pilas-desafio-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleForComponent(\"pilas-desafio\", {});\n\n  ember_qunit.test(\"it renders\", function (assert) {\n    assert.expect(2);\n\n    // Creates the component instance\n    var component = this.subject();\n    assert.equal(component._state, \"preRender\");\n\n    // Renders the component to the page\n    this.render();\n    assert.equal(component._state, \"inDOM\");\n  });\n\n  // Specify the other units that are required for this test\n  // needs: ['component:foo', 'helper:bar']\n\n});","define('pilas-engine-bloques/tests/unit/components/pilas-desafio-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/components');\n  test('unit/components/pilas-desafio-test.js should pass jshint', function() { \n    ok(true, 'unit/components/pilas-desafio-test.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/unit/controllers/desafios-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"controller:desafios\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var controller = this.subject();\n    assert.ok(controller);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('pilas-engine-bloques/tests/unit/controllers/desafios-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/controllers');\n  test('unit/controllers/desafios-test.js should pass jshint', function() { \n    ok(true, 'unit/controllers/desafios-test.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/unit/routes/desafios-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:desafios\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('pilas-engine-bloques/tests/unit/routes/desafios-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/desafios-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/desafios-test.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/unit/routes/desafios.index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:desafios.index\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('pilas-engine-bloques/tests/unit/routes/desafios.index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/desafios.index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/desafios.index-test.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/unit/routes/index-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:index\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('pilas-engine-bloques/tests/unit/routes/index-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/index-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/index-test.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/unit/routes/test-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:test\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('pilas-engine-bloques/tests/unit/routes/test-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/test-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/test-test.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/unit/routes/tips-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"route:tips\", {});\n\n  ember_qunit.test(\"it exists\", function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['controller:foo']\n\n});","define('pilas-engine-bloques/tests/unit/routes/tips-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/routes');\n  test('unit/routes/tips-test.js should pass jshint', function() { \n    ok(true, 'unit/routes/tips-test.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/unit/services/actividades-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"service:actividades\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['service:foo']\n\n});","define('pilas-engine-bloques/tests/unit/services/actividades-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/services');\n  test('unit/services/actividades-test.js should pass jshint', function() { \n    ok(true, 'unit/services/actividades-test.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/unit/services/browser-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"service:browser\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['service:foo']\n\n});","define('pilas-engine-bloques/tests/unit/services/browser-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/services');\n  test('unit/services/browser-test.js should pass jshint', function() { \n    ok(true, 'unit/services/browser-test.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/unit/services/environment-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"service:environment\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['service:foo']\n\n});","define('pilas-engine-bloques/tests/unit/services/environment-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/services');\n  test('unit/services/environment-test.js should pass jshint', function() { \n    ok(true, 'unit/services/environment-test.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/unit/services/twitter-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"service:twitter\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['service:foo']\n\n});","define('pilas-engine-bloques/tests/unit/services/twitter-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/services');\n  test('unit/services/twitter-test.js should pass jshint', function() { \n    ok(true, 'unit/services/twitter-test.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/tests/unit/services/zoom-test', ['ember-qunit'], function (ember_qunit) {\n\n  'use strict';\n\n  ember_qunit.moduleFor(\"service:zoom\", {});\n\n  // Replace this with your real tests.\n  ember_qunit.test(\"it exists\", function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n\n  // Specify the other units that are required for this test.\n  // needs: ['service:foo']\n\n});","define('pilas-engine-bloques/tests/unit/services/zoom-test.jshint', function () {\n\n  'use strict';\n\n  module('JSHint - unit/services');\n  test('unit/services/zoom-test.js should pass jshint', function() { \n    ok(true, 'unit/services/zoom-test.js should pass jshint.'); \n  });\n\n});","define('pilas-engine-bloques/transitions', ['exports'], function (exports) {\n\n  'use strict';\n\n  exports['default'] = function () {\n\n    /* INDEX */\n\n    this.transition(this.fromRoute(\"index\"), this.toRoute(\"desafios\"), this.use(\"fade\"), this.reverse(\"fade\"));\n\n    this.transition(this.fromRoute(\"index\"), this.toRoute(\"galeria\"), this.use(\"fade\"), this.reverse(\"fade\"));\n\n    this.transition(this.fromRoute(\"index\"), this.toRoute(\"preferencia\"), this.use(\"fade\"), this.reverse(\"fade\"));\n\n    /* DESAFIOS */\n\n    this.transition(this.fromRoute(\"desafios\"), this.toRoute(\"galeria\"), this.use(\"fade\"), this.reverse(\"fade\"));\n\n    this.transition(this.fromRoute(\"desafios\"), this.toRoute(\"preferencia\"), this.use(\"fade\"), this.reverse(\"fade\"));\n\n    /* GALERIA */\n\n    this.transition(this.fromRoute(\"galeria\"), this.toRoute(\"preferencia\"), this.use(\"fade\"), this.reverse(\"fade\"));\n  };\n\n});","define('pilas-engine-bloques/transitions/cross-fade', ['exports', 'liquid-fire'], function (exports, liquid_fire) {\n\n  'use strict';\n\n\n  exports['default'] = crossFade;\n  // BEGIN-SNIPPET cross-fade-definition\n  function crossFade() {\n    var opts = arguments[0] === undefined ? {} : arguments[0];\n\n    liquid_fire.stop(this.oldElement);\n    return liquid_fire.Promise.all([liquid_fire.animate(this.oldElement, { opacity: 0 }, opts), liquid_fire.animate(this.newElement, { opacity: [opts.maxOpacity || 1, 0] }, opts)]);\n  } // END-SNIPPET\n\n});","define('pilas-engine-bloques/transitions/default', ['exports', 'liquid-fire'], function (exports, liquid_fire) {\n\n  'use strict';\n\n\n\n  // This is what we run when no animation is asked for. It just sets\n  // the newly-added element to visible (because we always start them\n  // out invisible so that transitions can control their initial\n  // appearance).\n  exports['default'] = defaultTransition;\n  function defaultTransition() {\n    if (this.newElement) {\n      this.newElement.css({ visibility: \"\" });\n    }\n    return liquid_fire.Promise.resolve();\n  }\n\n});","define('pilas-engine-bloques/transitions/explode', ['exports', 'ember', 'liquid-fire'], function (exports, Ember, liquid_fire) {\n\n  'use strict';\n\n\n\n  // Explode is not, by itself, an animation. It exists to pull apart\n  // other elements so that each of the pieces can be targeted by\n  // animations.\n\n  exports['default'] = explode;\n\n  function explode() {\n    var _this = this;\n\n    for (var _len = arguments.length, pieces = Array(_len), _key = 0; _key < _len; _key++) {\n      pieces[_key] = arguments[_key];\n    }\n\n    var sawBackgroundPiece = false;\n    var promises = pieces.map(function (piece) {\n      if (piece.matchBy) {\n        return matchAndExplode(_this, piece);\n      } else if (piece.pick || piece.pickOld || piece.pickNew) {\n        return explodePiece(_this, piece);\n      } else {\n        sawBackgroundPiece = true;\n        return runAnimation(_this, piece);\n      }\n    });\n    if (!sawBackgroundPiece) {\n      if (this.newElement) {\n        this.newElement.css({ visibility: \"\" });\n      }\n      if (this.oldElement) {\n        this.oldElement.css({ visibility: \"hidden\" });\n      }\n    }\n    return liquid_fire.Promise.all(promises);\n  }\n\n  function explodePiece(context, piece) {\n    var childContext = Ember['default'].copy(context);\n    var selectors = [piece.pickOld || piece.pick, piece.pickNew || piece.pick];\n    var cleanupOld, cleanupNew;\n\n    if (selectors[0] || selectors[1]) {\n      cleanupOld = _explodePart(context, \"oldElement\", childContext, selectors[0]);\n      cleanupNew = _explodePart(context, \"newElement\", childContext, selectors[1]);\n      if (!cleanupOld && !cleanupNew) {\n        return liquid_fire.Promise.resolve();\n      }\n    }\n\n    return runAnimation(childContext, piece)[\"finally\"](function () {\n      if (cleanupOld) {\n        cleanupOld();\n      }\n      if (cleanupNew) {\n        cleanupNew();\n      }\n    });\n  }\n\n  function _explodePart(context, field, childContext, selector) {\n    var child, childOffset, width, height, newChild;\n    var elt = context[field];\n    childContext[field] = null;\n    if (elt && selector) {\n      child = elt.find(selector);\n      if (child.length > 0) {\n        childOffset = child.offset();\n        width = child.outerWidth();\n        height = child.outerHeight();\n        newChild = child.clone();\n\n        // Hide the original element\n        child.css({ visibility: \"hidden\" });\n\n        // If the original element's parent was hidden, hide our clone\n        // too.\n        if (elt.css(\"visibility\") === \"hidden\") {\n          newChild.css({ visibility: \"hidden\" });\n        }\n        newChild.appendTo(elt.parent());\n        newChild.outerWidth(width);\n        newChild.outerHeight(height);\n        var newParentOffset = newChild.offsetParent().offset();\n        newChild.css({\n          position: \"absolute\",\n          top: childOffset.top - newParentOffset.top,\n          left: childOffset.left - newParentOffset.left,\n          margin: 0\n        });\n\n        // Pass the clone to the next animation\n        childContext[field] = newChild;\n        return function cleanup() {\n          newChild.remove();\n          child.css({ visibility: \"\" });\n        };\n      }\n    }\n  }\n\n  function animationFor(context, piece) {\n    var name, args, func;\n    if (!piece.use) {\n      throw new Error(\"every argument to the 'explode' animation must include a followup animation to 'use'\");\n    }\n    if (Ember['default'].isArray(piece.use)) {\n      name = piece.use[0];\n      args = piece.use.slice(1);\n    } else {\n      name = piece.use;\n      args = [];\n    }\n    if (typeof name === \"function\") {\n      func = name;\n    } else {\n      func = context.lookup(name);\n    }\n    return function () {\n      return liquid_fire.Promise.resolve(func.apply(this, args));\n    };\n  }\n\n  function runAnimation(context, piece) {\n    return new liquid_fire.Promise(function (resolve, reject) {\n      animationFor(context, piece).apply(context).then(resolve, reject);\n    });\n  }\n\n  function matchAndExplode(context, piece) {\n    if (!context.oldElement) {\n      return liquid_fire.Promise.resolve();\n    }\n\n    var hits = Ember['default'].A(context.oldElement.find(\"[\" + piece.matchBy + \"]\").toArray());\n    return liquid_fire.Promise.all(hits.map(function (elt) {\n      return explodePiece(context, {\n        pick: \"[\" + piece.matchBy + \"=\" + Ember['default'].$(elt).attr(piece.matchBy) + \"]\",\n        use: piece.use\n      });\n    }));\n  }\n\n});","define('pilas-engine-bloques/transitions/fade', ['exports', 'liquid-fire'], function (exports, liquid_fire) {\n\n  'use strict';\n\n\n  exports['default'] = fade;\n\n  // BEGIN-SNIPPET fade-definition\n  function fade() {\n    var _this = this;\n\n    var opts = arguments[0] === undefined ? {} : arguments[0];\n\n    var firstStep;\n    var outOpts = opts;\n    var fadingElement = findFadingElement(this);\n\n    if (fadingElement) {\n      // We still have some older version that is in the process of\n      // fading out, so out first step is waiting for it to finish.\n      firstStep = liquid_fire.finish(fadingElement, \"fade-out\");\n    } else {\n      if (liquid_fire.isAnimating(this.oldElement, \"fade-in\")) {\n        // if the previous view is partially faded in, scale its\n        // fade-out duration appropriately.\n        outOpts = { duration: liquid_fire.timeSpent(this.oldElement, \"fade-in\") };\n      }\n      liquid_fire.stop(this.oldElement);\n      firstStep = liquid_fire.animate(this.oldElement, { opacity: 0 }, outOpts, \"fade-out\");\n    }\n    return firstStep.then(function () {\n      return liquid_fire.animate(_this.newElement, { opacity: [opts.maxOpacity || 1, 0] }, opts, \"fade-in\");\n    });\n  }\n\n  function findFadingElement(context) {\n    for (var i = 0; i < context.older.length; i++) {\n      var entry = context.older[i];\n      if (liquid_fire.isAnimating(entry.element, \"fade-out\")) {\n        return entry.element;\n      }\n    }\n    if (liquid_fire.isAnimating(context.oldElement, \"fade-out\")) {\n      return context.oldElement;\n    }\n  }\n  // END-SNIPPET\n\n});","define('pilas-engine-bloques/transitions/flex-grow', ['exports', 'liquid-fire'], function (exports, liquid_fire) {\n\n  'use strict';\n\n\n  exports['default'] = flexGrow;\n  function flexGrow(opts) {\n    liquid_fire.stop(this.oldElement);\n    return liquid_fire.Promise.all([liquid_fire.animate(this.oldElement, { \"flex-grow\": 0 }, opts), liquid_fire.animate(this.newElement, { \"flex-grow\": [1, 0] }, opts)]);\n  }\n\n});","define('pilas-engine-bloques/transitions/fly-to', ['exports', 'liquid-fire'], function (exports, liquid_fire) {\n\n  'use strict';\n\n\n\n  exports['default'] = flyTo;\n  function flyTo() {\n    var _this = this;\n\n    var opts = arguments[0] === undefined ? {} : arguments[0];\n\n    if (!this.newElement) {\n      return liquid_fire.Promise.resolve();\n    } else if (!this.oldElement) {\n      this.newElement.css({ visibility: \"\" });\n      return liquid_fire.Promise.resolve();\n    }\n\n    var oldOffset = this.oldElement.offset();\n    var newOffset = this.newElement.offset();\n\n    var motion = {\n      translateX: newOffset.left - oldOffset.left,\n      translateY: newOffset.top - oldOffset.top,\n      outerWidth: this.newElement.outerWidth(),\n      outerHeight: this.newElement.outerHeight()\n    };\n\n    this.newElement.css({ visibility: \"hidden\" });\n    return liquid_fire.animate(this.oldElement, motion, opts).then(function () {\n      _this.newElement.css({ visibility: \"\" });\n    });\n  }\n\n});","define('pilas-engine-bloques/transitions/move-over', ['exports', 'liquid-fire'], function (exports, liquid_fire) {\n\n  'use strict';\n\n\n\n  exports['default'] = moveOver;\n\n  function moveOver(dimension, direction, opts) {\n    var _this = this;\n\n    var oldParams = {},\n        newParams = {},\n        firstStep,\n        property,\n        measure;\n\n    if (dimension.toLowerCase() === \"x\") {\n      property = \"translateX\";\n      measure = \"width\";\n    } else {\n      property = \"translateY\";\n      measure = \"height\";\n    }\n\n    if (liquid_fire.isAnimating(this.oldElement, \"moving-in\")) {\n      firstStep = liquid_fire.finish(this.oldElement, \"moving-in\");\n    } else {\n      liquid_fire.stop(this.oldElement);\n      firstStep = liquid_fire.Promise.resolve();\n    }\n\n    return firstStep.then(function () {\n      var bigger = biggestSize(_this, measure);\n      oldParams[property] = bigger * direction + \"px\";\n      newParams[property] = [\"0px\", -1 * bigger * direction + \"px\"];\n\n      return liquid_fire.Promise.all([liquid_fire.animate(_this.oldElement, oldParams, opts), liquid_fire.animate(_this.newElement, newParams, opts, \"moving-in\")]);\n    });\n  }\n\n  function biggestSize(context, dimension) {\n    var sizes = [];\n    if (context.newElement) {\n      sizes.push(parseInt(context.newElement.css(dimension), 10));\n      sizes.push(parseInt(context.newElement.parent().css(dimension), 10));\n    }\n    if (context.oldElement) {\n      sizes.push(parseInt(context.oldElement.css(dimension), 10));\n      sizes.push(parseInt(context.oldElement.parent().css(dimension), 10));\n    }\n    return Math.max.apply(null, sizes);\n  }\n\n});","define('pilas-engine-bloques/transitions/scale', ['exports', 'liquid-fire'], function (exports, liquid_fire) {\n\n  'use strict';\n\n\n\n  exports['default'] = scale;\n  function scale() {\n    var _this = this;\n\n    var opts = arguments[0] === undefined ? {} : arguments[0];\n\n    return liquid_fire.animate(this.oldElement, { scale: [0.2, 1] }, opts).then(function () {\n      return liquid_fire.animate(_this.newElement, { scale: [1, 0.2] }, opts);\n    });\n  }\n\n});","define('pilas-engine-bloques/transitions/scroll-then', ['exports', 'ember'], function (exports, Ember) {\n\n  'use strict';\n\n  exports['default'] = function (nextTransitionName, options) {\n    var _this = this;\n\n    for (var _len = arguments.length, rest = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      rest[_key - 2] = arguments[_key];\n    }\n\n    Ember['default'].assert(\"You must provide a transition name as the first argument to scrollThen. Example: this.use('scrollThen', 'toLeft')\", \"string\" === typeof nextTransitionName);\n\n    var el = document.getElementsByTagName(\"html\");\n    var nextTransition = this.lookup(nextTransitionName);\n    if (!options) {\n      options = {};\n    }\n\n    Ember['default'].assert(\"The second argument to scrollThen is passed to Velocity's scroll function and must be an object\", \"object\" === typeof options);\n\n    // set scroll options via: this.use('scrollThen', 'ToLeft', {easing: 'spring'})\n    options = Ember['default'].merge({ duration: 500, offset: 0 }, options);\n\n    // additional args can be passed through after the scroll options object\n    // like so: this.use('scrollThen', 'moveOver', {duration: 100}, 'x', -1);\n\n    return window.$.Velocity(el, \"scroll\", options).then(function () {\n      nextTransition.apply(_this, rest);\n    });\n  };\n\n});","define('pilas-engine-bloques/transitions/to-down', ['exports', 'pilas-engine-bloques/transitions/move-over'], function (exports, moveOver) {\n\n  'use strict';\n\n  exports['default'] = function (opts) {\n    return moveOver['default'].call(this, \"y\", 1, opts);\n  };\n\n});","define('pilas-engine-bloques/transitions/to-left', ['exports', 'pilas-engine-bloques/transitions/move-over'], function (exports, moveOver) {\n\n  'use strict';\n\n  exports['default'] = function (opts) {\n    return moveOver['default'].call(this, \"x\", -1, opts);\n  };\n\n});","define('pilas-engine-bloques/transitions/to-right', ['exports', 'pilas-engine-bloques/transitions/move-over'], function (exports, moveOver) {\n\n  'use strict';\n\n  exports['default'] = function (opts) {\n    return moveOver['default'].call(this, \"x\", 1, opts);\n  };\n\n});","define('pilas-engine-bloques/transitions/to-up', ['exports', 'pilas-engine-bloques/transitions/move-over'], function (exports, moveOver) {\n\n  'use strict';\n\n  exports['default'] = function (opts) {\n    return moveOver['default'].call(this, \"y\", -1, opts);\n  };\n\n});","/* jshint ignore:start */\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('pilas-engine-bloques/config/environment', ['ember'], function(Ember) {\n  var prefix = 'pilas-engine-bloques';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\nif (runningTests) {\n  require(\"pilas-engine-bloques/tests/test-helper\");\n} else {\n  require(\"pilas-engine-bloques/app\")[\"default\"].create({\"name\":\"pilas-engine-bloques\",\"version\":\"0.4.0\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappingsxNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzldrnrpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbjeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfftnrntGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxnzanJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxzxgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChnrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"pilas-engine-bloques.js"}